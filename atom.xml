<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小牛试一刀</title>
  <icon>https://www.gravatar.com/avatar/8faecf681b9bbd9ae3fc8a88c5268860</icon>
  <subtitle>斯人笔记本</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.imsry.cn/"/>
  <updated>2020-06-05T10:00:48.356Z</updated>
  <id>http://www.imsry.cn/</id>
  
  <author>
    <name>Anthony</name>
    <email>smoothest@yeah.net</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ESP-Touch智能配网是如何实现的</title>
    <link href="http://www.imsry.cn/posts/bf40eeb6.html"/>
    <id>http://www.imsry.cn/posts/bf40eeb6.html</id>
    <published>2020-06-03T10:40:58.000Z</published>
    <updated>2020-06-05T10:00:48.356Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>近年来物联网发展迅速，目前依旧是比较热门的领域，现今世界处处都是物联网，可谓无处不物联（哈哈，扯远了！）。我接触物联网这块比较晚，去年才开始入门，最早的实战项目就是将传感器上云，借助腾讯的<a href="https://cloud.tencent.com/document/product/634" target="_blank" rel="noopener">物联网通信平台</a>，我可以对传感器进行远程控制以及读取传感器采集到的数据。当然，这些都离不开网络（Internet）。设备上云的首要前提就是接入互联网，而接入互联网的方式有很多种（如：有线网络、无线WiFi、NB-IoT、移动蜂窝2G/3G/4G等），不同场景下自然有各自合适的网络接入方式。</p><p>我们现在生活中的很多智能家电都是通过WiFi接入的，不用我说大家也能举很多例子（像小米智能家居有小爱同学、空气净化器、电视、冰箱、洗衣机等blablabla~），这些设备刚到手的时候你一般都需要按照指导说明去下载个APP，然后绑定设备给设备配网，给设备配网可不像给手机连上WiFi那么容易，毕竟你买的小爱同学不能接鼠标键盘，也没有操作系统给你用。那么配网是如何完成的呢？</p><p><strong>快速配网的两种途径：</strong></p><ol><li>SoftAP配网</li><li>SmartConfig配网</li></ol><p>第一种很好理解，就类似给自己家里的路由器配置网络，你首先通过WiFi或者网线连接你家路由器，然后进入<a href="#">http://192.168.xxx.xxx</a>进行Web可视化配置，也有一些小型单片机，自己搭载了一个WiFi模组以AP模式运行，你通过指定的APP就可以与其建立通信并发送配置信息过去。但是这种配网方式比较繁琐，用户体验较差。</p><p>第二种就比较高级了，你只需要打开设备的配网开关，并在你的手机上连接即将给设备配置的WiFi网络，然后在App或者小程序上输入对应的密码并点击开始，设备能够在很短的时间内（大约7~30s）就可以完成网络的配置。</p><p><strong>这篇文章我将以我自己的学习成果来讲述SmartConfig配网的整个过程</strong></p><a id="more"></a><h2 id="ESP-Touch介绍"><a href="#ESP-Touch介绍" class="headerlink" title="ESP-Touch介绍"></a>ESP-Touch介绍</h2><blockquote><p>乐鑫⾃自主研发的 ESP-TOUCH 协议采⽤用的是 Smart Config(智能配置)技术，帮助⽤用户将 采⽤用 ESP8266EX 和 ESP32 的设备(以下简称“设备”)连接⾄至 Wi-Fi ⽹网络。⽤用户只需在⼿手 机上进⾏行行简单操作即可实现智能配置。整个过程如下图所示:</p></blockquote><p><img src="../uploads/2020/06/image-20200603184756638.png" alt="image-20200603193229562" style="zoom:50%;"></p><blockquote><p>由于设备在⼀一开始并未连接⾄至⽹网络，ESP-TOUCH App ⽆无法直接向设备发送信息。通过 ESP-TOUCH 通信协议，具备 Wi-Fi ⽹网络接⼊入能⼒力力的设备(例例如智能⼿手机)就可以向接 ⼊入点 (AP) 发送⼀一系列列 UDP 包，其中每⼀一包的⻓长度(即 Length 字段)都按照 ESP- TOUCH 通信协议进⾏行行编码，SSID 和密码就包含在 Length 字段中，随后设备便便可以获 得并解析出所需的信息。数据包结构如下图所示:</p></blockquote><p><img src="../uploads/2020/06/image-20200603193346042.png" alt="image-20200603193346042" style="zoom: 67%;"></p><p><strong>目前乐鑫公司的这套配网工具是开源的，相关的App可以直接在GitHub下载到，设备端相关的SDK也同样在GitHub开源：<a href="https://github.com/espressifAPP" target="_blank" rel="noopener">https://github.com/espressifAPP</a></strong></p><p>乐鑫官网关于ESP-Touch的简介和资源下载：<a href="https://www.espressif.com/zh-hans/products/software/esp-touch/overview" target="_blank" rel="noopener">https://www.espressif.com/zh-hans/products/software/esp-touch/overview</a></p><p>其官方中文版指导手册PDF下载地址：<a href="https://www.espressif.com/sites/default/files/documentation/esp-touch_user_guide_cn.pdf" target="_blank" rel="noopener">https://www.espressif.com/sites/default/files/documentation/esp-touch_user_guide_cn.pdf</a></p><h2 id="配网流程"><a href="#配网流程" class="headerlink" title="配网流程"></a>配网流程</h2><p>手机端处理流程如下图所示：</p><p><img src="../uploads/2020/06/ESPTouch-colored.jpg" alt="ESPTouch数据发送流程图" style="zoom: 50%;"></p><h3 id="获取AP的SSID、BSSID和密码等信息"><a href="#获取AP的SSID、BSSID和密码等信息" class="headerlink" title="获取AP的SSID、BSSID和密码等信息"></a>获取AP的SSID、BSSID和密码等信息</h3><p>一般来说，用户需要事先连接上需要给设备配置的WiFi信号（2.4 GHz），不过有的App可以通过终端OS的内部接口让用户在App页内选择WiFi信号并输入密码完成连接（如微信小程序）。这样App可以轻松获得AP的SSID、BSSID以及用户输入的与之对应的密码，继续完成后续步骤。</p><h3 id="组装GuideCode和DatumCode数据包"><a href="#组装GuideCode和DatumCode数据包" class="headerlink" title="组装GuideCode和DatumCode数据包"></a>组装GuideCode和DatumCode数据包</h3><h4 id="GuideCode"><a href="#GuideCode" class="headerlink" title="GuideCode"></a>GuideCode</h4><p>GuideCode即前导码，它四个包为一组，这四个包分别是长度为515/514/513/512的UDP数据包。通过Wireshark抓包我们可以清楚的看到：</p><p><img src="../uploads/2020/06/image-20200604150147952.png" alt="image-20200604150147952" style="zoom: 50%;"></p><p>并且每个包的内容都是完全用<code>1</code>填充，其Asccii码<code>0x31</code>：</p><p><img src="../uploads/2020/06/image-20200604152513579.png" alt="image-20200604152513579" style="zoom:33%;"></p><h4 id="DatumCode"><a href="#DatumCode" class="headerlink" title="DatumCode"></a>DatumCode</h4><p>DatumCode的前5部分组成有：totalLen、apPwdLen、apSsidCrc、apBssidCrc和totalXOR。</p><ol><li><p>totalLen：总数据长度</p><p>5（固定长度）+4（IP地址长度）+n1（密码长度）+n2（SSID长度）</p></li><li><p>apPwdLen：密码长度</p></li><li><p>apSsidCrc：SSID的CRC8结果</p></li><li><p>apBssidCrc：BSSID的CRC8结果</p></li><li><p>totalXOR：全部数据的异或结果</p></li></ol><blockquote><p>CRC的参数模型为：CRC-8/MAXIM，标准多项式为：x8+x5+x4+1</p></blockquote><p>后面紧接着的是Data数据，包括：IP地址（4字节）、password（n1字节）、SSID（n2字节）、BSSID（6字节）。</p><blockquote><p>!注意，Data的发送并不是有序的，每个有效数据会组装成连续的3个包，中间包会标识该组的序列号</p></blockquote><p>DatumCode数据包如下图所示：</p><p><img src="../uploads/2020/06/image-20200605171524739.png" alt="image-20200605171524739" style="zoom:33%;"></p><h3 id="创建UDPServer负责异步监听配网结果"><a href="#创建UDPServer负责异步监听配网结果" class="headerlink" title="创建UDPServer负责异步监听配网结果"></a>创建UDPServer负责异步监听配网结果</h3><blockquote><p> 如何知道设备配网成功？首先，设备开启SmartConfig功能时，自身处于Station/混杂模式，它会在所处环境中快速切换各条信道来抓取每个信道中的数据包，当遇到正在发送GuideCode数据包的信道时，锁定该信道并继续接收广播数据，直到收到足够的数据来解码出其中的WiFi密码然后连接Wifi。当成功连接WiFi后设备会向该网络发送多条重复的UDP广播，广播数据包中含有设备的BSSID和它在当前网络中的IP地址。</p></blockquote><p>创建一个监听端口为18266的UDPServer，并异步监听广播地址的数据包。</p><p>当有数据包（DataLen为11字节）过来的时候，可以尝试按照以下规则去读取其中的内容：</p><ul><li>数据包的序号从0开始</li><li>第1~第6字节为BSSID</li><li>第7~第10字节为IP地址</li></ul><p><img src="../uploads/2020/06/image-20200605093633160.png" alt="image-20200605093633160" style="zoom: 33%;"></p><p>上图所示的数据包解析结果为：</p><ul><li>BSSID：2c:f4:32:81:2a:c3</li><li>IP地址：c0.a8.7b.e0（192.168.123.224）</li></ul><p>拿到这样的数据后可以确定配网已经完成，可以中断客户端继续发送配网数据包，完成后续业务流程。</p><h3 id="创建UDPClient负责发送配网数据包"><a href="#创建UDPClient负责发送配网数据包" class="headerlink" title="创建UDPClient负责发送配网数据包"></a>创建UDPClient负责发送配网数据包</h3><blockquote><p>如何将配网数据包发送出去？创建UDPClient向广播地址255.255.255.255的7001端口循环发送！</p></blockquote><p><strong>GuideCode发送规则</strong></p><p>4个包为一组循环发送，每包发送间隔8毫秒。</p><p>2秒为一个周期，周期之后发送<code>DatumCode</code>。</p><p><strong>DatumCode的发送规则</strong></p><p>3个包（每个包9bit）为一组，每包发送间隔8毫秒，每组含一个有效数据，其组成格式如下表：</p><table><thead><tr><th>每组包序号</th><th>控制位(1bit)</th><th>高4位(4bit)</th><th>低4位(4bit)</th></tr></thead><tbody><tr><td>pkg1</td><td>0x00</td><td>crc的高4bit</td><td>data的高4bit</td></tr><tr><td>pkg2</td><td>0x01</td><td>传输序号（8bit都是序号自身）</td><td></td></tr><tr><td>pkg3</td><td>0x00</td><td>crc的低4bit</td><td>data的低4bit</td></tr></tbody></table><blockquote><p> 其中传输序号从0开始，每组序号在前一组序号上+1。</p><p>当数据发送时，必须要在每个包的基础上+40（协议规定要增加一个EXTRA_LEN）</p></blockquote><p>4秒为一个周期，周期之后重新开始发送<code>GuideCode</code>。</p><h3 id="按照流程执行"><a href="#按照流程执行" class="headerlink" title="按照流程执行"></a>按照流程执行</h3><p>根据流程图执行，文字描述如下：</p><ol><li>发送GuideCode，Len=515</li><li>发送GuideCode，Len=514</li><li>发送GuideCode，Len=513</li><li>发送GuideCode，Len=512</li><li>循环步骤1-4，直到2秒超时</li><li>发送DatumCode组</li><li>循环步骤6，直到4秒超时</li><li>从步骤1开始重新开始，直到整个过程45秒超时。</li></ol><h2 id="如何解码？"><a href="#如何解码？" class="headerlink" title="如何解码？"></a>如何解码？</h2><p>将数据包整理后如下表：</p><table><thead><tr><th>No.</th><th>DC1</th><th>DC2</th><th>DC3</th><th></th><th>DC1-40</th><th>DC2-40</th><th>DC3-40</th><th></th><th>HEX1</th><th>HEX2</th><th>HEX3</th><th></th><th>CRC8</th><th>Pack No.</th><th>Value</th></tr></thead><tbody><tr><td>1</td><td>186</td><td>296</td><td>107</td><td></td><td>146</td><td>256</td><td>67</td><td></td><td>0x92</td><td>0x100</td><td>0x43</td><td></td><td>0x94</td><td>0</td><td>0x23</td></tr><tr><td>2</td><td>56</td><td>297</td><td>100</td><td></td><td>16</td><td>257</td><td>60</td><td></td><td>0x10</td><td>0x101</td><td>0x3C</td><td></td><td>0x13</td><td>1</td><td>0xC</td></tr><tr><td>3</td><td>169</td><td>298</td><td>246</td><td></td><td>129</td><td>258</td><td>206</td><td></td><td>0x81</td><td>0x102</td><td>0xCE</td><td></td><td>0x8C</td><td>2</td><td>0x1E</td></tr><tr><td>4</td><td>156</td><td>299</td><td>184</td><td></td><td>116</td><td>259</td><td>144</td><td></td><td>0x74</td><td>0x103</td><td>0x90</td><td></td><td>0x79</td><td>3</td><td>0x40</td></tr><tr><td>5</td><td>100</td><td>300</td><td>82</td><td></td><td>60</td><td>260</td><td>42</td><td></td><td>0x3C</td><td>0x104</td><td>0x2A</td><td></td><td>0x32</td><td>4</td><td>0xCA</td></tr><tr><td>6</td><td>180</td><td>301</td><td>216</td><td></td><td>140</td><td>261</td><td>176</td><td></td><td>0x8C</td><td>0x105</td><td>0xB0</td><td></td><td>0x8B</td><td>5</td><td>0xC0</td></tr><tr><td>7</td><td>232</td><td>331</td><td>56</td><td></td><td>192</td><td>291</td><td>16</td><td></td><td>0xC0</td><td>0x123</td><td>0x10</td><td></td><td>0xC1</td><td>35</td><td>0x0</td></tr><tr><td>8</td><td>114</td><td>302</td><td>128</td><td></td><td>74</td><td>262</td><td>88</td><td></td><td>0x4A</td><td>0x106</td><td>0x58</td><td></td><td>0x45</td><td>6</td><td>0xA8</td></tr><tr><td>9</td><td>63</td><td>303</td><td>147</td><td></td><td>23</td><td>263</td><td>107</td><td></td><td>0x17</td><td>0x107</td><td>0x6B</td><td></td><td>0x16</td><td>7</td><td>0x7B</td></tr><tr><td>10</td><td>116</td><td>304</td><td>252</td><td></td><td>76</td><td>264</td><td>212</td><td></td><td>0x4C</td><td>0x108</td><td>0xD4</td><td></td><td>0x4D</td><td>8</td><td>0xC4</td></tr><tr><td>11</td><td>217</td><td>332</td><td>151</td><td></td><td>177</td><td>292</td><td>111</td><td></td><td>0xB1</td><td>0x124</td><td>0x6F</td><td></td><td>0xB6</td><td>36</td><td>0x1F</td></tr><tr><td>12</td><td>155</td><td>305</td><td>121</td><td></td><td>115</td><td>265</td><td>81</td><td></td><td>0x73</td><td>0x109</td><td>0x51</td><td></td><td>0x75</td><td>9</td><td>0x31</td></tr><tr><td>13</td><td>235</td><td>306</td><td>74</td><td></td><td>195</td><td>266</td><td>34</td><td></td><td>0xC3</td><td>0x10A</td><td>0x22</td><td></td><td>0xC2</td><td>10</td><td>0x32</td></tr><tr><td>14</td><td>123</td><td>307</td><td>171</td><td></td><td>83</td><td>267</td><td>131</td><td></td><td>0x53</td><td>0x10B</td><td>0x83</td><td></td><td>0x58</td><td>11</td><td>0x33</td></tr><tr><td>15</td><td>111</td><td>333</td><td>258</td><td></td><td>71</td><td>293</td><td>218</td><td></td><td>0x47</td><td>0x125</td><td>0xDA</td><td></td><td>0x4D</td><td>37</td><td>0x7A</td></tr><tr><td>16</td><td>255</td><td>308</td><td>57</td><td></td><td>215</td><td>268</td><td>17</td><td></td><td>0xD7</td><td>0x10C</td><td>0x11</td><td></td><td>0xD1</td><td>12</td><td>0x71</td></tr><tr><td>17</td><td>79</td><td>309</td><td>127</td><td></td><td>39</td><td>269</td><td>87</td><td></td><td>0x27</td><td>0x10D</td><td>0x57</td><td></td><td>0x25</td><td>13</td><td>0x77</td></tr><tr><td>18</td><td>222</td><td>310</td><td>205</td><td></td><td>182</td><td>270</td><td>165</td><td></td><td>0xB6</td><td>0x10E</td><td>0xA5</td><td></td><td>0xBA</td><td>14</td><td>0x65</td></tr><tr><td>19</td><td>175</td><td>334</td><td>233</td><td></td><td>135</td><td>294</td><td>193</td><td></td><td>0x87</td><td>0x126</td><td>0xC1</td><td></td><td>0x8C</td><td>38</td><td>0x71</td></tr><tr><td>20</td><td>254</td><td>311</td><td>281</td><td></td><td>214</td><td>271</td><td>241</td><td></td><td>0xD6</td><td>0x10F</td><td>0xF1</td><td></td><td>0xDF</td><td>15</td><td>0x61</td></tr><tr><td>21</td><td>159</td><td>312</td><td>267</td><td></td><td>119</td><td>272</td><td>227</td><td></td><td>0x77</td><td>0x110</td><td>0xE3</td><td></td><td>0x7E</td><td>16</td><td>0x73</td></tr><tr><td>22</td><td>206</td><td>313</td><td>76</td><td></td><td>166</td><td>273</td><td>36</td><td></td><td>0xA6</td><td>0x111</td><td>0x24</td><td></td><td>0xA2</td><td>17</td><td>0x64</td></tr><tr><td>23</td><td>97</td><td>335</td><td>139</td><td></td><td>57</td><td>295</td><td>99</td><td></td><td>0x39</td><td>0x127</td><td>0x63</td><td></td><td>0x36</td><td>39</td><td>0x93</td></tr><tr><td>24</td><td>159</td><td>314</td><td>50</td><td></td><td>119</td><td>274</td><td>10</td><td></td><td>0x77</td><td>0x112</td><td>0x0A</td><td></td><td>0x70</td><td>18</td><td>0x7A</td></tr><tr><td>25</td><td>223</td><td>315</td><td>288</td><td></td><td>183</td><td>275</td><td>248</td><td></td><td>0xB7</td><td>0x113</td><td>0xF8</td><td></td><td>0xBF</td><td>19</td><td>0x78</td></tr><tr><td>26</td><td>286</td><td>316</td><td>91</td><td></td><td>246</td><td>276</td><td>51</td><td></td><td>0xF6</td><td>0x114</td><td>0x33</td><td></td><td>0xF3</td><td>20</td><td>0x63</td></tr><tr><td>27</td><td>275</td><td>336</td><td>88</td><td></td><td>235</td><td>296</td><td>48</td><td></td><td>0xEB</td><td>0x128</td><td>0x30</td><td></td><td>0xE3</td><td>40</td><td>0xB0</td></tr><tr><td>28</td><td>284</td><td>317</td><td>249</td><td></td><td>244</td><td>277</td><td>209</td><td></td><td>0xF4</td><td>0x115</td><td>0xD1</td><td></td><td>0xFD</td><td>21</td><td>0x41</td></tr><tr><td>29</td><td>78</td><td>318</td><td>60</td><td></td><td>38</td><td>278</td><td>20</td><td></td><td>0x26</td><td>0x116</td><td>0x14</td><td></td><td>0x21</td><td>22</td><td>0x64</td></tr><tr><td>30</td><td>238</td><td>319</td><td>261</td><td></td><td>198</td><td>279</td><td>221</td><td></td><td>0xC6</td><td>0x117</td><td>0xDD</td><td></td><td>0xCD</td><td>23</td><td>0x6D</td></tr><tr><td>31</td><td>222</td><td>320</td><td>161</td><td></td><td>182</td><td>280</td><td>121</td><td></td><td>0xB6</td><td>0x118</td><td>0x79</td><td></td><td>0xB7</td><td>24</td><td>0x69</td></tr><tr><td>32</td><td>174</td><td>321</td><td>166</td><td></td><td>134</td><td>281</td><td>126</td><td></td><td>0x86</td><td>0x119</td><td>0x7E</td><td></td><td>0x87</td><td>25</td><td>0x6E</td></tr><tr><td>33</td><td>46</td><td>322</td><td>225</td><td></td><td>6</td><td>282</td><td>185</td><td></td><td>0x06</td><td>0x11A</td><td>0xB9</td><td></td><td>0xB</td><td>26</td><td>0x69</td></tr><tr><td>34</td><td>127</td><td>323</td><td>267</td><td></td><td>87</td><td>283</td><td>227</td><td></td><td>0x57</td><td>0x11B</td><td>0xE3</td><td></td><td>0x5E</td><td>27</td><td>0x73</td></tr><tr><td>35</td><td>223</td><td>324</td><td>92</td><td></td><td>183</td><td>284</td><td>52</td><td></td><td>0xB7</td><td>0x11C</td><td>0x34</td><td></td><td>0xB3</td><td>28</td><td>0x74</td></tr><tr><td>36</td><td>111</td><td>325</td><td>154</td><td></td><td>71</td><td>285</td><td>114</td><td></td><td>0x47</td><td>0x11D</td><td>0x72</td><td></td><td>0x47</td><td>29</td><td>0x72</td></tr><tr><td>37</td><td>62</td><td>326</td><td>233</td><td></td><td>22</td><td>286</td><td>193</td><td></td><td>0x16</td><td>0x11E</td><td>0xC1</td><td></td><td>0x1C</td><td>30</td><td>0x61</td></tr><tr><td>38</td><td>127</td><td>327</td><td>60</td><td></td><td>87</td><td>287</td><td>20</td><td></td><td>0x57</td><td>0x11F</td><td>0x14</td><td></td><td>0x51</td><td>31</td><td>0x74</td></tr><tr><td>39</td><td>142</td><td>328</td><td>71</td><td></td><td>102</td><td>288</td><td>31</td><td></td><td>0x66</td><td>0x120</td><td>0x1F</td><td></td><td>0x61</td><td>32</td><td>0x6F</td></tr><tr><td>40</td><td>127</td><td>329</td><td>202</td><td></td><td>87</td><td>289</td><td>162</td><td></td><td>0x57</td><td>0x121</td><td>0xA2</td><td></td><td>0x5A</td><td>33</td><td>0x72</td></tr><tr><td>41</td><td>159</td><td>330</td><td>235</td><td></td><td>119</td><td>290</td><td>195</td><td></td><td>0x77</td><td>0x122</td><td>0xC3</td><td></td><td>0x7C</td><td>34</td><td>0x73</td></tr></tbody></table><p>每一行有3个包，表示一个有效数据，DC1~DC3为一组数据包的LEN值，后面接着的3列为DC1~DC3减去40后的值，再后面是对应的16进制表示。</p><p>最后3列则是解码后的值，CRC8由HEX1的高4bit和HEX3的高4bit组成，Pack No.为HEX2的低8bit，Value由HEX1的低4bit和HEX3的低4bit组成。</p><p>这样还不能很直观的看出来结果，我们用Excel排序并利用相关函数（如：CODE等）将其直接输出可阅读的内容，如下图所示：</p><p><img src="../uploads/2020/06/image-20200605174033297.png" alt="image-20200605174033297" style="zoom: 33%;"></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>终于认认真真（FuYanLiaoShi）的做完了这次的作业（XuQiu），本文讲述的内容可能不太严谨或者说是比较浅显，所以我在这里贡献出来我的源代码，以供深入探索。</p><p><strong>相关链接</strong></p><ul><li>我的Golang作业：<a href="https://github.com/haowanxing/ESPTouch-Go-Demo" target="_blank" rel="noopener">https://github.com/haowanxing/ESPTouch-Go-Demo</a></li><li>参考博文：<a href="https://blog.csdn.net/flyingcys/article/details/54670688" target="_blank" rel="noopener">https://blog.csdn.net/flyingcys/article/details/54670688</a></li><li>官方开源代码：<a href="https://github.com/EspressifApp/EsptouchForAndroid" target="_blank" rel="noopener">https://github.com/EspressifApp/EsptouchForAndroid</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;近年来物联网发展迅速，目前依旧是比较热门的领域，现今世界处处都是物联网，可谓无处不物联（哈哈，扯远了！）。我接触物联网这块比较晚，去年才开始入门，最早的实战项目就是将传感器上云，借助腾讯的&lt;a href=&quot;https://cloud.tencent.com/document/product/634&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;物联网通信平台&lt;/a&gt;，我可以对传感器进行远程控制以及读取传感器采集到的数据。当然，这些都离不开网络（Internet）。设备上云的首要前提就是接入互联网，而接入互联网的方式有很多种（如：有线网络、无线WiFi、NB-IoT、移动蜂窝2G/3G/4G等），不同场景下自然有各自合适的网络接入方式。&lt;/p&gt;
&lt;p&gt;我们现在生活中的很多智能家电都是通过WiFi接入的，不用我说大家也能举很多例子（像小米智能家居有小爱同学、空气净化器、电视、冰箱、洗衣机等blablabla~），这些设备刚到手的时候你一般都需要按照指导说明去下载个APP，然后绑定设备给设备配网，给设备配网可不像给手机连上WiFi那么容易，毕竟你买的小爱同学不能接鼠标键盘，也没有操作系统给你用。那么配网是如何完成的呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;快速配网的两种途径：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SoftAP配网&lt;/li&gt;
&lt;li&gt;SmartConfig配网&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第一种很好理解，就类似给自己家里的路由器配置网络，你首先通过WiFi或者网线连接你家路由器，然后进入&lt;a href=&quot;#&quot;&gt;http://192.168.xxx.xxx&lt;/a&gt;进行Web可视化配置，也有一些小型单片机，自己搭载了一个WiFi模组以AP模式运行，你通过指定的APP就可以与其建立通信并发送配置信息过去。但是这种配网方式比较繁琐，用户体验较差。&lt;/p&gt;
&lt;p&gt;第二种就比较高级了，你只需要打开设备的配网开关，并在你的手机上连接即将给设备配置的WiFi网络，然后在App或者小程序上输入对应的密码并点击开始，设备能够在很短的时间内（大约7~30s）就可以完成网络的配置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这篇文章我将以我自己的学习成果来讲述SmartConfig配网的整个过程&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://www.imsry.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Network" scheme="http://www.imsry.cn/tags/Network/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云物联网通信平台设备动态注册鉴权流程</title>
    <link href="http://www.imsry.cn/posts/4ede204f.html"/>
    <id>http://www.imsry.cn/posts/4ede204f.html</id>
    <published>2020-02-26T07:16:22.000Z</published>
    <updated>2020-05-29T09:13:38.902Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><h3 id="物联网平台"><a href="#物联网平台" class="headerlink" title="物联网平台"></a>物联网平台</h3><ol><li>在物联网平台创建新产品（普通产品），认证方式选用“秘钥认证”。</li><li>在产品设置中打开动态注册配置开关，并允许自动创建设备。</li><li>记录产品ID和产品秘钥（ProductID/ProductSecret）。</li></ol><h3 id="设备端"><a href="#设备端" class="headerlink" title="设备端"></a>设备端</h3><ol><li>命名设备的唯一标识（如设备MAC、IMEI号、芯片ID等）即DeviceName。</li><li>将物联网平台获取的产品ID和产品秘钥烧录至设备中。</li></ol><h2 id="注册流程"><a href="#注册流程" class="headerlink" title="注册流程"></a>注册流程</h2><h4 id="第一步：生成验签参数"><a href="#第一步：生成验签参数" class="headerlink" title="第一步：生成验签参数"></a>第一步：生成验签参数</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deviceName:</span> <span class="comment">#设备名称</span></span><br><span class="line"><span class="attr">nonce:</span> <span class="comment">#随机整数</span></span><br><span class="line"><span class="attr">productId:</span> <span class="comment">#产品ID</span></span><br><span class="line"><span class="attr">timestamp:</span> <span class="comment">#时间戳</span></span><br></pre></td></tr></table></figure><p>拼接字符串“deviceName=%s&amp;nonce=%d&amp;productId=%s&amp;timestamp=%d”，使用HMAC_SHA1算法，ProductSecret作为Key对字符串进行摘要，然后使用Base64编码该摘要获得验签参数(Signature)的值</p><a id="more"></a><h4 id="第二步：封装请求参数并发送鉴权请求"><a href="#第二步：封装请求参数并发送鉴权请求" class="headerlink" title="第二步：封装请求参数并发送鉴权请求"></a>第二步：封装请求参数并发送鉴权请求</h4><p>拼接JSON格式的字符串为Body：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 请求地址：http(s)://gateway.tencentdevices.com/register/dev</span></span><br><span class="line"><span class="comment"># Body内容：</span></span><br><span class="line">&#123;\<span class="string">"deviceName\":\"%s\",\"nonce\":%d,\"productId\":\"%s\",\"timestamp\":%d,\"signature\":\"%s\"&#125;</span></span><br><span class="line"><span class="string"># 请求Header</span></span><br><span class="line"><span class="string">Accept: text/xml,application/json;*/*</span></span><br><span class="line"><span class="string">Content-type: application/x-www-form-urlencoded</span></span><br><span class="line"><span class="string">Content-Length: 实际的Body长度</span></span><br><span class="line"><span class="string"># 如果使用https方式，需要设置不校验证书，或者信任tencent自签发的证书</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># CA证书内容如下：</span><br><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIIDxTCCAq2gAwIBAgIJALM1winYO2xzMA0GCSqGSIb3DQEBCwUAMHkxCzAJBgNV</span><br><span class="line">BAYTAkNOMRIwEAYDVQQIDAlHdWFuZ0RvbmcxETAPBgNVBAcMCFNoZW5aaGVuMRAw</span><br><span class="line">DgYDVQQKDAdUZW5jZW50MRcwFQYDVQQLDA5UZW5jZW50IElvdGh1YjEYMBYGA1UE</span><br><span class="line">AwwPd3d3LnRlbmNlbnQuY29tMB4XDTE3MTEyNzA0MjA1OVoXDTMyMTEyMzA0MjA1</span><br><span class="line">OVoweTELMAkGA1UEBhMCQ04xEjAQBgNVBAgMCUd1YW5nRG9uZzERMA8GA1UEBwwI</span><br><span class="line">U2hlblpoZW4xEDAOBgNVBAoMB1RlbmNlbnQxFzAVBgNVBAsMDlRlbmNlbnQgSW90</span><br><span class="line">aHViMRgwFgYDVQQDDA93d3cudGVuY2VudC5jb20wggEiMA0GCSqGSIb3DQEBAQUA</span><br><span class="line">A4IBDwAwggEKAoIBAQDVxwDZRVkU5WexneBEkdaKs4ehgQbzpbufrWo5Lb5gJ3i0</span><br><span class="line">eukbOB81yAaavb23oiNta4gmMTq2F6/hAFsRv4J2bdTs5SxwEYbiYU1teGHuUQHO</span><br><span class="line">iQsZCdNTJgcikga9JYKWcBjFEnAxKycNsmqsq4AJ0CEyZbo//IYX3czEQtYWHjp7</span><br><span class="line">FJOlPPd1idKtFMVNG6LGXEwS/TPElE+grYOxwB7Anx3iC5ZpE5lo5tTioFTHzqbT</span><br><span class="line">qTN7rbFZRytAPk/JXMTLgO55fldm4JZTP3GQsPzwIh4wNNKhi4yWG1o2u3hAnZDv</span><br><span class="line">UVFV7al2zFdOfuu0KMzuLzrWrK16SPadRDd9eT17AgMBAAGjUDBOMB0GA1UdDgQW</span><br><span class="line">BBQrr48jv4FxdKs3r0BkmJO7zH4ALzAfBgNVHSMEGDAWgBQrr48jv4FxdKs3r0Bk</span><br><span class="line">mJO7zH4ALzAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQDRSjXnBc3T</span><br><span class="line">d9VmtTCuALXrQELY8KtM+cXYYNgtodHsxmrRMpJofsPGiqPfb82klvswpXxPK8Xx</span><br><span class="line">SuUUo74Fo+AEyJxMrRKlbJvlEtnpSilKmG6rO9+bFq3nbeOAfat4lPl0DIscWUx3</span><br><span class="line">ajXtvMCcSwTlF8rPgXbOaSXZidRYNqSyUjC2Q4m93Cv+KlyB+FgOke8x4aKAkf5p</span><br><span class="line">XR8i1BN1OiMTIRYhGSfeZbVRq5kTdvtahiWFZu9DGO+hxDZObYGIxGHWPftrhBKz</span><br><span class="line">RT16Amn780rQLWojr70q7o7QP5tO0wDPfCdFSc6CQFq/ngOzYag0kJ2F+O5U6+kS</span><br><span class="line">QVrcRBDxzx/G</span><br><span class="line">-----END CERTIFICATE-----</span><br></pre></td></tr></table></figure><h4 id="第三步：根据响应结果进一步处理和解密payload"><a href="#第三步：根据响应结果进一步处理和解密payload" class="headerlink" title="第三步：根据响应结果进一步处理和解密payload"></a>第三步：根据响应结果进一步处理和解密payload</h4><p>响应结果格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"code"</span>:<span class="number">0</span>,<span class="attr">"message"</span>:<span class="string">""</span>,<span class="attr">"len"</span>:<span class="number">53</span>,<span class="attr">"payload"</span>:<span class="string">"+b93hoyyPKdArkNo+FIwCJXYQi+zVppqBGM+1kWuMxgHbfknWh2udKorHnb4t9RywJM8g23ryT/sTL1rmGGTyA=="</span>&#125;</span><br></pre></td></tr></table></figure><p>其中，code为0表示鉴权成功，message为错误时的提示信息，payload为返回的注册结果密文，len为payload的明文长度。</p><p>解密步骤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将payload使用base64解码获得原始密文,记为$raw</span></span><br><span class="line"><span class="comment"># 将$raw使用AES_128_CBC算法进行解密，Key为ProductSecret的前16字节，IV向量为16个字节的'0'（即rune(48)），填充方式为ZERO_PADDING</span></span><br></pre></td></tr></table></figure><p>解密后的字符串长度应该为16的整数倍，需要将字符串尾部多余的<code>0</code>字节去除（或者直接截取字符串的前len个字节）得到一个最终json串，格式为：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"encryptionType"</span>:<span class="number">2</span>,<span class="attr">"psk"</span>:<span class="string">"MpKyD0rDNaAwq+zsDvGY9w=="</span>&#125;</span><br></pre></td></tr></table></figure><p>其中，<code>encryptionType</code>表示认证类型（1证书，2秘钥），<code>psk</code>表示秘钥。</p><h4 id="第四步：将秘钥烧录到设备"><a href="#第四步：将秘钥烧录到设备" class="headerlink" title="第四步：将秘钥烧录到设备"></a>第四步：将秘钥烧录到设备</h4><p>将psk烧录到设备中存储，对应的内容应该是一个3元组或4元组：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">productId:</span> <span class="comment">#产品ID</span></span><br><span class="line"><span class="attr">productSecret:</span> <span class="comment">#产品秘钥</span></span><br><span class="line"><span class="attr">deviceName:</span><span class="comment">#设备名称</span></span><br><span class="line"><span class="attr">deviceSecret:</span> <span class="comment">#设备认证秘钥</span></span><br></pre></td></tr></table></figure><h4 id="第五步：设备认证-上线"><a href="#第五步：设备认证-上线" class="headerlink" title="第五步：设备认证+上线"></a>第五步：设备认证+上线</h4><p>此处参照文档：<a href="https://cloud.tencent.com/document/product/634/32546" target="_blank" rel="noopener">腾讯云物联网通信文档中心-设备接入-设备基于MQTT接入</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前置条件&quot;&gt;&lt;a href=&quot;#前置条件&quot; class=&quot;headerlink&quot; title=&quot;前置条件&quot;&gt;&lt;/a&gt;前置条件&lt;/h2&gt;&lt;h3 id=&quot;物联网平台&quot;&gt;&lt;a href=&quot;#物联网平台&quot; class=&quot;headerlink&quot; title=&quot;物联网平台&quot;&gt;&lt;/a&gt;物联网平台&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;在物联网平台创建新产品（普通产品），认证方式选用“秘钥认证”。&lt;/li&gt;
&lt;li&gt;在产品设置中打开动态注册配置开关，并允许自动创建设备。&lt;/li&gt;
&lt;li&gt;记录产品ID和产品秘钥（ProductID/ProductSecret）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;设备端&quot;&gt;&lt;a href=&quot;#设备端&quot; class=&quot;headerlink&quot; title=&quot;设备端&quot;&gt;&lt;/a&gt;设备端&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;命名设备的唯一标识（如设备MAC、IMEI号、芯片ID等）即DeviceName。&lt;/li&gt;
&lt;li&gt;将物联网平台获取的产品ID和产品秘钥烧录至设备中。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;注册流程&quot;&gt;&lt;a href=&quot;#注册流程&quot; class=&quot;headerlink&quot; title=&quot;注册流程&quot;&gt;&lt;/a&gt;注册流程&lt;/h2&gt;&lt;h4 id=&quot;第一步：生成验签参数&quot;&gt;&lt;a href=&quot;#第一步：生成验签参数&quot; class=&quot;headerlink&quot; title=&quot;第一步：生成验签参数&quot;&gt;&lt;/a&gt;第一步：生成验签参数&lt;/h4&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;deviceName:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#设备名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;nonce:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#随机整数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;productId:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#产品ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;timestamp:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#时间戳&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;拼接字符串“deviceName=%s&amp;amp;nonce=%d&amp;amp;productId=%s&amp;amp;timestamp=%d”，使用HMAC_SHA1算法，ProductSecret作为Key对字符串进行摘要，然后使用Base64编码该摘要获得验签参数(Signature)的值&lt;/p&gt;
    
    </summary>
    
      <category term="开放平台" scheme="http://www.imsry.cn/categories/%E5%BC%80%E6%94%BE%E5%B9%B3%E5%8F%B0/"/>
    
    
      <category term="Qcloud" scheme="http://www.imsry.cn/tags/Qcloud/"/>
    
  </entry>
  
  <entry>
    <title>线性插值算法之一维数组矩阵</title>
    <link href="http://www.imsry.cn/posts/babba23d.html"/>
    <id>http://www.imsry.cn/posts/babba23d.html</id>
    <published>2020-01-08T08:56:19.000Z</published>
    <updated>2020-05-29T09:03:47.620Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>此篇文章用于记录工作中所需的数据插值算法：线性插值（以两个相邻数据的均值作为中间值插入两数之间）</p></blockquote><p>惊喜预览图：</p><p>原始数据：<img src="../uploads/2020/01/screenrecord-linearx1.gif" alt="原始采集动图" style="zoom:20%;">一次插值数据：<img src="../uploads/2020/01/screenrecord-linearx2.gif" alt="1次插值数据动图" style="zoom:35%;">二次插值数据：<img src="../uploads/2020/01/screenrecord-linearx3.gif" alt="2次插值数据动图" style="zoom:43%;"></p><p>现有数据是一个8x8的温度矩阵(值为真实温度的100倍)，存放在一个长度为64的一维数组中，测试数据如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2275</span>,<span class="number">2250</span>,<span class="number">2350</span>,<span class="number">2350</span>,<span class="number">2325</span>,<span class="number">2350</span>,<span class="number">2325</span>,<span class="number">2400</span>,<span class="number">2325</span>,<span class="number">2275</span>,<span class="number">2350</span>,<span class="number">2350</span>,<span class="number">2350</span>,<span class="number">2350</span>,<span class="number">2325</span>,<span class="number">2350</span>,<span class="number">2275</span>,<span class="number">2300</span>,<span class="number">2325</span>,<span class="number">2350</span>,<span class="number">2325</span>,<span class="number">2300</span>,<span class="number">2350</span>,<span class="number">2325</span>,<span class="number">2200</span>,<span class="number">2275</span>,<span class="number">2250</span>,<span class="number">2275</span>,<span class="number">2325</span>,<span class="number">2275</span>,<span class="number">2300</span>,<span class="number">2275</span>,<span class="number">2250</span>,<span class="number">2250</span>,<span class="number">2225</span>,<span class="number">2250</span>,<span class="number">2275</span>,<span class="number">2325</span>,<span class="number">2325</span>,<span class="number">2350</span>,<span class="number">2200</span>,<span class="number">2250</span>,<span class="number">2275</span>,<span class="number">2250</span>,<span class="number">2300</span>,<span class="number">2275</span>,<span class="number">2300</span>,<span class="number">2325</span>,<span class="number">2200</span>,<span class="number">2250</span>,<span class="number">2200</span>,<span class="number">2250</span>,<span class="number">2375</span>,<span class="number">2325</span>,<span class="number">2250</span>,<span class="number">2250</span>,<span class="number">2100</span>,<span class="number">2125</span>,<span class="number">2225</span>,<span class="number">2300</span>,<span class="number">2450</span>,<span class="number">2325</span>,<span class="number">2200</span>,<span class="number">2225</span></span><br></pre></td></tr></table></figure><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>将8x8的矩阵利用插值算法转化成15x15（8个数据中插入7个虚拟值）矩阵根本思路：</p><ol><li>将8x8的数据进行横向插值为一个15x8的数组；</li><li>将15x8的数字进行纵向插值为一个15x15的数组；</li></ol><p>转化公式的分析：</p><p>先将问题简化，分析一个4x4的矩阵：</p><a id="more"></a><table><thead><tr><th style="text-align:center">0</th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th></tr></thead><tbody><tr><td style="text-align:center">4</td><td style="text-align:center">5</td><td style="text-align:center">6</td><td style="text-align:center">7</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">9</td><td style="text-align:center">10</td><td style="text-align:center">11</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">13</td><td style="text-align:center">14</td><td style="text-align:center">15</td></tr></tbody></table><p>横向插值后的数据位置变化：</p><table><thead><tr><th style="text-align:left">0</th><th style="text-align:left">x</th><th style="text-align:left">1</th><th style="text-align:left">x</th><th style="text-align:left">2</th><th style="text-align:left">x</th><th style="text-align:left">3</th></tr></thead><tbody><tr><td style="text-align:left">4</td><td style="text-align:left">x</td><td style="text-align:left">5</td><td style="text-align:left">x</td><td style="text-align:left">6</td><td style="text-align:left">x</td><td style="text-align:left">7</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">x</td><td style="text-align:left">9</td><td style="text-align:left">x</td><td style="text-align:left">10</td><td style="text-align:left">x</td><td style="text-align:left">11</td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">x</td><td style="text-align:left">13</td><td style="text-align:left">x</td><td style="text-align:left">14</td><td style="text-align:left">x</td><td style="text-align:left">15</td></tr></tbody></table><h3 id="分析一："><a href="#分析一：" class="headerlink" title="分析一："></a>分析一：</h3><p>位置：0=&gt;0，1=&gt;2，2=&gt;4，3=&gt;6，4=&gt;7，5=&gt;9，6=&gt;11，7=&gt;13，8=&gt;14……</p><p>由此推断原始数据的新位置，设原每行长度为w，原位置为i，则新每行长度为2w-1，新位置为n=i*2-i/w。</p><p>那么当i满足条件：i不为第一列数据（即i%w不为0）时，可计算前一个插值数据。</p><p>设插值为x，上述表格数据存放a数组，则x的数据位为k-1，根据插值算法，则值x=a[k-1]=(a[k-2]+a[k])/2。</p><p>现在问题变为分析一个7*4的矩阵：</p><table><thead><tr><th style="text-align:center">0</th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th><th style="text-align:center">6</th></tr></thead><tbody><tr><td style="text-align:center">7</td><td style="text-align:center">8</td><td style="text-align:center">9</td><td style="text-align:center">10</td><td style="text-align:center">11</td><td style="text-align:center">12</td><td style="text-align:center">13</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">15</td><td style="text-align:center">16</td><td style="text-align:center">17</td><td style="text-align:center">18</td><td style="text-align:center">19</td><td style="text-align:center">20</td></tr><tr><td style="text-align:center">21</td><td style="text-align:center">22</td><td style="text-align:center">23</td><td style="text-align:center">24</td><td style="text-align:center">25</td><td style="text-align:center">26</td><td style="text-align:center">27</td></tr></tbody></table><p>纵向插值后的数据位置变化：</p><table><thead><tr><th style="text-align:left">0</th><th style="text-align:left">1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th></tr></thead><tbody><tr><td style="text-align:left">x</td><td style="text-align:left">x</td><td>x</td><td>x</td><td>x</td><td>x</td><td>x</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">8</td><td>9</td><td>10</td><td>11</td><td>12</td><td>13</td></tr><tr><td style="text-align:left">x</td><td style="text-align:left">x</td><td>x</td><td>x</td><td>x</td><td>x</td><td>x</td></tr><tr><td style="text-align:left">14</td><td style="text-align:left">15</td><td>16</td><td>17</td><td>18</td><td>19</td><td>20</td></tr><tr><td style="text-align:left">x</td><td style="text-align:left">x</td><td>x</td><td>x</td><td>x</td><td>x</td><td>x</td></tr><tr><td style="text-align:left">21</td><td style="text-align:left">22</td><td>23</td><td>24</td><td>25</td><td>26</td><td>27</td></tr></tbody></table><h3 id="分析二："><a href="#分析二：" class="headerlink" title="分析二："></a>分析二：</h3><p>第一行位置0-6不变，从第二行的7开始：7=&gt;14，8=&gt;15……，从第三行的14开始：14=&gt;21，15=&gt;22…… 以此类推</p><p>由此推断原始数据的新位置：设原位置为i，则新位置为：i*2-i%w。</p><p>那么当满足条件：从原始数据的第二行开始（即i&gt;=w）时，可计算当前位置上一行的插值数据。</p><p>设插值为x，上述表格存放在a数组中，则x的数据位为k-w，根据插值算法，则值x=a[k-w]=(a[k-2w]+a[k])/2。</p><p>由此经过两步的演算，得出了一个7x7的长度为49的数组。</p><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><p>JavaScript版本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Linear</span>(<span class="params">old, width</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> data = [];</span><br><span class="line">  <span class="comment">//横向插值</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> old)&#123;</span><br><span class="line">    i = <span class="built_in">parseInt</span>(i);</span><br><span class="line">    <span class="keyword">let</span> v = old[i];</span><br><span class="line">    <span class="keyword">let</span> k = i*<span class="number">2</span>-<span class="built_in">parseInt</span>(i/width);</span><br><span class="line">    data[k] = v;</span><br><span class="line">    <span class="keyword">if</span>(i%width != <span class="number">0</span>)&#123;</span><br><span class="line">      data[k<span class="number">-1</span>] = (<span class="built_in">parseInt</span>(data[k<span class="number">-2</span>])+<span class="built_in">parseInt</span>(data[k]))/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> data2 = data;</span><br><span class="line">  data = [];</span><br><span class="line">  width = width*<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">  <span class="comment">//纵向插值</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> data2)&#123;</span><br><span class="line">    i = <span class="built_in">parseInt</span>(i);</span><br><span class="line">    <span class="keyword">let</span> v = data2[i];</span><br><span class="line">    <span class="keyword">let</span> k = i*<span class="number">2</span>-i%width;</span><br><span class="line">    data[k] = v;</span><br><span class="line">    <span class="keyword">if</span>(k&gt;=width)&#123;</span><br><span class="line">      data[k-width] = (<span class="built_in">parseInt</span>(data[k])+<span class="built_in">parseInt</span>(data[k-width*<span class="number">2</span>]))/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用HTML渲染数据并上色结果：</p><ul><li><p>原始数据</p><p><img src="../uploads/2020/01/WX20200108-181859@2x.png" alt="原始数据结果图片" style="zoom:50%;"></p></li><li><p>一次插值数据</p><p><img src="../uploads/2020/01/WX20200108-181928@2x.png" alt="一次插值数据图片" style="zoom:33%;"></p></li><li><p>二次差值数据</p><p><img src="../uploads/2020/01/WX20200108-182016@2x.png" alt="二次插值数据图片" style="zoom:25%;"></p></li></ul><h3 id="Demo代码"><a href="#Demo代码" class="headerlink" title="Demo代码"></a>Demo代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">span &#123;margin: 0px; display:inline-block; text-align:center;color: #ccc&#125;</span></span><br><span class="line"><span class="undefined">.canvascfg .num &#123;width: 20px;&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"data"</span> <span class="attr">style</span>=<span class="string">"width: 100%;height: 100%;line-height: 20px"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> originalData = [<span class="number">2275</span>,<span class="number">2250</span>,<span class="number">2350</span>,<span class="number">2350</span>,<span class="number">2325</span>,<span class="number">2350</span>,<span class="number">2325</span>,<span class="number">2400</span>,<span class="number">2325</span>,<span class="number">2275</span>,<span class="number">2350</span>,<span class="number">2350</span>,<span class="number">2350</span>,<span class="number">2350</span>,<span class="number">2325</span>,<span class="number">2350</span>,<span class="number">2275</span>,<span class="number">2300</span>,<span class="number">2325</span>,<span class="number">2350</span>,<span class="number">2325</span>,<span class="number">2300</span>,<span class="number">2350</span>,<span class="number">2325</span>,<span class="number">2200</span>,<span class="number">2275</span>,<span class="number">2250</span>,<span class="number">2275</span>,<span class="number">2325</span>,<span class="number">2275</span>,<span class="number">2300</span>,<span class="number">2275</span>,<span class="number">2250</span>,<span class="number">2250</span>,<span class="number">2225</span>,<span class="number">2250</span>,<span class="number">2275</span>,<span class="number">2325</span>,<span class="number">2325</span>,<span class="number">2350</span>,<span class="number">2200</span>,<span class="number">2250</span>,<span class="number">2275</span>,<span class="number">2250</span>,<span class="number">2300</span>,<span class="number">2275</span>,<span class="number">2300</span>,<span class="number">2325</span>,<span class="number">2200</span>,<span class="number">2250</span>,<span class="number">2200</span>,<span class="number">2250</span>,<span class="number">2375</span>,<span class="number">2325</span>,<span class="number">2250</span>,<span class="number">2250</span>,<span class="number">2100</span>,<span class="number">2125</span>,<span class="number">2225</span>,<span class="number">2300</span>,<span class="number">2450</span>,<span class="number">2325</span>,<span class="number">2200</span>,<span class="number">2225</span>];</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> Color = &#123;</span></span><br><span class="line"><span class="undefined">Blue:[0,0,255],</span></span><br><span class="line"><span class="undefined">Yellow:[255,255,0],</span></span><br><span class="line"><span class="undefined">Red:[255,0,0]</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> Config = &#123;</span></span><br><span class="line"><span class="undefined">canvasWidth:8,</span></span><br><span class="line"><span class="undefined">canvasHeight:8,</span></span><br><span class="line"><span class="javascript">xValue:<span class="number">2</span>,<span class="comment">//线性插值次数为xVlaue-1</span></span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined">Draw(originalData);</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">Linear</span>(<span class="params">old, width</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> data = [];</span></span><br><span class="line"><span class="javascript">        <span class="comment">//横向插值</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> old)&#123;</span></span><br><span class="line"><span class="javascript">        i = <span class="built_in">parseInt</span>(i);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> v = old[i];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> k = i*<span class="number">2</span>-<span class="built_in">parseInt</span>(i/width);</span></span><br><span class="line"><span class="undefined">        data[k] = v;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(i%width != <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="javascript">        data[k<span class="number">-1</span>] = (<span class="built_in">parseInt</span>(data[k<span class="number">-2</span>])+<span class="built_in">parseInt</span>(data[k]))/<span class="number">2</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> data2 = data;</span></span><br><span class="line"><span class="undefined">        data = [];</span></span><br><span class="line"><span class="undefined">        width = width*2-1;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//纵向插值</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> data2)&#123;</span></span><br><span class="line"><span class="javascript">        i = <span class="built_in">parseInt</span>(i);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> v = data2[i];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> k = i*<span class="number">2</span>-i%width;</span></span><br><span class="line"><span class="undefined">    data[k] = v;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span>(k&gt;=width)&#123;</span></span><br><span class="line"><span class="javascript">    data[k-width] = (<span class="built_in">parseInt</span>(data[k])+<span class="built_in">parseInt</span>(data[k-width*<span class="number">2</span>]))/<span class="number">2</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> data;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">ComputeColor</span>(<span class="params">from,to,ratio</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> r = <span class="built_in">Math</span>.round(<span class="keyword">from</span>[<span class="number">0</span>]*(<span class="number">1</span>-ratio)+to[<span class="number">0</span>]*ratio);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> g = <span class="built_in">Math</span>.round(<span class="keyword">from</span>[<span class="number">1</span>]*(<span class="number">1</span>-ratio)+to[<span class="number">1</span>]*ratio);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> b = <span class="built_in">Math</span>.round(<span class="keyword">from</span>[<span class="number">2</span>]*(<span class="number">1</span>-ratio)+to[<span class="number">2</span>]*ratio);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> [r,g,b];</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">GetColor</span>(<span class="params">num, max, min</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ratio = (num - min) / (max - min);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> color = ComputeColor(Color.Blue, Color.Red, ratio);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> color;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">Draw</span>(<span class="params">tmp</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> canvasHeight = Config.canvasHeight;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> canvasWidth = Config.canvasWidth;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">1</span>;i&lt;Config.xValue;i++)&#123;</span></span><br><span class="line"><span class="javascript">    tmp = Linear(tmp, (canvasWidth<span class="number">-1</span>)*<span class="built_in">Math</span>.pow(<span class="number">2</span>,i<span class="number">-1</span>)+<span class="number">1</span>);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(Config.xValue &gt; <span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="javascript">        canvasHeight = (Config.canvasHeight<span class="number">-1</span>)*<span class="built_in">Math</span>.pow(<span class="number">2</span>,Config.xValue<span class="number">-1</span>)+<span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">        canvasWidth = (Config.canvasWidth<span class="number">-1</span>)*<span class="built_in">Math</span>.pow(<span class="number">2</span>,Config.xValue<span class="number">-1</span>)+<span class="number">1</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        low = high = tmp[0];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = tmp.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>( tmp[i] &gt; high ) high = tmp[i];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>( tmp[i] &lt; low ) low = tmp[i];</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> index = <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> span = <span class="string">''</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;=canvasHeight; i++,index++)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">1</span>; j &lt;= canvasWidth; j++)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// var idx = (i)*canvasWidth-j;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var idx = (i-1)*canvasWidth+j-1;</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> idx = canvasWidth*(canvasHeight-i+<span class="number">1</span>)-j;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> color = GetColor(tmp[idx], high, low);</span></span><br><span class="line"><span class="undefined">        span += GetSpan(color,tmp[idx]);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        span += <span class="string">'&lt;br&gt;'</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#data"</span>).html(span);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">GetSpan</span>(<span class="params">color,num</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> span = <span class="string">'&lt;span style="width:50px;height:50px;background-color:rgb('</span>+color[<span class="number">0</span>]+<span class="string">','</span>+color[<span class="number">1</span>]+<span class="string">','</span>+color[<span class="number">2</span>]+<span class="string">')"&gt;'</span>+(num/<span class="number">100</span>)+<span class="string">'&lt;/span&gt;'</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> span;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#wind"</span>).append(span);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;此篇文章用于记录工作中所需的数据插值算法：线性插值（以两个相邻数据的均值作为中间值插入两数之间）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;惊喜预览图：&lt;/p&gt;
&lt;p&gt;原始数据：&lt;img src=&quot;../uploads/2020/01/screenrecord-linearx1.gif&quot; alt=&quot;原始采集动图&quot; style=&quot;zoom:20%;&quot;&gt;一次插值数据：&lt;img src=&quot;../uploads/2020/01/screenrecord-linearx2.gif&quot; alt=&quot;1次插值数据动图&quot; style=&quot;zoom:35%;&quot;&gt;二次插值数据：&lt;img src=&quot;../uploads/2020/01/screenrecord-linearx3.gif&quot; alt=&quot;2次插值数据动图&quot; style=&quot;zoom:43%;&quot;&gt;&lt;/p&gt;
&lt;p&gt;现有数据是一个8x8的温度矩阵(值为真实温度的100倍)，存放在一个长度为64的一维数组中，测试数据如下：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2275&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2250&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2350&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2350&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2325&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2350&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2325&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2400&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2325&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2275&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2350&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2350&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2350&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2350&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2325&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2350&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2275&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2300&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2325&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2350&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2325&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2300&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2350&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2325&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2200&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2275&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2250&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2275&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2325&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2275&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2300&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2275&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2250&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2250&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2225&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2250&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2275&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2325&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2325&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2350&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2200&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2250&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2275&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2250&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2300&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2275&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2300&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2325&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2200&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2250&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2200&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2250&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2375&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2325&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2250&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2250&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2100&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2125&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2225&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2300&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2450&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2325&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2200&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2225&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;问题分析&quot;&gt;&lt;a href=&quot;#问题分析&quot; class=&quot;headerlink&quot; title=&quot;问题分析&quot;&gt;&lt;/a&gt;问题分析&lt;/h2&gt;&lt;p&gt;将8x8的矩阵利用插值算法转化成15x15（8个数据中插入7个虚拟值）矩阵根本思路：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将8x8的数据进行横向插值为一个15x8的数组；&lt;/li&gt;
&lt;li&gt;将15x8的数字进行纵向插值为一个15x15的数组；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;转化公式的分析：&lt;/p&gt;
&lt;p&gt;先将问题简化，分析一个4x4的矩阵：&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://www.imsry.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux配置网卡（静态）IP地址</title>
    <link href="http://www.imsry.cn/posts/15ab52a4.html"/>
    <id>http://www.imsry.cn/posts/15ab52a4.html</id>
    <published>2019-09-23T07:00:08.000Z</published>
    <updated>2020-05-29T09:09:37.432Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>上一篇记录了在OrangePi-Zero连接WIFI的过程，今天试着给自带默认网卡配置一下静态IP地址，以方便在整个局域网内能够访问设备。</p></blockquote><h2 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h2><p>还是得通过ssh等方式登录Server，然后查看网卡的名称。执行<code>ifconfig</code>命令，找到eth开头的网卡，我这里是<code>eth0</code>。</p><h2 id="再者"><a href="#再者" class="headerlink" title="再者"></a>再者</h2><p>使用<code>vim</code>编辑文件<code>/etc/network/interfaces</code>，增加新行如下：</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">auto eht0</span><br><span class="line"><span class="comment">#iface eth0 inet dhcp #此处为DHCP自动获取IP，注释掉了哟</span></span><br><span class="line">iface eth0 inet static <span class="comment">#声明接口为静态的</span></span><br><span class="line">address 172.16.105.134 <span class="comment">#IP地址</span></span><br><span class="line">network 172.16.105.0<span class="comment">#网段</span></span><br><span class="line">netmask 255.255.255.0<span class="comment">#子网掩码</span></span><br><span class="line">broadcast 172.16.105.255<span class="comment">#广播地址</span></span><br><span class="line">gateway 172.16.105.254<span class="comment">#网关IP</span></span><br></pre></td></tr></table></figure><p>保存！</p><p>然后重启网卡，这里我使用<code>ifconfig eth0 down</code>和<code>ifconfig eth0 up</code>达到关闭和重新打开的效果。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>执行<code>ifconfig eth0</code>查看IP是否正确配置，并且可以在局域网内<code>ping</code>通该地址和<code>ssh</code>到Server。</p><p>本篇仅为给自己的小记录，供大家参考！</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;上一篇记录了在OrangePi-Zero连接WIFI的过程，今天试着给自带默认网卡配置一下静态IP地址，以方便在整个局域网内能够访问设备。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;首先&quot;&gt;&lt;a href=&quot;#首先&quot; class=&quot;headerlink&quot; title=&quot;首先&quot;&gt;&lt;/a&gt;首先&lt;/h2&gt;&lt;p&gt;还是得通过ssh等方式登录Server，然后查看网卡的名称。执行&lt;code&gt;ifconfig&lt;/code&gt;命令，找到eth开头的网卡，我这里是&lt;code&gt;eth0&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;再者&quot;&gt;&lt;a href=&quot;#再者&quot; class=&quot;headerlink&quot; title=&quot;再者&quot;&gt;&lt;/a&gt;再者&lt;/h2&gt;&lt;p&gt;使用&lt;code&gt;vim&lt;/code&gt;编辑文件&lt;code&gt;/etc/network/interfaces&lt;/code&gt;，增加新行如下：&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.imsry.cn/categories/Linux/"/>
    
    
      <category term="网卡" scheme="http://www.imsry.cn/tags/%E7%BD%91%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>OrangePi Zero 简单连接WIFI的方法</title>
    <link href="http://www.imsry.cn/posts/ba6472f.html"/>
    <id>http://www.imsry.cn/posts/ba6472f.html</id>
    <published>2019-09-12T06:02:31.000Z</published>
    <updated>2020-05-29T09:09:05.349Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>有幸拿到可爱的小玩意儿“OrangePi_Zero”，也烧写了多个系统去体验，其中可以直接刷写OpenWrt，然后通过web管理界面启用WIFI功能。不过我需要的不是路由器，我需要的是能够连接WIFI的小型Server。</p></blockquote><h2 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h2><p>通过ssh等方式登录server，然后查看无线网卡的名称。这里使用<code>iwconfig</code>命令，如果无线网卡正常安装且驱动正常的话，你能够看到一个以<code>wlan</code>开头+数字的的网卡，记住这个名字（我这里是<code>wlan5</code>)。</p><h2 id="再者"><a href="#再者" class="headerlink" title="再者"></a>再者</h2><p>使用<code>vim</code>编辑文件<code>/etc/network/interfaces</code>，内容如下：</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># interfaces(5) file used by ifup(8) and ifdown(8)</span></span><br><span class="line"><span class="comment"># Include files from /etc/network/interfaces.d:</span></span><br><span class="line"><span class="built_in">source</span>-directory /etc/network/interfaces.d</span><br><span class="line"></span><br><span class="line">auto wlan5</span><br><span class="line">allow-hotplug wlan5</span><br><span class="line">iface wlan5 inet dhcp</span><br><span class="line">wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf</span><br></pre></td></tr></table></figure><p>保存然后创建上面配置的wpa-conf文件<code>/etc/wpa_supplicant/wpa_supplicant.conf</code>，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ctrl_interface=/var/run/wpa_supplicant</span><br><span class="line">update_config=1</span><br><span class="line">network=&#123;</span><br><span class="line">ssid=<span class="string">"需要连接的SSID名称"</span></span><br><span class="line">psk=<span class="string">"WIFI密码"</span></span><br><span class="line">proto=RSN</span><br><span class="line">key_mgmt=WPA-PSK</span><br><span class="line">pairwise=CCMP</span><br><span class="line">auth_alg=OPEN</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存！</p><p>然后执行<code>ifdown wlan5</code>关闭并执行<code>ifup wlan5</code>重启网卡，正常的话应该能看到网卡连接WIFI并寻找DHCP服务器来请求IP地址。</p><p>如果<code>ifdown</code>或<code>ifup</code>报错，试一下<code>sudo killall wpa_supplicant</code>，然后继续尝试。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>如果失败了怎么办？<code>reboot</code>重启一下机器，它会自动连接WIFI的。</p><p>本篇仅为给自己的一个小记录，仅供参考</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;有幸拿到可爱的小玩意儿“OrangePi_Zero”，也烧写了多个系统去体验，其中可以直接刷写OpenWrt，然后通过web管理界面启用WIFI功能。不过我需要的不是路由器，我需要的是能够连接WIFI的小型Server。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;首先&quot;&gt;&lt;a href=&quot;#首先&quot; class=&quot;headerlink&quot; title=&quot;首先&quot;&gt;&lt;/a&gt;首先&lt;/h2&gt;&lt;p&gt;通过ssh等方式登录server，然后查看无线网卡的名称。这里使用&lt;code&gt;iwconfig&lt;/code&gt;命令，如果无线网卡正常安装且驱动正常的话，你能够看到一个以&lt;code&gt;wlan&lt;/code&gt;开头+数字的的网卡，记住这个名字（我这里是&lt;code&gt;wlan5&lt;/code&gt;)。&lt;/p&gt;
&lt;h2 id=&quot;再者&quot;&gt;&lt;a href=&quot;#再者&quot; class=&quot;headerlink&quot; title=&quot;再者&quot;&gt;&lt;/a&gt;再者&lt;/h2&gt;&lt;p&gt;使用&lt;code&gt;vim&lt;/code&gt;编辑文件&lt;code&gt;/etc/network/interfaces&lt;/code&gt;，内容如下：&lt;/p&gt;
    
    </summary>
    
      <category term="开发板" scheme="http://www.imsry.cn/categories/%E5%BC%80%E5%8F%91%E6%9D%BF/"/>
    
    
      <category term="OrangePi" scheme="http://www.imsry.cn/tags/OrangePi/"/>
    
      <category term="Network" scheme="http://www.imsry.cn/tags/Network/"/>
    
  </entry>
  
  <entry>
    <title>利用Dockerfile创建PHP7.3环境镜像</title>
    <link href="http://www.imsry.cn/posts/a05a90fb.html"/>
    <id>http://www.imsry.cn/posts/a05a90fb.html</id>
    <published>2019-07-04T02:39:55.000Z</published>
    <updated>2020-05-29T09:08:34.590Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于Docker以及Dockerfile"><a href="#关于Docker以及Dockerfile" class="headerlink" title="关于Docker以及Dockerfile"></a>关于Docker以及Dockerfile</h2><p>Docker容器就不详细介绍了，把它理解成类似“虚拟机”的一种介质吧。至于如何创建一个镜像，主要有两种方法：1. 从现有的镜像基础上，创建容器并自定义后Commit成镜像；2. 利用Dockerfile，根据自己的需要，如同写shell脚本一般，将自己需要搭建的容器环境所需的指令一条一条的汇集成指令集，然后让Docker根据Dockerfile来自动创建你想要的镜像</p><h2 id="创建自己的PHP7-3镜像"><a href="#创建自己的PHP7-3镜像" class="headerlink" title="创建自己的PHP7.3镜像"></a>创建自己的PHP7.3镜像</h2><p>下载PHP源码：<a href="https://www.php.net/downloads.php" target="_blank" rel="noopener">https://www.php.net/downloads.php</a></p><p>我这里下载了php-7.3.6.tar.bz2</p><a id="more"></a><h3 id="Dockerfile内容"><a href="#Dockerfile内容" class="headerlink" title="Dockerfile内容"></a>Dockerfile内容</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定基于ubuntu:16.04创建</span></span><br><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">16.04</span></span><br><span class="line"><span class="comment"># 声明作者</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> haowanxing &lt;haowanxing@gmail.com&gt;</span><br><span class="line"><span class="comment"># 定义环境变量，设置时区时使用</span></span><br><span class="line"><span class="keyword">ENV</span> TIME_ZONE Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改root账号密码</span></span><br><span class="line"><span class="keyword">RUN</span> /bin/echo 'root:0x4f5da2.cn' | chpasswd</span><br><span class="line"># 新增一个prod账号，并设置密码</span><br><span class="line">RUN useradd prod</span><br><span class="line">RUN /bin/echo 'prod:123456' | chpasswd</span><br><span class="line"></span><br><span class="line"># 安装编译依赖</span><br><span class="line">RUN apt-get update</span><br><span class="line">RUN apt-get install -y gcc make openssl libssl-dev curl libbz2-dev libxml2-dev libjpeg-dev libpng-dev libfreetype6-dev libzip-dev</span><br><span class="line">RUN apt-get install -y libcurl4-gnutls-dev</span><br><span class="line">RUN ln -s /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib</span><br><span class="line"></span><br><span class="line"># 拷贝源码到环境中</span><br><span class="line">ADD php-7.3.6.tar.bz2 /tmp/</span><br><span class="line"># 编译和安装</span><br><span class="line">RUN cd /tmp/php-7.3.6 &amp;&amp; \</span><br><span class="line">./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc --enable-fpm --with-fpm-user=prod --with-fpm-group=prod --with-mysqli --with-pdo-mysql --with-iconv-dir --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir=/usr --enable-xml --disable-rpath --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curl --enable-mbregex --enable-mbstring --enable-ftp --with-gd --with-openssl --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap --without-pear --with-gettext --disable-fileinfo --enable-maintainer-zts &amp;&amp; \</span><br><span class="line">make &amp;&amp; \</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"># 后续配置</span><br><span class="line">RUN cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf &amp;&amp; \</span><br><span class="line">sed -i 's/127.0.0.1/0.0.0.0/g' /usr/local/php/etc/php-fpm.conf &amp;&amp; \</span><br><span class="line">sed -i "21a daemonize=no" /usr/local/php/etc/php-fpm.conf &amp;&amp; \</span><br><span class="line">echo "$&#123;TIME_ZONE&#125;" &gt; /etc/timezone &amp;&amp; \</span><br><span class="line">ln -sf /usr/share/zoneinfo/$&#123;TIME_ZONE&#125; /etc/localtime</span><br><span class="line"></span><br><span class="line"># 清理无用缓存</span><br><span class="line">RUN rm -rf /tmp/php-* &amp;&amp; apt-get clean</span><br><span class="line"></span><br><span class="line"># 拷贝已定义好的配置文件到环境中</span><br><span class="line">COPY php.ini /usr/local/php/etc/</span><br><span class="line"></span><br><span class="line"># 设置默认工作目录</span><br><span class="line">WORKDIR /usr/local/php/</span><br><span class="line"></span><br><span class="line"># 声明端口</span><br><span class="line">EXPOSE 22</span><br><span class="line">EXPOSE 9000</span><br><span class="line"></span><br><span class="line"># 容器启动时的执行指令</span><br><span class="line">CMD ["./sbin/php-fpm","-c","/usr/local/php/etc/php.ini","-y","/usr/local/php/etc/php-fpm.conf"]</span><br></pre></td></tr></table></figure><p>一切都准备好了以后，打开shell终端，cd到Dockerfile目录，目录结构如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">~/DockerSpace/phpserver/php » tree ./                                                                                                                                           anthony@Anthony-Macbook-Air</span><br><span class="line">./</span><br><span class="line">├── Dockerfile</span><br><span class="line">├── php-7.3.6.tar.bz2</span><br><span class="line">└── php.ini</span><br></pre></td></tr></table></figure><p>将源码和Dockerfile放在同一目录，此目录中还有一个php.ini，放置此文件是方便在创建镜像的时候直接将PHP的配置文件替换进去，这样就省去后期手动修改配置的麻烦了。</p><p>使用build指令进行构建镜像：<code>docker build -t haowanxing/php:7.3.6 .</code></p><p>解释：</p><ol><li>-t #定义构建的镜像名称</li><li>后面跟了一个<code>.</code>表示Dockerfile文件在当前目录</li></ol><p>build指令执行完成之后，你会看到类似这样的输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"> ---&gt; c4838c0eca4a</span><br><span class="line">Step 18/19 : EXPOSE 9000</span><br><span class="line"> ---&gt; Running in 447e0dfb161a</span><br><span class="line">Removing intermediate container 447e0dfb161a</span><br><span class="line"> ---&gt; 25c6980f2084</span><br><span class="line">Step 19/19 : CMD [&quot;./sbin/php-fpm&quot;,&quot;-c&quot;,&quot;/usr/local/php/etc/php-fpm.conf&quot;]</span><br><span class="line"> ---&gt; Running in d00d6a4b2a2a</span><br><span class="line">Removing intermediate container d00d6a4b2a2a</span><br><span class="line"> ---&gt; e146bd75c478</span><br><span class="line">Successfully built e146bd75c478</span><br><span class="line">Successfully tagged haowanxing/php:7.3.6</span><br></pre></td></tr></table></figure><p>说明构建成功，你可以使用<code>docker run</code>来创建并启动容器了。</p><p>否则会输出具体的错误信息和发生错误的具体指令。</p><h3 id="创建容器并检查容器环境是否正常"><a href="#创建容器并检查容器环境是否正常" class="headerlink" title="创建容器并检查容器环境是否正常"></a>创建容器并检查容器环境是否正常</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">~/DockerSpace/phpserver/php » docker run -itd --name myphp haowanxing/php:7.3.6                                                                                                 anthony@Anthony-Macbook-Air</span><br><span class="line">a612173bd9e715a838b29ef0d7e94ddbcac3f42232668b1e43e1e090c8633e9f</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">~/DockerSpace/phpserver/php » docker exec -it myphp /bin/bash                                                                                                                   anthony@Anthony-Macbook-Air</span><br><span class="line">root@a612173bd9e7:/usr/local/php# ps aux</span><br><span class="line">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">root         1  1.3  0.8 170396 18408 pts/0    Ss+  05:09   0:00 php-fpm: master process (/usr/local/php/etc/php-fpm.conf)</span><br><span class="line">prod         7  0.0  0.3 170396  6784 pts/0    S+   05:09   0:00 php-fpm: pool www</span><br><span class="line">prod         8  0.0  0.3 170396  6784 pts/0    S+   05:09   0:00 php-fpm: pool www</span><br><span class="line">root         9  1.6  0.1  18236  3192 pts/1    Ss   05:09   0:00 /bin/bash</span><br><span class="line">root        19  0.0  0.1  34420  2812 pts/1    R+   05:09   0:00 ps aux</span><br></pre></td></tr></table></figure><h3 id="这里备注一下我遇到的错误以及我是如何解决的"><a href="#这里备注一下我遇到的错误以及我是如何解决的" class="headerlink" title="这里备注一下我遇到的错误以及我是如何解决的"></a>这里备注一下我遇到的错误以及我是如何解决的</h3><h4 id="OpenSSL’s-libraries错误"><a href="#OpenSSL’s-libraries错误" class="headerlink" title="OpenSSL’s libraries错误"></a>OpenSSL’s libraries错误</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configure: error: Cannot find OpenSSL’s libraries</span><br></pre></td></tr></table></figure><p>命名安装了openssl和libssl-dev，但还是报错，于是如下重新链接libssl.so到lib下，RUN <code>ln -s /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib</code>。</p><p>至于这个libssl.so在哪儿？ 我是通过<code>find /usr/lib -name libssl.so</code>找到的。</p><h4 id="libcurl错误"><a href="#libcurl错误" class="headerlink" title="libcurl错误"></a>libcurl错误</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">configure: error: Please reinstall the libcurl distribution -</span><br><span class="line">      easy.h should be in &lt;curl-dir&gt;/include/curl/</span><br></pre></td></tr></table></figure><p>检查并多次尝试之后，通过<code>apt-get install -y libcurl4-gnutls-dev</code>来解决；</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于Docker以及Dockerfile&quot;&gt;&lt;a href=&quot;#关于Docker以及Dockerfile&quot; class=&quot;headerlink&quot; title=&quot;关于Docker以及Dockerfile&quot;&gt;&lt;/a&gt;关于Docker以及Dockerfile&lt;/h2&gt;&lt;p&gt;Docker容器就不详细介绍了，把它理解成类似“虚拟机”的一种介质吧。至于如何创建一个镜像，主要有两种方法：1. 从现有的镜像基础上，创建容器并自定义后Commit成镜像；2. 利用Dockerfile，根据自己的需要，如同写shell脚本一般，将自己需要搭建的容器环境所需的指令一条一条的汇集成指令集，然后让Docker根据Dockerfile来自动创建你想要的镜像&lt;/p&gt;
&lt;h2 id=&quot;创建自己的PHP7-3镜像&quot;&gt;&lt;a href=&quot;#创建自己的PHP7-3镜像&quot; class=&quot;headerlink&quot; title=&quot;创建自己的PHP7.3镜像&quot;&gt;&lt;/a&gt;创建自己的PHP7.3镜像&lt;/h2&gt;&lt;p&gt;下载PHP源码：&lt;a href=&quot;https://www.php.net/downloads.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.php.net/downloads.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我这里下载了php-7.3.6.tar.bz2&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://www.imsry.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker" scheme="http://www.imsry.cn/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>引用符号&#39;&amp;&#39;在foreach循环中的惊喜</title>
    <link href="http://www.imsry.cn/posts/5f047c20.html"/>
    <id>http://www.imsry.cn/posts/5f047c20.html</id>
    <published>2019-06-21T06:51:27.000Z</published>
    <updated>2020-05-29T09:05:34.985Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>工作中总会遇到一些奇奇怪怪的由前人所写下的不可置疑的代码，如果你仅仅跟着眼前所见的代码去理解他人的思路，Well You have fell into a terrible situation.</p></blockquote><p>贴一段示例代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$students = [</span><br><span class="line">    [<span class="string">'name'</span>=&gt;<span class="string">'Jackson'</span>,<span class="string">'age'</span>=&gt;<span class="number">15</span>],</span><br><span class="line">    [<span class="string">'name'</span>=&gt;<span class="string">'Jerry'</span>,<span class="string">'age'</span>=&gt;<span class="number">14</span>],</span><br><span class="line">    [<span class="string">'name'</span>=&gt;<span class="string">'Amy'</span>,<span class="string">'age'</span>=&gt;<span class="number">14</span>]</span><br><span class="line">];</span><br><span class="line">$classes = [</span><br><span class="line">    <span class="string">'CL001'</span>=&gt;[<span class="string">'name'</span>=&gt;<span class="string">'Language'</span>,<span class="string">'classTime'</span>=&gt;<span class="number">30</span>],</span><br><span class="line">    <span class="string">'CL002'</span>=&gt;[<span class="string">'name'</span>=&gt;<span class="string">'PE'</span>,<span class="string">'classTime'</span>=&gt;<span class="number">13</span>]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * 循环$students,为其添加一个属性'name-age'</span></span><br><span class="line"><span class="comment"> * 这里使用了&amp;$v以获得数组内部元素的引用，使的可以在循环体内修改元素内容</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">foreach</span> ($students <span class="keyword">as</span> $k=&gt;&amp;$v)&#123;</span><br><span class="line">    $v[<span class="string">'name-age'</span>] = $v[<span class="string">'name'</span>] . <span class="string">'-'</span> .$v[<span class="string">'age'</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$classString = <span class="string">''</span>;<span class="comment">//定义一个空串</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 循环$classes,将所有课程ID和名称联结成串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">foreach</span> ($classes <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">    $classString .= <span class="string">'ClassID:'</span>.$k.<span class="string">'-'</span>.$v[<span class="string">'name'</span>].PHP_EOL;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $classString;</span><br><span class="line">var_dump($students);<span class="comment">//Think here!</span></span><br></pre></td></tr></table></figure><p>你也许会回答这样一个输出结果：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">ClassID:CL001-Language</span><br><span class="line">ClassID:CL002-PE</span><br><span class="line">array(3) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  array(3) &#123;</span><br><span class="line">    [&quot;name&quot;]=&gt;</span><br><span class="line">    string(7) &quot;Jackson&quot;</span><br><span class="line">    [&quot;age&quot;]=&gt;</span><br><span class="line">    int(15)</span><br><span class="line">    [&quot;name-age&quot;]=&gt;</span><br><span class="line">    string(10) &quot;Jackson-15&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  [1]=&gt;</span><br><span class="line">  array(3) &#123;</span><br><span class="line">    [&quot;name&quot;]=&gt;</span><br><span class="line">    string(5) &quot;Jerry&quot;</span><br><span class="line">    [&quot;age&quot;]=&gt;</span><br><span class="line">    int(14)</span><br><span class="line">    [&quot;name-age&quot;]=&gt;</span><br><span class="line">    string(8) &quot;Jerry-14&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  [2]=&gt;</span><br><span class="line">  array(3) &#123;</span><br><span class="line">    [&quot;name&quot;]=&gt;</span><br><span class="line">    string(3) &quot;Amy&quot;</span><br><span class="line">    [&quot;age&quot;]=&gt;</span><br><span class="line">    int(14)</span><br><span class="line">    [&quot;name-age&quot;]=&gt;</span><br><span class="line">    string(6) &quot;Amy-14&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也许会有不少人会使用foreach+引用符号’&amp;’来遍历更新数组内容，这样也的确可行。但是！这里就惊现了这样一个巨坑，为何在循环<code>$classes</code>之后，<code>$students</code>变得面目全非？来看看实际输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">ClassID:CL001-Language</span><br><span class="line">ClassID:CL002-PE</span><br><span class="line">array(3) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  array(3) &#123;</span><br><span class="line">    [&quot;name&quot;]=&gt;</span><br><span class="line">    string(7) &quot;Jackson&quot;</span><br><span class="line">    [&quot;age&quot;]=&gt;</span><br><span class="line">    int(15)</span><br><span class="line">    [&quot;name-age&quot;]=&gt;</span><br><span class="line">    string(10) &quot;Jackson-15&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  [1]=&gt;</span><br><span class="line">  array(3) &#123;</span><br><span class="line">    [&quot;name&quot;]=&gt;</span><br><span class="line">    string(5) &quot;Jerry&quot;</span><br><span class="line">    [&quot;age&quot;]=&gt;</span><br><span class="line">    int(14)</span><br><span class="line">    [&quot;name-age&quot;]=&gt;</span><br><span class="line">    string(8) &quot;Jerry-14&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  [2]=&gt;</span><br><span class="line">  &amp;array(2) &#123;</span><br><span class="line">    [&quot;name&quot;]=&gt;</span><br><span class="line">    string(2) &quot;PE&quot;</span><br><span class="line">    [&quot;classTime&quot;]=&gt;</span><br><span class="line">    int(13)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现了吧，最后一项为什么是<code>$classes</code>的元素？而且是其最后一项？聪明的你现在应该在开始思考’&amp;’符号了！</p><p>两次foreach循环我们都用了<code>$k</code>和<code>$v</code>来代替键和值，但在<code>&amp;</code>符号作用在<code>$v</code>上的时候，这个<code>$v</code>实际是每次循环的元素地址。而在第二个foreach中使用的<code>$v</code>实际上已经是一个存在的引用（指向上一个数组的最后一次访问的元素），在对他进行赋值修改时，就会导致与其实际指向的数据发生修改，因为他们就是逻辑上的“相同内存”。</p><p>我所举例的代码比较容易发现问题，其实我实际遇到的问题却糟糕的多，因为第二次循环是为了给第一次循环的内容进行填补，所以元素结构是一模一样的，这样出现的现象就是同一个元素在数组中出现了两次，其中原数组的最后一个元素指向第二次循环的数组的最后一个。</p><p>这里举例的是当<code>&amp;</code>符号用在<code>=&gt;</code>后面的值变量，如果用在<code>=&gt;</code>前面的键变量呢？？？</p><p>实在可怕！ 还好我喜欢用array_walk来代替此类做法。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;工作中总会遇到一些奇奇怪怪的由前人所写下的不可置疑的代码，如果你仅仅跟着眼前所见的代码去理解他人的思路，Well You have fell into a terrible situation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;贴一段示例代码：&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$students = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;Jackson&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;age&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;Jerry&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;age&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;Amy&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;age&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$classes = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;CL001&#39;&lt;/span&gt;=&amp;gt;[&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;Language&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;classTime&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;CL002&#39;&lt;/span&gt;=&amp;gt;[&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;PE&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;classTime&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 循环$students,为其添加一个属性&#39;name-age&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 这里使用了&amp;amp;$v以获得数组内部元素的引用，使的可以在循环体内修改元素内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;foreach&lt;/span&gt; ($students &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; $k=&amp;gt;&amp;amp;$v)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $v[&lt;span class=&quot;string&quot;&gt;&#39;name-age&#39;&lt;/span&gt;] = $v[&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;] . &lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt; .$v[&lt;span class=&quot;string&quot;&gt;&#39;age&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$classString = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;	&lt;span class=&quot;comment&quot;&gt;//定义一个空串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 循环$classes,将所有课程ID和名称联结成串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;foreach&lt;/span&gt; ($classes &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; $k=&amp;gt;$v)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $classString .= &lt;span class=&quot;string&quot;&gt;&#39;ClassID:&#39;&lt;/span&gt;.$k.&lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt;.$v[&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;].PHP_EOL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; $classString;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var_dump($students);	&lt;span class=&quot;comment&quot;&gt;//Think here!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你也许会回答这样一个输出结果：&lt;/p&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.imsry.cn/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.imsry.cn/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>算法时间复杂度的表达-渐进符号与主定理（转载）</title>
    <link href="http://www.imsry.cn/posts/722b27c3.html"/>
    <id>http://www.imsry.cn/posts/722b27c3.html</id>
    <published>2019-05-22T01:09:37.000Z</published>
    <updated>2020-05-29T09:06:22.150Z</updated>
    
    <content type="html"><![CDATA[<p>渐进符号是分析算法时间复杂度的常用记号，对于某个规模为n的问题，当n足够大时，就可以忽略掉复杂度表达式中的低阶项和最高次项的系数，由此引出“渐进复杂度”，并且用渐进符号来对“渐进复杂度”进行表达。</p><h3 id="一、渐进符号"><a href="#一、渐进符号" class="headerlink" title="一、渐进符号"></a>一、渐进符号</h3><p>1、O(大O符号）：上界<br>定义：若存在两个正的常数 c 和 n0 , 对于任意 n≥n0 , 都有 T( n)≤cf( n) ,则称T( n) = O( f( n) )(或称算法在 O( f( n))中)。</p><p>大 O 符号用来描述增长率的上限,表示 T( n)的增长最多像 f( n)增长的那样快,也就是说, 当输入规模为 n时, 算法消耗时间的最大值,这个上限的阶越低, 结果就越有价值。上界是对算法效率的一种承诺。</p><p>大O符号的含义如下图所示：<br><img src="../uploads/qiniu/2019052215584876484907.png" alt="大O符号的含义"></p><p>2、Ω（大Ω符号）：下界<br>定义：若存在两个正的常数 c和 n0 ,对于任意 n≥ n0 , 都有 T( n)≥cg( n) ,则称T( n) = Ω( g( n) )(或称算法在 Ω( g( n) )中)。</p><p>大 Ω符号用来描述增长率的下限, 也就是说, 当输入规模为 n 时,算法消耗时间的最小值。与大 O 符号对称, 这个下限的阶越高,结果就越有价值。</p><a id="more"></a><p>大Ω号的含义如下图所示：<br><img src="../uploads/qiniu/2019052215584876868380.png" alt="大Ω号的含义"></p><p>大 Ω符号常用来分析某个问题或某类算法的时间下界。例如, 矩阵乘法问题的时间下界为 Ω( n^2) , 是指任何两个 n×n 矩阵相乘的算法的时间复杂性不会小于 n^2<br>, 基于比较的排序算法的时间下界为 Ω( nlog 2 n) ,是指无法设计出基于比较的排序算法, 其时间复杂性小于 nlog 2 n。</p><p>大 Ω符号常常与大 O 符号配合以证明某问题的一个特定算法是该问题的最优算法,或是该问题中的某算法类中的最优算法。</p><p>3、Θ(theta) ：紧确界<br>定义：若存在 3 个正的常数 c1 、 c2 和 n0 ,对于任意 n≥ n0 , 都有 c1f(n)≥ T(n)≥ c2f(n) , 则称 T( n) = Θ( f(n))。<br>Θ符号意味着 T( n)与 f( n)同阶, 用来表示算法的精确阶。</p><p>Θ符号的含义如下图所示。<br><img src="../uploads/qiniu/20190522155848770263496.png" alt="Θ符号的含义"></p><h3 id="二、主定理"><a href="#二、主定理" class="headerlink" title="二、主定理"></a>二、主定理</h3><p>主定理主要用于对一些递归算法进行复杂性分析，这类算法的特征是：其复杂性表达式是以递推关系式表达的。主定理并不适用于所有类型的递推关系式。</p><p>假设有递推关系式：<br><img src="../uploads/qiniu/20190522155848772454074.png" alt="递推关系式"></p><p>其中 n为问题规模， a为递推的子问题数量， n/b 为每个子问题的规模（假设每个子问题的规模基本一样）， f(n)为递推以外进行的计算工作。<br>a≥1，b&gt;1为常数，f(n) 为函数，T(n) 为非负整数。则有以下结果：</p><p>(1)若：<img src="../uploads/qiniu/20190522155848774110336.png" alt="等式一">那么：<img src="../uploads/qiniu/20190522155848775620104.png" alt="渐进式一"></p><p>(2)若：<img src="../uploads/qiniu/20190522155848776866787.png" alt="等式二">，那么：<img src="../uploads/qiniu/20190522155848779761775.png" alt="渐进式二"></p><p>(3)若：<img src="../uploads/qiniu/20190522155848780987257.png" alt="等式三">，且对于某个常数c&lt;1, 和所有充分大的 n有:<img src="../uploads/qiniu/20190522155848781870147.png" alt="不等式三">，那么<img src="../uploads/qiniu/20190522155848782726579.png" alt="渐进式为Fn的紧确界"></p><p>下面举几个例子来说明主定理的应用过程：</p><p>1、设某个算法的复杂性的递推关系式为：T(n)=4T(n/2)+n<br>对比主定理中递推关系式的标准形式：a=4,b=2,f(n)=n<br>所以n^(logba)=n^2,取 0&lt;ε&lt;1即可满足第一种情况，所以T(n)=Θ(n^2)</p><p>2、归并排序是一种很适合用递归实现的排序方法，其复杂性递推关系式为：T(n)=2T(n/2)+Θ(n)<br>满足主定理的第二种情况，所以其时间复杂度为：T(n)=nlogn</p><p>3、设某个算法的复杂性的递推关系式为：T(n)=4T(n/2)+n^3<br>很显然，满足主定理第三种情况，只需要取1/2≤c&lt;1即可。T(n)=n^3</p><hr><ul><li>作者：古月慕南 </li><li>来源：CSDN </li><li>原文：<a href="https://blog.csdn.net/u013468917/article/details/70229365" target="_blank" rel="noopener">https://blog.csdn.net/u013468917/article/details/70229365</a> </li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;渐进符号是分析算法时间复杂度的常用记号，对于某个规模为n的问题，当n足够大时，就可以忽略掉复杂度表达式中的低阶项和最高次项的系数，由此引出“渐进复杂度”，并且用渐进符号来对“渐进复杂度”进行表达。&lt;/p&gt;
&lt;h3 id=&quot;一、渐进符号&quot;&gt;&lt;a href=&quot;#一、渐进符号&quot; class=&quot;headerlink&quot; title=&quot;一、渐进符号&quot;&gt;&lt;/a&gt;一、渐进符号&lt;/h3&gt;&lt;p&gt;1、O(大O符号）：上界&lt;br&gt;定义：若存在两个正的常数 c 和 n0 , 对于任意 n≥n0 , 都有 T( n)≤cf( n) ,则称T( n) = O( f( n) )(或称算法在 O( f( n))中)。&lt;/p&gt;
&lt;p&gt;大 O 符号用来描述增长率的上限,表示 T( n)的增长最多像 f( n)增长的那样快,也就是说, 当输入规模为 n时, 算法消耗时间的最大值,这个上限的阶越低, 结果就越有价值。上界是对算法效率的一种承诺。&lt;/p&gt;
&lt;p&gt;大O符号的含义如下图所示：&lt;br&gt;&lt;img src=&quot;../uploads/qiniu/2019052215584876484907.png&quot; alt=&quot;大O符号的含义&quot;&gt;&lt;/p&gt;
&lt;p&gt;2、Ω（大Ω符号）：下界&lt;br&gt;定义：若存在两个正的常数 c和 n0 ,对于任意 n≥ n0 , 都有 T( n)≥cg( n) ,则称T( n) = Ω( g( n) )(或称算法在 Ω( g( n) )中)。&lt;/p&gt;
&lt;p&gt;大 Ω符号用来描述增长率的下限, 也就是说, 当输入规模为 n 时,算法消耗时间的最小值。与大 O 符号对称, 这个下限的阶越高,结果就越有价值。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://www.imsry.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://www.imsry.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="时间复杂度" scheme="http://www.imsry.cn/tags/%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/"/>
    
      <category term="定理" scheme="http://www.imsry.cn/tags/%E5%AE%9A%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>软考选择题-索引文件地址项</title>
    <link href="http://www.imsry.cn/posts/9b10448.html"/>
    <id>http://www.imsry.cn/posts/9b10448.html</id>
    <published>2019-05-15T07:05:47.000Z</published>
    <updated>2020-05-28T10:08:36.940Z</updated>
    
    <content type="html"><![CDATA[<p>【选择题】</p><p>设文件索引节点中有8个地址项，每个地址项大小为4字节，其中5个地址项为直接地址索引，2个地址项是一级间接地址索引，1个地址项是二级间接地址索引，磁盘索引块和磁盘数据块大小为1KB。若要访问文件的逻辑块号分别为5和518，则系统应分别采用____；而且可表示的单个文件最大长度是____KB。</p><p>第一空选项：</p><ol><li>直接地址索引和一级间接地址索引</li><li>直接地址索引和二级间接地址索引</li><li>一级间接地址索引和二级间接地址索引</li><li>一级间接地址索引和一级间接地址索引</li></ol><p>第二空选项：</p><ol><li>517</li><li>1029</li><li>16513</li><li>66053</li></ol><hr><p>解答：</p><p>由题所知，索引快大小1KB，每个地址项4Byte，则每个索引块包含地址项为1KB/4Byte=256个。</p><p>直接地址索引实际拥有5*1个块，块号0~4</p><p>一级间接地址索引实际拥有2*256个块，块号5~260,261~516</p><p>二级间接地址索引实际拥有1*256*256个块，块号517~66052</p><p>逻辑块号为5的在一级间接地址索引，逻辑块号为518的在二级间接地址索引。</p><p>如上计算，文件索引节点中可以有66053个索引块，即最大文件长度为66053*1KB</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;【选择题】&lt;/p&gt;
&lt;p&gt;设文件索引节点中有8个地址项，每个地址项大小为4字节，其中5个地址项为直接地址索引，2个地址项是一级间接地址索引，1个地址项是二级间接地址索引，磁盘索引块和磁盘数据块大小为1KB。若要访问文件的逻辑块号分别为5和518，则系统应分别采用____；而
      
    
    </summary>
    
      <category term="考试" scheme="http://www.imsry.cn/categories/%E8%80%83%E8%AF%95/"/>
    
    
      <category term="软考" scheme="http://www.imsry.cn/tags/%E8%BD%AF%E8%80%83/"/>
    
      <category term="索引文件" scheme="http://www.imsry.cn/tags/%E7%B4%A2%E5%BC%95%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>免费获得SSL证书-Let&#39;s Encrypt</title>
    <link href="http://www.imsry.cn/posts/7e214f75.html"/>
    <id>http://www.imsry.cn/posts/7e214f75.html</id>
    <published>2019-04-22T10:18:33.000Z</published>
    <updated>2020-05-29T09:07:38.126Z</updated>
    
    <content type="html"><![CDATA[<ul><li>使用工具：CertBot <a href="https://certbot.eff.org" target="_blank" rel="noopener">https://certbot.eff.org</a></li><li>Github地址：<a href="https://github.com/certbot/certbot" target="_blank" rel="noopener">https://github.com/certbot/certbot</a></li></ul><h3 id="第一步，安装certbot"><a href="#第一步，安装certbot" class="headerlink" title="第一步，安装certbot"></a>第一步，安装certbot</h3><p>MacOS版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install certbot</span><br></pre></td></tr></table></figure><p>Ubuntu版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install software-properties-common</span><br><span class="line">sudo add-apt-repository universe</span><br><span class="line">sudo add-apt-repository ppa:certbot/certbot</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install certbot python-certbot-nginx</span><br></pre></td></tr></table></figure><h3 id="第二步，运行certbot"><a href="#第二步，运行certbot" class="headerlink" title="第二步，运行certbot"></a>第二步，运行certbot</h3><h4 id="type-1-仅仅制作证书"><a href="#type-1-仅仅制作证书" class="headerlink" title="type-1.仅仅制作证书"></a>type-1.仅仅制作证书</h4><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot --nginx certonly</span><br></pre></td></tr></table></figure><h4 id="type-2-和nginx并用，一键部署"><a href="#type-2-和nginx并用，一键部署" class="headerlink" title="type-2.和nginx并用，一键部署"></a>type-2.和nginx并用，一键部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot --nginx</span><br></pre></td></tr></table></figure><p>根据提示，一步一步进行：（如果是Apache，则将<code>nginx</code>替换成<code>apache</code>即可）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot --nginx certonly</span><br></pre></td></tr></table></figure><p>输入邮箱地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter email address (used <span class="keyword">for</span> urgent renewal and security notices) (Enter <span class="string">'c'</span> to</span><br><span class="line">cancel): smoothest@yeah.net</span><br></pre></td></tr></table></figure><p>同意服务条款</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">(A)gree/(C)ancel: A</span><br></pre></td></tr></table></figure><p>接受Email通知推送</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">(Y)es/(N)o: Y</span><br></pre></td></tr></table></figure><p>输入域名或者Nginx已存在的Server配置编号（我这里nignx没配置过，所以不显示有编号的列表）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">No names were found <span class="keyword">in</span> your configuration files. Please enter <span class="keyword">in</span> your domain</span><br><span class="line">name(s) (comma and/or space separated)  (Enter <span class="string">'c'</span> to cancel): vpc.0x4f5da2.cn</span><br></pre></td></tr></table></figure><p>证书制作完毕！</p><p>证书位置：<code>/etc/letsencrypt/live/vpc.0x4f5da2.cn/fullchain.pem</code></p><p>私钥位置：<code>/etc/letsencrypt/live/vpc.0x4f5da2.cn/privkey.pem</code></p><p><code>我的执行Log:</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM-0-14-ubuntu:~$ sudo certbot --nginx certonly</span><br><span class="line">Saving debug log to /var/log/letsencrypt/letsencrypt.log</span><br><span class="line">Plugins selected: Authenticator nginx, Installer nginx</span><br><span class="line">Enter email address (used for urgent renewal and security notices) (Enter &apos;c&apos; to</span><br><span class="line">cancel): smoothest@yeah.net</span><br><span class="line">Starting new HTTPS connection (1): acme-v02.api.letsencrypt.org</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Please read the Terms of Service at</span><br><span class="line">https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf. You must</span><br><span class="line">agree in order to register with the ACME server at</span><br><span class="line">https://acme-v02.api.letsencrypt.org/directory</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">(A)gree/(C)ancel: A</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Would you be willing to share your email address with the Electronic Frontier</span><br><span class="line">Foundation, a founding partner of the Let&apos;s Encrypt project and the non-profit</span><br><span class="line">organization that develops Certbot? We&apos;d like to send you email about our work</span><br><span class="line">encrypting the web, EFF news, campaigns, and ways to support digital freedom.</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">(Y)es/(N)o: N</span><br><span class="line">No names were found in your configuration files. Please enter in your domain</span><br><span class="line">name(s) (comma and/or space separated)  (Enter &apos;c&apos; to cancel): vpc.0x4f5da2.cn</span><br><span class="line">Obtaining a new certificate</span><br><span class="line">Performing the following challenges:</span><br><span class="line">http-01 challenge for vpc.0x4f5da2.cn</span><br><span class="line">Waiting for verification...</span><br><span class="line">Cleaning up challenges</span><br><span class="line">Resetting dropped connection: acme-v02.api.letsencrypt.org</span><br><span class="line"></span><br><span class="line">IMPORTANT NOTES:</span><br><span class="line"> - Congratulations! Your certificate and chain have been saved at:</span><br><span class="line">   /etc/letsencrypt/live/vpc.0x4f5da2.cn/fullchain.pem</span><br><span class="line">   Your key file has been saved at:</span><br><span class="line">   /etc/letsencrypt/live/vpc.0x4f5da2.cn/privkey.pem</span><br><span class="line">   Your cert will expire on 2019-07-21. To obtain a new or tweaked</span><br><span class="line">   version of this certificate in the future, simply run certbot</span><br><span class="line">   again. To non-interactively renew *all* of your certificates, run</span><br><span class="line">   &quot;certbot renew&quot;</span><br><span class="line"> - Your account credentials have been saved in your Certbot</span><br><span class="line">   configuration directory at /etc/letsencrypt. You should make a</span><br><span class="line">   secure backup of this folder now. This configuration directory will</span><br><span class="line">   also contain certificates and private keys obtained by Certbot so</span><br><span class="line">   making regular backups of this folder is ideal.</span><br><span class="line"> - If you like Certbot, please consider supporting our work by:</span><br><span class="line"></span><br><span class="line">   Donating to ISRG / Let&apos;s Encrypt:   https://letsencrypt.org/donate</span><br><span class="line">   Donating to EFF:                    https://eff.org/donate-le</span><br></pre></td></tr></table></figure><h3 id="第三步，续期（证书过期前需执行）"><a href="#第三步，续期（证书过期前需执行）" class="headerlink" title="第三步，续期（证书过期前需执行）"></a>第三步，续期（证书过期前需执行）</h3><p>Let’s Encrypt提供的证书默认只有90天有效期，所以咱们必须在过期之前重新对证书进行续期。</p><p>对证书续期也十分的便利，直接再执行一下之前的命令，它会检测到并提示你进行相关操作。</p><p>以下是我的测试Log：（因为刚生成证书，我选择了第一项：重新安装证书。第二项是续期！）</p><p><img src="../uploads/qiniu/20190423155600085843353.png" alt="20190423155600085843353.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;使用工具：CertBot &lt;a href=&quot;https://certbot.eff.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://certbot.eff.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github地址：&lt;a href=&quot;https://github.com/certbot/certbot&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/certbot/certbot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;第一步，安装certbot&quot;&gt;&lt;a href=&quot;#第一步，安装certbot&quot; class=&quot;headerlink&quot; title=&quot;第一步，安装certbot&quot;&gt;&lt;/a&gt;第一步，安装certbot&lt;/h3&gt;&lt;p&gt;MacOS版本：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install certbot&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Ubuntu版本：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install software-properties-common&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo add-apt-repository universe&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo add-apt-repository ppa:certbot/certbot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install certbot python-certbot-nginx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;第二步，运行certbot&quot;&gt;&lt;a href=&quot;#第二步，运行certbot&quot; class=&quot;headerlink&quot; title=&quot;第二步，运行certbot&quot;&gt;&lt;/a&gt;第二步，运行certbot&lt;/h3&gt;&lt;h4 id=&quot;type-1-仅仅制作证书&quot;&gt;&lt;a href=&quot;#type-1-仅仅制作证书&quot; class=&quot;headerlink&quot; title=&quot;type-1.仅仅制作证书&quot;&gt;&lt;/a&gt;type-1.仅仅制作证书&lt;/h4&gt;
    
    </summary>
    
      <category term="网络安全" scheme="http://www.imsry.cn/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="SSL" scheme="http://www.imsry.cn/tags/SSL/"/>
    
      <category term="HTTPS" scheme="http://www.imsry.cn/tags/HTTPS/"/>
    
      <category term="Cert" scheme="http://www.imsry.cn/tags/Cert/"/>
    
      <category term="TLS" scheme="http://www.imsry.cn/tags/TLS/"/>
    
  </entry>
  
  <entry>
    <title>PHP加解密算法使用openssl替换mcrypt扩展</title>
    <link href="http://www.imsry.cn/posts/5c3bf0b6.html"/>
    <id>http://www.imsry.cn/posts/5c3bf0b6.html</id>
    <published>2019-02-20T10:02:20.000Z</published>
    <updated>2020-05-29T08:32:40.990Z</updated>
    
    <content type="html"><![CDATA[<p>PHP版本从7.2开始不再支持mcrypt扩展，所以我们需要使用OpenSSl对其进行替换。本文仅列出部分算法的替换示例，所以不在本文出现的算法或模式需要自行尝试，顺水推舟。</p><p>本文替换案例：</p><ol><li>MCRYPT_RIJNDAEL_128 | MCRYPT_MODE_ECB =&gt; AES-128-ECB</li><li>MCRYPT_DES | MCRYPT_MODE_CBC =&gt; DES-CBC</li><li>MCRYPT_RIJNDAEL_128 | MCRYPT_MODE_CBC =&gt; AES-128-CBC</li><li>MCRYPT_XTEA | MCRYPT_MODE_CBC</li></ol><blockquote><p>在使用 MCRYPT_RIJNDAEL_128 的地方，如果秘钥长度分别为16、24、32，则加密算法用 AES-128-ECB、AES-192-ECB、AES-256-ECB，BlockSize为16、24、32。</p></blockquote><p>首先列出需要用到的数据填充方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ZeroPadding</span><span class="params">($str, $block = <span class="number">16</span>)</span> </span>&#123;</span><br><span class="line">    $pad = $block - (strlen($str) % $block);</span><br><span class="line">    <span class="keyword">if</span>($pad == $block) <span class="keyword">return</span> $str;</span><br><span class="line">    <span class="keyword">return</span> $str.str_repeat(chr(<span class="number">0</span>),$pad);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ZeroUnPadding</span><span class="params">($str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> rtrim($str, <span class="string">"\0"</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">PKCS7Padding</span><span class="params">($str, $block_size)</span> </span>&#123;</span><br><span class="line">    $padding_char = $block_size - (strlen($str) % $block_size);</span><br><span class="line">    $padding_str = str_repeat(chr($padding_char),$padding_char);</span><br><span class="line">    <span class="keyword">return</span> $str.$padding_str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">PKCS7UnPadding</span><span class="params">($str)</span> </span>&#123;</span><br><span class="line">    $char=substr($str,<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">    $num=ord($char);</span><br><span class="line">    <span class="keyword">if</span>($num&gt;<span class="number">0</span> &amp;&amp; $num &lt;= strlen($str)) &#123;</span><br><span class="line">        $str = substr($str, <span class="number">0</span>, <span class="number">-1</span> * $num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="算法MCRYPT-RIJNDAEL-128-MCRYPT-MODE-ECB-对应-AES-128-ECB"><a href="#算法MCRYPT-RIJNDAEL-128-MCRYPT-MODE-ECB-对应-AES-128-ECB" class="headerlink" title="算法MCRYPT_RIJNDAEL_128 | MCRYPT_MODE_ECB 对应 AES-128-ECB"></a>算法MCRYPT_RIJNDAEL_128 | MCRYPT_MODE_ECB 对应 AES-128-ECB</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用mcrypt加密</span></span><br><span class="line">$data = <span class="string">'1234567890123456'</span>;</span><br><span class="line">$key = md5(<span class="string">'1230456789'</span>, <span class="keyword">true</span>);</span><br><span class="line">$encrypted = mcrypt_encrypt(MCRYPT_RIJNDAEL_128, $key, $data, MCRYPT_MODE_ECB);</span><br><span class="line">$edata = base64_encode($encrypted);</span><br><span class="line"><span class="keyword">return</span> $edata;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用OpenSSL加密</span></span><br><span class="line">$data = <span class="string">'1234567890123456'</span>;</span><br><span class="line">$key = md5(<span class="string">'1230456789'</span>, <span class="keyword">true</span>);</span><br><span class="line"> </span><br><span class="line">$encrypted = openssl_encrypt(ZeroPadding($data, <span class="number">16</span>), <span class="string">'AES-128-ECB'</span>, $key, OPENSSL_RAW_DATA | OPENSSL_ZERO_PADDING);</span><br><span class="line">$edata = base64_encode($encrypted);</span><br><span class="line"><span class="keyword">return</span> $edata;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用OpenSSL解密</span></span><br><span class="line">$key = md5(<span class="string">'1230456789'</span>, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">$data = openssl_decrypt(base64_decode($edata), <span class="string">'AES-128-ECB'</span>, $key, OPENSSL_RAW_DATA | OPENSSL_ZERO_PADDING);</span><br><span class="line">$data = ZeroUnPadding($data);</span><br><span class="line"><span class="keyword">return</span> $data;</span><br></pre></td></tr></table></figure><h2 id="算法MCRYPT-DES-MCRYPT-MODE-CBC-对应-DES-CBC"><a href="#算法MCRYPT-DES-MCRYPT-MODE-CBC-对应-DES-CBC" class="headerlink" title="算法MCRYPT_DES | MCRYPT_MODE_CBC 对应 DES-CBC"></a>算法MCRYPT_DES | MCRYPT_MODE_CBC 对应 DES-CBC</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用mcrypt加密</span></span><br><span class="line">$data = <span class="string">'1234567890123456'</span>;</span><br><span class="line">$key = md5(<span class="string">'1230456789'</span>, <span class="keyword">true</span>);</span><br><span class="line">$encrypted = mcrypt_encrypt(MCRYPT_DES, $key, $data, MCRYPT_MODE_CBC, $iv);</span><br><span class="line">$edata = base64_encode($encrypted);</span><br><span class="line"><span class="keyword">return</span> $edata;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用OpenSSL加密：</span></span><br><span class="line">$data = <span class="string">'1234567890123456'</span>;</span><br><span class="line">$key = <span class="string">'abcd1234'</span>;</span><br><span class="line">$iv = <span class="string">'mds2345&amp;'</span>;</span><br><span class="line"> </span><br><span class="line">$encrypted = openssl_encrypt(ZeroPadding($data, <span class="number">8</span>), <span class="string">'DES-CBC'</span>, $key, OPENSSL_RAW_DATA | OPENSSL_ZERO_PADDING, $iv);</span><br><span class="line">$edata = base64_encode($encrypted);</span><br><span class="line"><span class="keyword">return</span> $edata;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用OpenSSL解密：</span></span><br><span class="line">$key = <span class="string">'abcd1234'</span>;</span><br><span class="line">$iv = <span class="string">'mds2345&amp;'</span>;</span><br><span class="line"> </span><br><span class="line">$data = openssl_decrypt(base64_decode($edata), <span class="string">'DES-CBC'</span>, $key, OPENSSL_RAW_DATA | OPENSSL_ZERO_PADDING, $iv);</span><br><span class="line">$data = ZeroUnPadding($data);</span><br><span class="line"><span class="keyword">return</span> $data;</span><br></pre></td></tr></table></figure><h2 id="算法MCRYPT-RIJNDAEL-128-MCRYPT-MODE-CBC-对应-AES-128-CBC"><a href="#算法MCRYPT-RIJNDAEL-128-MCRYPT-MODE-CBC-对应-AES-128-CBC" class="headerlink" title="算法MCRYPT_RIJNDAEL_128 | MCRYPT_MODE_CBC 对应 AES-128-CBC"></a>算法MCRYPT_RIJNDAEL_128 | MCRYPT_MODE_CBC 对应 AES-128-CBC</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用mcrypt加密：</span></span><br><span class="line">$data = <span class="string">'1234567890123456'</span>;</span><br><span class="line">$key = md5(<span class="string">'1230456789'</span>, <span class="keyword">true</span>);</span><br><span class="line">$size = mcrypt_get_iv_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC);</span><br><span class="line">$iv = mcrypt_create_iv($size, MCRYPT_DEV_RANDOM);   <span class="comment">//生成随机向量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对内容进行PKCS7填充</span></span><br><span class="line">$block_size = mcrypt_get_block_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC);</span><br><span class="line">$padding_char = $block_size - (count($str) % $block_size);</span><br><span class="line">$padding_str = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>($padding_char&lt;=$block_size) &#123;</span><br><span class="line">    $padding_str = str_repeat(chr($padding_char),$padding_char);</span><br><span class="line">&#125;</span><br><span class="line">$str = $str.$padding_str;</span><br><span class="line"> </span><br><span class="line">$encrypted = mcrypt_encrypt(MCRYPT_RIJNDAEL_128, $key, $str, MCRYPT_MODE_CBC, $iv);</span><br><span class="line">$edata = base64_encode($encrypted);</span><br><span class="line"><span class="keyword">return</span> $edata;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用OpenSSL加密：</span></span><br><span class="line">$data = <span class="string">'1234567890123456'</span>;</span><br><span class="line">$key = md5(<span class="string">'1230456789'</span>, <span class="keyword">true</span>);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">$ivlen = openssl_cipher_iv_length(<span class="string">'AES-128-CBC'</span>);</span><br><span class="line">$iv = openssl_random_pseudo_bytes($ivlen);</span><br><span class="line">$str = PKCS7Padding($data, <span class="number">16</span>);</span><br><span class="line"> </span><br><span class="line">$encrypted = openssl_encrypt($str, <span class="string">'AES-128-CBC'</span>, $key, OPENSSL_RAW_DATA | OPENSSL_ZERO_PADDING, $iv);</span><br><span class="line">$edata = base64_encode($encrypted);</span><br><span class="line"><span class="keyword">return</span> $edata;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用OpenSSL解密：</span></span><br><span class="line">$key = md5(<span class="string">'1230456789'</span>, <span class="keyword">true</span>);</span><br><span class="line"><span class="comment">//$iv用加密时生成的同一个iv</span></span><br><span class="line">$data = openssl_decrypt(base64_decode($edata), <span class="string">'AES-128-CBC'</span>, $key, OPENSSL_RAW_DATA | OPENSSL_ZERO_PADDING, $iv);</span><br><span class="line">$data = PKCS7UnPadding($data);</span><br><span class="line"><span class="keyword">return</span> $data;</span><br></pre></td></tr></table></figure><h2 id="算法MCRYPT-XTEA-MCRYPT-MODE-CBC-需要使用第三方类的修改版本"><a href="#算法MCRYPT-XTEA-MCRYPT-MODE-CBC-需要使用第三方类的修改版本" class="headerlink" title="算法MCRYPT_XTEA | MCRYPT_MODE_CBC 需要使用第三方类的修改版本"></a>算法MCRYPT_XTEA | MCRYPT_MODE_CBC 需要使用第三方类的修改版本</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// Origin: https://github.com/jungepiraten/nntpboard/blob/master/libs/xtea.class.php</span></span><br><span class="line"><span class="comment">// Modified By imsry.cn</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Xtea</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Private</span></span><br><span class="line">    <span class="keyword">var</span> $key;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// CBC or ECB Mode</span></span><br><span class="line">    <span class="comment">// normaly, CBC Mode would be the right choice</span></span><br><span class="line">    <span class="keyword">var</span> $cbc = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> $iv = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    function Xtea($key)</span></span><br><span class="line"><span class="comment">//    &#123;</span></span><br><span class="line"><span class="comment">//        $this-&gt;key_setup($key);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">iv_setup</span><span class="params">($iv)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;iv = <span class="keyword">$this</span>-&gt;_str2long($iv);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Verschluesseln</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">encrypt</span><span class="params">($text)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $n = strlen($text);</span><br><span class="line">        <span class="keyword">if</span> ($n % <span class="number">8</span> != <span class="number">0</span>) $lng = ($n + (<span class="number">8</span> - ($n % <span class="number">8</span>)));</span><br><span class="line">        <span class="keyword">else</span> $lng = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        $text = str_pad($text, $lng, <span class="string">"\0"</span>);</span><br><span class="line">        $text = <span class="keyword">$this</span>-&gt;_str2long($text);</span><br><span class="line">        $cipher = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Initialization vector: IV</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;cbc == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;iv === <span class="keyword">null</span>)&#123;</span><br><span class="line">                $cipher[<span class="number">0</span>][<span class="number">0</span>] = time();</span><br><span class="line">                $cipher[<span class="number">0</span>][<span class="number">1</span>] = (double)microtime() * <span class="number">1000000</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                $cipher[<span class="number">0</span>][<span class="number">0</span>] = <span class="keyword">$this</span>-&gt;iv[<span class="number">0</span>];</span><br><span class="line">                $cipher[<span class="number">0</span>][<span class="number">1</span>] = <span class="keyword">$this</span>-&gt;iv[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $a = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; count($text); $i += <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;cbc == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">//$text mit letztem Geheimtext XOR Verknuepfen</span></span><br><span class="line">                <span class="comment">//$text is XORed with the previous ciphertext</span></span><br><span class="line">                $text[$i] ^= $cipher[$a - <span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">                $text[$i + <span class="number">1</span>] ^= $cipher[$a - <span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $cipher[] = <span class="keyword">$this</span>-&gt;block_encrypt($text[$i], $text[$i + <span class="number">1</span>]);</span><br><span class="line">            $a++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $output = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> ($i = (<span class="keyword">$this</span>-&gt;iv === <span class="keyword">null</span>?<span class="number">0</span>:<span class="number">1</span>); $i &lt; count($cipher); $i++) &#123;</span><br><span class="line">            $output .= <span class="keyword">$this</span>-&gt;_long2str($cipher[$i][<span class="number">0</span>]);</span><br><span class="line">            $output .= <span class="keyword">$this</span>-&gt;_long2str($cipher[$i][<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> base64_encode($output);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//Entschluesseln</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">decrypt</span><span class="params">($text)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $plain = <span class="keyword">array</span>();</span><br><span class="line">        $cipher = <span class="keyword">$this</span>-&gt;_str2long(base64_decode($text));</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;iv !== <span class="keyword">null</span>) &#123;</span><br><span class="line">            $cipher = array_merge(<span class="keyword">$this</span>-&gt;iv,$cipher);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;cbc == <span class="number">1</span>)</span><br><span class="line">            $i = <span class="number">2</span>; <span class="comment">//Message start at second block</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            $i = <span class="number">0</span>; <span class="comment">//Message start at first block</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> ($i; $i &lt; count($cipher); $i += <span class="number">2</span>) &#123;</span><br><span class="line">            $return = <span class="keyword">$this</span>-&gt;block_decrypt($cipher[$i], $cipher[$i + <span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Xor Verknuepfung von $return und Geheimtext aus von den letzten beiden Bloecken</span></span><br><span class="line">            <span class="comment">//XORed $return with the previous ciphertext</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;cbc == <span class="number">1</span>)</span><br><span class="line">                $plain[] = <span class="keyword">array</span>($return[<span class="number">0</span>] ^ $cipher[$i - <span class="number">2</span>], $return[<span class="number">1</span>] ^ $cipher[$i - <span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">else</span>          <span class="comment">//EBC Mode</span></span><br><span class="line">                $plain[] = $return;</span><br><span class="line">        &#125;</span><br><span class="line">        $output = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; count($plain); $i++) &#123;</span><br><span class="line">            $output .= <span class="keyword">$this</span>-&gt;_long2str($plain[$i][<span class="number">0</span>]);</span><br><span class="line">            $output .= <span class="keyword">$this</span>-&gt;_long2str($plain[$i][<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Bereitet den Key zum ver/entschluesseln vor</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">key_setup</span><span class="params">($key)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_array($key))</span><br><span class="line">            <span class="keyword">$this</span>-&gt;key = $key;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">isset</span>($key) &amp;&amp; !<span class="keyword">empty</span>($key))</span><br><span class="line">            <span class="keyword">$this</span>-&gt;key = <span class="keyword">$this</span>-&gt;_str2long(str_pad($key, <span class="number">16</span>, $key));</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;key = <span class="keyword">array</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//Performs a benchmark</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">benchmark</span><span class="params">($length = <span class="number">1000</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//1000 Byte String</span></span><br><span class="line">        $string = str_pad(<span class="string">""</span>, $length, <span class="string">"text"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//Key-Setup</span></span><br><span class="line">        $start1 = time() + (double)microtime();</span><br><span class="line">        $xtea = <span class="keyword">new</span> Xtea();</span><br><span class="line">        $xtea-&gt;key_setup(<span class="string">'key'</span>);</span><br><span class="line">        $end1 = time() + (double)microtime();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Encryption</span></span><br><span class="line">        $start2 = time() + (double)microtime();</span><br><span class="line">        $xtea-&gt;Encrypt($string);</span><br><span class="line">        $end2 = time() + (double)microtime();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Encrypting "</span> . $length . <span class="string">" bytes: "</span> . round($end2 - $start2, <span class="number">2</span>) . <span class="string">" seconds ("</span> . round($length / ($end2 - $start2), <span class="number">2</span>) . <span class="string">" bytes/second)&lt;br&gt;"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//verify the correct implementation of the blowfish algorithm</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">check_implementation</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        $xtea = <span class="keyword">new</span> Xtea();</span><br><span class="line">        $xtea-&gt;key_setup(<span class="string">'key'</span>);</span><br><span class="line">        $vectors = <span class="keyword">array</span>(</span><br><span class="line">            <span class="keyword">array</span>(<span class="keyword">array</span>(<span class="number">0x00000000</span>, <span class="number">0x00000000</span>, <span class="number">0x00000000</span>, <span class="number">0x00000000</span>), <span class="keyword">array</span>(<span class="number">0x41414141</span>, <span class="number">0x41414141</span>), <span class="keyword">array</span>(<span class="number">0xed23375a</span>, <span class="number">0x821a8c2d</span>)),</span><br><span class="line">            <span class="keyword">array</span>(<span class="keyword">array</span>(<span class="number">0x00010203</span>, <span class="number">0x04050607</span>, <span class="number">0x08090a0b</span>, <span class="number">0x0c0d0e0f</span>), <span class="keyword">array</span>(<span class="number">0x41424344</span>, <span class="number">0x45464748</span>), <span class="keyword">array</span>(<span class="number">0x497df3d0</span>, <span class="number">0x72612cb5</span>)),</span><br><span class="line"></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Correct implementation?</span></span><br><span class="line">        <span class="comment">//Test vectors, see http://www.schneier.com/code/vectors.txt</span></span><br><span class="line">        <span class="keyword">foreach</span> ($vectors <span class="keyword">AS</span> $vector) &#123;</span><br><span class="line">            $key = $vector[<span class="number">0</span>];</span><br><span class="line">            $plain = $vector[<span class="number">1</span>];</span><br><span class="line">            $cipher = $vector[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">            $xtea-&gt;key_setup($key);</span><br><span class="line">            $return = $xtea-&gt;block_encrypt($vector[<span class="number">1</span>][<span class="number">0</span>], $vector[<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ((int)$return[<span class="number">0</span>] != (int)$cipher[<span class="number">0</span>] || (int)$return[<span class="number">1</span>] != (int)$cipher[<span class="number">1</span>])</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/***********************************</span></span><br><span class="line"><span class="comment">     * Some internal functions</span></span><br><span class="line"><span class="comment">     ***********************************/</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">block_encrypt</span><span class="params">($y, $z)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $sum = <span class="number">0</span>;</span><br><span class="line">        $delta = <span class="number">0x9e3779b9</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/* start cycle */</span></span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">32</span>; $i++) &#123;</span><br><span class="line">            $y = <span class="keyword">$this</span>-&gt;_add($y,</span><br><span class="line">                <span class="keyword">$this</span>-&gt;_add($z &lt;&lt; <span class="number">4</span> ^ <span class="keyword">$this</span>-&gt;_rshift($z, <span class="number">5</span>), $z) ^</span><br><span class="line">                <span class="keyword">$this</span>-&gt;_add($sum, <span class="keyword">$this</span>-&gt;key[$sum &amp; <span class="number">3</span>]));</span><br><span class="line"></span><br><span class="line">            $sum = <span class="keyword">$this</span>-&gt;_add($sum, $delta);</span><br><span class="line"></span><br><span class="line">            $z = <span class="keyword">$this</span>-&gt;_add($z,</span><br><span class="line">                <span class="keyword">$this</span>-&gt;_add($y &lt;&lt; <span class="number">4</span> ^ <span class="keyword">$this</span>-&gt;_rshift($y, <span class="number">5</span>), $y) ^</span><br><span class="line">                <span class="keyword">$this</span>-&gt;_add($sum, <span class="keyword">$this</span>-&gt;key[<span class="keyword">$this</span>-&gt;_rshift($sum, <span class="number">11</span>) &amp; <span class="number">3</span>]));</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* end cycle */</span></span><br><span class="line">        $v[<span class="number">0</span>] = $y;</span><br><span class="line">        $v[<span class="number">1</span>] = $z;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>($y, $z);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">block_decrypt</span><span class="params">($y, $z)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $delta = <span class="number">0x9e3779b9</span>;</span><br><span class="line">        $sum = <span class="number">0xC6EF3720</span>;</span><br><span class="line">        $n = <span class="number">32</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* start cycle */</span></span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">32</span>; $i++) &#123;</span><br><span class="line">            $z = <span class="keyword">$this</span>-&gt;_add($z,</span><br><span class="line">                -(<span class="keyword">$this</span>-&gt;_add($y &lt;&lt; <span class="number">4</span> ^ <span class="keyword">$this</span>-&gt;_rshift($y, <span class="number">5</span>), $y) ^</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;_add($sum, <span class="keyword">$this</span>-&gt;key[<span class="keyword">$this</span>-&gt;_rshift($sum, <span class="number">11</span>) &amp; <span class="number">3</span>])));</span><br><span class="line">            $sum = <span class="keyword">$this</span>-&gt;_add($sum, -$delta);</span><br><span class="line">            $y = <span class="keyword">$this</span>-&gt;_add($y,</span><br><span class="line">                -(<span class="keyword">$this</span>-&gt;_add($z &lt;&lt; <span class="number">4</span> ^ <span class="keyword">$this</span>-&gt;_rshift($z, <span class="number">5</span>), $z) ^</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;_add($sum, <span class="keyword">$this</span>-&gt;key[$sum &amp; <span class="number">3</span>])));</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* end cycle */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>($y, $z);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_rshift</span><span class="params">($integer, $n)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// convert to 32 bits</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0xffffffff</span> &lt; $integer || <span class="number">-0xffffffff</span> &gt; $integer) &#123;</span><br><span class="line">            $integer = fmod($integer, <span class="number">0xffffffff</span> + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// convert to unsigned integer</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0x7fffffff</span> &lt; $integer) &#123;</span><br><span class="line">            $integer -= <span class="number">0xffffffff</span> + <span class="number">1.0</span>;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="number">-0x80000000</span> &gt; $integer) &#123;</span><br><span class="line">            $integer += <span class="number">0xffffffff</span> + <span class="number">1.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// do right shift</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> &gt; $integer) &#123;</span><br><span class="line">            $integer &amp;= <span class="number">0x7fffffff</span>;                     <span class="comment">// remove sign bit before shift</span></span><br><span class="line">            $integer &gt;&gt;= $n;                            <span class="comment">// right shift</span></span><br><span class="line">            $integer |= <span class="number">1</span> &lt;&lt; (<span class="number">31</span> - $n);                 <span class="comment">// set shifted sign bit</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $integer &gt;&gt;= $n;                            <span class="comment">// use normal right shift</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $integer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_add</span><span class="params">($i1, $i2)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $result = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (func_get_args() <span class="keyword">as</span> $value) &#123;</span><br><span class="line">            <span class="comment">// remove sign if necessary</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0.0</span> &gt; $value) &#123;</span><br><span class="line">                $value -= <span class="number">1.0</span> + <span class="number">0xffffffff</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $result += $value;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// convert to 32 bits</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0xffffffff</span> &lt; $result || <span class="number">-0xffffffff</span> &gt; $result) &#123;</span><br><span class="line">            $result = fmod($result, <span class="number">0xffffffff</span> + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// convert to signed integer</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0x7fffffff</span> &lt; $result) &#123;</span><br><span class="line">            $result -= <span class="number">0xffffffff</span> + <span class="number">1.0</span>;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="number">-0x80000000</span> &gt; $result) &#123;</span><br><span class="line">            $result += <span class="number">0xffffffff</span> + <span class="number">1.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//Einen Text in Longzahlen umwandeln</span></span><br><span class="line">    <span class="comment">//Covert a string into longinteger</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_str2long</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $n = strlen($data);</span><br><span class="line">        $tmp = unpack(<span class="string">'N*'</span>, $data);</span><br><span class="line">        $data_long = <span class="keyword">array</span>();</span><br><span class="line">        $j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($tmp <span class="keyword">as</span> $value) $data_long[$j++] = $value;</span><br><span class="line">        <span class="keyword">return</span> $data_long;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Longzahlen in Text umwandeln</span></span><br><span class="line">    <span class="comment">//Convert a longinteger into a string</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_long2str</span><span class="params">($l)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pack(<span class="string">'N'</span>, $l);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用mcrypt加密：</span></span><br><span class="line">$data = <span class="string">'1234567890123456'</span>;</span><br><span class="line">$key = md5(<span class="string">'1230456789'</span>, <span class="keyword">true</span>);</span><br><span class="line">$iv = <span class="string">'\0\0\0\0'</span>;</span><br><span class="line"> </span><br><span class="line">$encrypted = mcrypt_encrypt(MCRYPT_XTEA, $key, $data, MCRYPT_MODE_CBC, $iv);</span><br><span class="line">$edata = base64_encode($encrypted);</span><br><span class="line"><span class="keyword">return</span> $edata;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用Xtea加密：</span></span><br><span class="line">$data = <span class="string">'1234567890123456'</span>;</span><br><span class="line">$key = md5(<span class="string">'1230456789'</span>, <span class="keyword">true</span>);</span><br><span class="line">$iv = <span class="string">'\0\0\0\0'</span>;</span><br><span class="line"> </span><br><span class="line">$x = <span class="keyword">new</span> Xtea();</span><br><span class="line">$x-&gt;key_setup($key);</span><br><span class="line">$x-&gt;iv_setup($iv);</span><br><span class="line">$edata = $x-&gt;encrypt($data);</span><br><span class="line"><span class="keyword">return</span> $edata;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用Xtea解密：</span></span><br><span class="line">$key = md5(<span class="string">'1230456789'</span>, <span class="keyword">true</span>);</span><br><span class="line">$iv = <span class="string">'\0\0\0\0'</span>;</span><br><span class="line"> </span><br><span class="line">$x = <span class="keyword">new</span> Xtea();</span><br><span class="line">$x-&gt;key_setup($key);</span><br><span class="line">$x-&gt;iv_setup($iv);</span><br><span class="line">$data = $x-&gt;decrypt($edata);</span><br><span class="line"><span class="keyword">return</span> $data;</span><br></pre></td></tr></table></figure><h2 id="算法名称、IV、BlockSize、key参照表"><a href="#算法名称、IV、BlockSize、key参照表" class="headerlink" title="算法名称、IV、BlockSize、key参照表"></a>算法名称、IV、BlockSize、key参照表</h2><p>摘抄自：<a href="https://github.com/mfpierre/go-mcrypt" target="_blank" rel="noopener">https://github.com/mfpierre/go-mcrypt</a></p><table><thead><tr><th>Cipher Name</th><th>Block Mode</th><th>Block Size</th><th>IV Size</th><th>Default Key Size</th><th>All Key Size(s)</th></tr></thead><tbody><tr><td>CAST-128</td><td>CBC</td><td>8</td><td>8</td><td>16</td><td>16</td></tr><tr><td>CAST-128</td><td>ECB</td><td>8</td><td>8</td><td>16</td><td>16</td></tr><tr><td>CAST-128</td><td>OFB</td><td>8</td><td>8</td><td>16</td><td>16</td></tr><tr><td>CAST-128</td><td>NOFB</td><td>8</td><td>8</td><td>16</td><td>16</td></tr><tr><td>CAST-128</td><td>CFB</td><td>8</td><td>8</td><td>16</td><td>16</td></tr><tr><td>CAST-128</td><td>NCFB</td><td>8</td><td>8</td><td>16</td><td>16</td></tr><tr><td>CAST-128</td><td>CTR</td><td>8</td><td>8</td><td>16</td><td>16</td></tr><tr><td>GOST</td><td>CBC</td><td>8</td><td>8</td><td>32</td><td>32</td></tr><tr><td>GOST</td><td>ECB</td><td>8</td><td>8</td><td>32</td><td>32</td></tr><tr><td>GOST</td><td>OFB</td><td>8</td><td>8</td><td>32</td><td>32</td></tr><tr><td>GOST</td><td>NOFB</td><td>8</td><td>8</td><td>32</td><td>32</td></tr><tr><td>GOST</td><td>CFB</td><td>8</td><td>8</td><td>32</td><td>32</td></tr><tr><td>GOST</td><td>NCFB</td><td>8</td><td>8</td><td>32</td><td>32</td></tr><tr><td>GOST</td><td>CTR</td><td>8</td><td>8</td><td>32</td><td>32</td></tr><tr><td>Rijndael-128</td><td>CBC</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-128</td><td>ECB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-128</td><td>OFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-128</td><td>NOFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-128</td><td>CFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-128</td><td>NCFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-128</td><td>CTR</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Twofish</td><td>CBC</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Twofish</td><td>ECB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Twofish</td><td>OFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Twofish</td><td>NOFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Twofish</td><td>CFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Twofish</td><td>NCFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Twofish</td><td>CTR</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>RC4</td><td>STREAM</td><td>1</td><td>0</td><td>256</td><td></td></tr><tr><td>CAST-256</td><td>CBC</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>CAST-256</td><td>ECB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>CAST-256</td><td>OFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>CAST-256</td><td>NOFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>CAST-256</td><td>CFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>CAST-256</td><td>NCFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>CAST-256</td><td>CTR</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>LOKI97</td><td>CBC</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>LOKI97</td><td>ECB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>LOKI97</td><td>OFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>LOKI97</td><td>NOFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>LOKI97</td><td>CFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>LOKI97</td><td>NCFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>LOKI97</td><td>CTR</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-192</td><td>CBC</td><td>24</td><td>24</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-192</td><td>ECB</td><td>24</td><td>24</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-192</td><td>OFB</td><td>24</td><td>24</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-192</td><td>NOFB</td><td>24</td><td>24</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-192</td><td>CFB</td><td>24</td><td>24</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-192</td><td>NCFB</td><td>24</td><td>24</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-192</td><td>CTR</td><td>24</td><td>24</td><td>32</td><td>16 24 32</td></tr><tr><td>Safer+</td><td>CBC</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Safer+</td><td>ECB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Safer+</td><td>OFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Safer+</td><td>NOFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Safer+</td><td>CFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Safer+</td><td>NCFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Safer+</td><td>CTR</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>WAKE</td><td>STREAM</td><td>1</td><td>0</td><td>32</td><td>32</td></tr><tr><td>Blowfish</td><td>CBC</td><td>8</td><td>8</td><td>56</td><td></td></tr><tr><td>Blowfish</td><td>ECB</td><td>8</td><td>8</td><td>56</td><td></td></tr><tr><td>Blowfish</td><td>OFB</td><td>8</td><td>8</td><td>56</td><td></td></tr><tr><td>Blowfish</td><td>NOFB</td><td>8</td><td>8</td><td>56</td><td></td></tr><tr><td>Blowfish</td><td>CFB</td><td>8</td><td>8</td><td>56</td><td></td></tr><tr><td>Blowfish</td><td>NCFB</td><td>8</td><td>8</td><td>56</td><td></td></tr><tr><td>Blowfish</td><td>CTR</td><td>8</td><td>8</td><td>56</td><td></td></tr><tr><td>DES</td><td>CBC</td><td>8</td><td>8</td><td>8</td><td>8</td></tr><tr><td>DES</td><td>ECB</td><td>8</td><td>8</td><td>8</td><td>8</td></tr><tr><td>DES</td><td>OFB</td><td>8</td><td>8</td><td>8</td><td>8</td></tr><tr><td>DES</td><td>NOFB</td><td>8</td><td>8</td><td>8</td><td>8</td></tr><tr><td>DES</td><td>CFB</td><td>8</td><td>8</td><td>8</td><td>8</td></tr><tr><td>DES</td><td>NCFB</td><td>8</td><td>8</td><td>8</td><td>8</td></tr><tr><td>DES</td><td>CTR</td><td>8</td><td>8</td><td>8</td><td>8</td></tr><tr><td>Rijndael-256</td><td>CBC</td><td>32</td><td>32</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-256</td><td>ECB</td><td>32</td><td>32</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-256</td><td>OFB</td><td>32</td><td>32</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-256</td><td>NOFB</td><td>32</td><td>32</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-256</td><td>CFB</td><td>32</td><td>32</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-256</td><td>NCFB</td><td>32</td><td>32</td><td>32</td><td>16 24 32</td></tr><tr><td>Rijndael-256</td><td>CTR</td><td>32</td><td>32</td><td>32</td><td>16 24 32</td></tr><tr><td>Serpent</td><td>CBC</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Serpent</td><td>ECB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Serpent</td><td>OFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Serpent</td><td>NOFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Serpent</td><td>CFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Serpent</td><td>NCFB</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>Serpent</td><td>CTR</td><td>16</td><td>16</td><td>32</td><td>16 24 32</td></tr><tr><td>xTEA</td><td>CBC</td><td>8</td><td>8</td><td>16</td><td>16</td></tr><tr><td>xTEA</td><td>ECB</td><td>8</td><td>8</td><td>16</td><td>16</td></tr><tr><td>xTEA</td><td>OFB</td><td>8</td><td>8</td><td>16</td><td>16</td></tr><tr><td>xTEA</td><td>NOFB</td><td>8</td><td>8</td><td>16</td><td>16</td></tr><tr><td>xTEA</td><td>CFB</td><td>8</td><td>8</td><td>16</td><td>16</td></tr><tr><td>xTEA</td><td>NCFB</td><td>8</td><td>8</td><td>16</td><td>16</td></tr><tr><td>xTEA</td><td>CTR</td><td>8</td><td>8</td><td>16</td><td>16</td></tr><tr><td>Blowfish</td><td>CBC</td><td>8</td><td>8</td><td>56</td><td></td></tr><tr><td>Blowfish</td><td>ECB</td><td>8</td><td>8</td><td>56</td><td></td></tr><tr><td>Blowfish</td><td>OFB</td><td>8</td><td>8</td><td>56</td><td></td></tr><tr><td>Blowfish</td><td>NOFB</td><td>8</td><td>8</td><td>56</td><td></td></tr><tr><td>Blowfish</td><td>CFB</td><td>8</td><td>8</td><td>56</td><td></td></tr><tr><td>Blowfish</td><td>NCFB</td><td>8</td><td>8</td><td>56</td><td></td></tr><tr><td>Blowfish</td><td>CTR</td><td>8</td><td>8</td><td>56</td><td></td></tr><tr><td>enigma</td><td>STREAM</td><td>1</td><td>0</td><td>13</td><td></td></tr><tr><td>RC2</td><td>CBC</td><td>8</td><td>8</td><td>128</td><td></td></tr><tr><td>RC2</td><td>ECB</td><td>8</td><td>8</td><td>128</td><td></td></tr><tr><td>RC2</td><td>OFB</td><td>8</td><td>8</td><td>128</td><td></td></tr><tr><td>RC2</td><td>NOFB</td><td>8</td><td>8</td><td>128</td><td></td></tr><tr><td>RC2</td><td>CFB</td><td>8</td><td>8</td><td>128</td><td></td></tr><tr><td>RC2</td><td>NCFB</td><td>8</td><td>8</td><td>128</td><td></td></tr><tr><td>RC2</td><td>CTR</td><td>8</td><td>8</td><td>128</td><td></td></tr><tr><td>3DES</td><td>CBC</td><td>8</td><td>8</td><td>24</td><td>24</td></tr><tr><td>3DES</td><td>ECB</td><td>8</td><td>8</td><td>24</td><td>24</td></tr><tr><td>3DES</td><td>OFB</td><td>8</td><td>8</td><td>24</td><td>24</td></tr><tr><td>3DES</td><td>NOFB</td><td>8</td><td>8</td><td>24</td><td>24</td></tr><tr><td>3DES</td><td>CFB</td><td>8</td><td>8</td><td>24</td><td>24</td></tr><tr><td>3DES</td><td>NCFB</td><td>8</td><td>8</td><td>24</td><td>24</td></tr><tr><td>3DES</td><td>CTR</td><td>8</td><td>8</td><td>24</td><td>24</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PHP版本从7.2开始不再支持mcrypt扩展，所以我们需要使用OpenSSl对其进行替换。本文仅列出部分算法的替换示例，所以不在本文出现的算法或模式需要自行尝试，顺水推舟。&lt;/p&gt;
&lt;p&gt;本文替换案例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;MCRYPT_RIJNDAEL_128 | MCRYPT_MODE_ECB =&amp;gt; AES-128-ECB&lt;/li&gt;
&lt;li&gt;MCRYPT_DES | MCRYPT_MODE_CBC =&amp;gt; DES-CBC&lt;/li&gt;
&lt;li&gt;MCRYPT_RIJNDAEL_128 | MCRYPT_MODE_CBC =&amp;gt; AES-128-CBC&lt;/li&gt;
&lt;li&gt;MCRYPT_XTEA | MCRYPT_MODE_CBC&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;在使用 MCRYPT_RIJNDAEL_128 的地方，如果秘钥长度分别为16、24、32，则加密算法用 AES-128-ECB、AES-192-ECB、AES-256-ECB，BlockSize为16、24、32。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先列出需要用到的数据填充方法：&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ZeroPadding&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($str, $block = &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $pad = $block - (strlen($str) % $block);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;($pad == $block) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; $str;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; $str.str_repeat(chr(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;),$pad);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ZeroUnPadding&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($str)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; rtrim($str, &lt;span class=&quot;string&quot;&gt;&quot;\0&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PKCS7Padding&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($str, $block_size)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $padding_char = $block_size - (strlen($str) % $block_size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $padding_str = str_repeat(chr($padding_char),$padding_char);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; $str.$padding_str;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PKCS7UnPadding&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($str)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $char=substr($str,&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $num=ord($char);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;($num&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; $num &amp;lt;= strlen($str)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $str = substr($str, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt; * $num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; $str;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.imsry.cn/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.imsry.cn/tags/PHP/"/>
    
      <category term="OpenSSL" scheme="http://www.imsry.cn/tags/OpenSSL/"/>
    
      <category term="mcrypt" scheme="http://www.imsry.cn/tags/mcrypt/"/>
    
      <category term="xtea" scheme="http://www.imsry.cn/tags/xtea/"/>
    
  </entry>
  
  <entry>
    <title>Go-Server/Client以及PHP-Client之间的GRPC初次尝试</title>
    <link href="http://www.imsry.cn/posts/b37f5033.html"/>
    <id>http://www.imsry.cn/posts/b37f5033.html</id>
    <published>2018-12-02T05:47:24.000Z</published>
    <updated>2020-05-28T10:25:24.681Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>写这篇笔记的目的</p></blockquote><p>为了应对后续开发生涯中可能遇到的种种情况以及分布式计算的趋势（讲白了就是后续对工作会很有帮助）。如若总是依赖http-api/restful编写并提供外部调用接口，当接口数量不断上升，文档内容不断增加，这给设计者和使用者都带来非常不好的体验，而RPC在这体就现出了非常大的优势。我将自己的理解和体会以及学习的过程记录在这里，以便今后遇到问题能够从这儿获得些许的线索以及提供一个参考给同道中人。</p><blockquote><p>前提</p></blockquote><p>不妨思考这样一个情形：作为接口设计者，我早已经定义好的接口的请求方式(RESTFul)和返回结构(json)，但是每个接口我还需要另外维护一个文档来说明各个接口的用法(请求参数)和解释返回的结果(字段描述)。而对于接口的调用者而言，不但要去文档中查找自己需要的接口并阅读说明，在实际调用中，还要以防接口提供者返回非既定结构的结果而导致的报错。</p><a id="more"></a><blockquote><p>介绍</p></blockquote><p>Remote Procedure Call（远程过程调用），简称RPC。它可以使得调用远程服务接口如同调用本地方法一样简单。虽然实质还是通过网络通信，但是相比http请求api的网络开销还是极小的，其原因简单来说，HTTP协议每次请求都需要建立TCP连接，就会涉及3次握手的网络开销问题以及冗余报文，而rpc直接使用TCP多路复用(gRPC基于HTTP/2)无需重复建立连接。就文档方面而言，编写一份开发文档足矣，因为接口的定义由接口定义语言（IDL）来完成，而阅读IDL便可理解所有接口，并且通过编译器可以将IDL编译成不同的语言实现源码（gRPC通过protoc编译器将protobuf编译）。其他优点例如：注册、监控、发布等的这里不做论述。</p><blockquote><p>Go-Server</p></blockquote><p>GRPC的官方资源：<a href="google.golang.org/grpc">go get google.golang.org/grpc</a></p><p>GRPC的镜像资源：<a href="https://github.com/grpc/grpc" target="_blank" rel="noopener">https://github.com/grpc/grpc</a></p><p>官方的相关示列可以在grpc/examples/中找到。</p><h4 id="定义服务"><a href="#定义服务" class="headerlink" title="定义服务"></a>定义服务</h4><p>使用<code>protocol buffers</code>去定义gRPC service和方法 request以及 response 的类型。</p><p>新增并编辑文件：something.proto</p><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">syntax = &quot;proto3&quot;;</span><br><span class="line"></span><br><span class="line">// 声明包/作用域</span><br><span class="line">package something;</span><br><span class="line"></span><br><span class="line">// 定义一个服务，名为Wiwider</span><br><span class="line">service Wiwider &#123;</span><br><span class="line">  rpc FindUser (UserRequest) returns (UserReply) &#123;&#125;// 声明一个方法</span><br><span class="line">  rpc FindUsers (UserRequest) returns (UsersReply) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 定义一个请求消息</span><br><span class="line">message UserRequest &#123;</span><br><span class="line">  string name = 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 定义一个响应消息</span><br><span class="line">message UserReply &#123;</span><br><span class="line">  int64 id = 1;</span><br><span class="line">  string name = 2;</span><br><span class="line">  int32 age = 3;</span><br><span class="line">  sexes sex = 4;</span><br><span class="line"></span><br><span class="line">  enum sexes &#123;</span><br><span class="line">    Male = 0;</span><br><span class="line">    Female = 1;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 定义一个包含消息的消息</span><br><span class="line">message UsersReply &#123;</span><br><span class="line">  repeated UserReply users = 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="生成代码"><a href="#生成代码" class="headerlink" title="生成代码"></a>生成代码</h4><blockquote><p>Go-代码</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protoc --go_out=plugins=grpc:. something.proto</span><br></pre></td></tr></table></figure><p>运行这个命令后，会在当前目录生成一个<code>something.pb.go</code>文件，内容包含：</p><ul><li>所有用于填充，序列化和获取我们请求和响应消息类型的 protocol buffer 代码</li><li>一个为客户端调用定义在Wiwider服务的方法的接口类型（或者 存根 ）</li><li>一个为服务器使用定义在Wiwider服务的方法去实现的接口类型（或者 存根 ）</li></ul><blockquote><p>PHP-代码</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protoc --proto_path=./ --php_out=./ --grpc_out=./ --plugin=protoc-gen-grpc=/Users/anthony/git/grpc/bins/opt/grpc_php_plugin ./something.proto</span><br></pre></td></tr></table></figure><p>其中<code>/Users/anthony/git/grpc/bins/opt/grpc_php_plugin</code>对应从git中获取的<code>&lt;grpc-git-path&gt;/bins/opt/grpc_php_plugin</code></p><p>运行这个命令后，会在当前目录生成如下：</p><ul><li>GPBMetadata/something.php</li><li>Something/UserReply/sexes.php</li><li>Something/UserReply.php</li><li>Something/UserReply_sexes.php</li><li>Something/UserRequest.php</li><li>Something/UsersReply.php</li><li>Something/WiwiderClient.php</li></ul><h4 id="创建服务器"><a href="#创建服务器" class="headerlink" title="创建服务器"></a>创建服务器</h4><p>首先我们需要实现服务定义的服务接口：</p><p><code>something/something.go</code>：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> something</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"Wiwide/cmi"</span></span><br><span class="line"><span class="string">"context"</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">type</span> UserServer <span class="keyword">struct</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *UserServer)</span> <span class="title">FindUser</span><span class="params">(ctx context.Context, in *UserRequest)</span> <span class="params">(*UserReply, error)</span></span> &#123;</span><br><span class="line">name := in.GetName()</span><br><span class="line">rs, err := cmi.Db(<span class="string">"local"</span>).Table(<span class="string">"users"</span>).Where(<span class="string">"name"</span>, name).First()<span class="comment">// 从数据库查询</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> || <span class="built_in">len</span>(rs) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;UserReply&#123;&#125;,err</span><br><span class="line">&#125;</span><br><span class="line">rId := rs[<span class="string">"id"</span>].(<span class="keyword">int64</span>)</span><br><span class="line">rName := rs[<span class="string">"name"</span>].(<span class="keyword">string</span>)</span><br><span class="line">rAge := <span class="keyword">int32</span>(rs[<span class="string">"age"</span>].(<span class="keyword">int64</span>))</span><br><span class="line">rSex := UserReplySexes(rs[<span class="string">"sex"</span>].(<span class="keyword">int64</span>))</span><br><span class="line">rep := &amp;UserReply&#123;Id:rId,Name:rName,Age:rAge,Sex:rSex&#125;</span><br><span class="line"><span class="keyword">return</span> rep, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *UserServer)</span> <span class="title">FindUsers</span><span class="params">(ctx context.Context, in *UserRequest)</span> <span class="params">(*UsersReply, error)</span></span> &#123;</span><br><span class="line">name := in.GetName()</span><br><span class="line">rs, err := cmi.Db(<span class="string">"local"</span>).Table(<span class="string">"users"</span>).Where(<span class="string">"name"</span>,<span class="string">"like"</span>,<span class="string">"%"</span>+name+<span class="string">"%"</span>).Get()<span class="comment">// 从数据库查询</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;UsersReply&#123;&#125;, err</span><br><span class="line">&#125;</span><br><span class="line">list := <span class="built_in">make</span>([]*UserReply, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> rs &#123;</span><br><span class="line">rId := v[<span class="string">"id"</span>].(<span class="keyword">int64</span>)</span><br><span class="line">rName := v[<span class="string">"name"</span>].(<span class="keyword">string</span>)</span><br><span class="line">rAge := <span class="keyword">int32</span>(v[<span class="string">"age"</span>].(<span class="keyword">int64</span>))</span><br><span class="line">rSex := UserReplySexes(v[<span class="string">"sex"</span>].(<span class="keyword">int64</span>))</span><br><span class="line">list = <span class="built_in">append</span>(list, &amp;UserReply&#123;Id:rId,Name:rName,Age:rAge,Sex:rSex&#125;)</span><br><span class="line">&#125;</span><br><span class="line">rep := &amp;UsersReply&#123;Users: list&#125;</span><br><span class="line"><span class="keyword">return</span> rep, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后运行一个gRPC服务器，注册我们的服务并监听来自客户端的请求：</p><p><code>server.go</code>：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"Wiwide/rpc/something"</span></span><br><span class="line"><span class="string">"context"</span></span><br><span class="line"><span class="string">"google.golang.org/grpc"</span></span><br><span class="line"><span class="string">"google.golang.org/grpc/reflection"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"net"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">port = <span class="string">":50051"</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">lis, err := net.Listen(<span class="string">"tcp"</span>, port)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"failed to listen: %v"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">s := grpc.NewServer()</span><br><span class="line">something.RegisterWiwiderServer(s, &amp;something.UserServer&#123;&#125;)</span><br><span class="line">reflection.Register(s)</span><br><span class="line"><span class="keyword">if</span> err := s.Serve(lis); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"failed to serve: %v"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h4><p>简单执行命令：<code>go run server.go</code>，然后等待客户端请求。</p><h4 id="创建客户端"><a href="#创建客户端" class="headerlink" title="创建客户端"></a>创建客户端</h4><blockquote><p>Go-Client</p></blockquote><p>创建文件<code>client.go</code>：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"Wiwide/rpc/something"</span></span><br><span class="line"><span class="string">"context"</span></span><br><span class="line"><span class="string">"google.golang.org/grpc"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span>(</span><br><span class="line">address = <span class="string">"localhost:50051"</span></span><br><span class="line">defaultName = <span class="string">"World"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">conn, err := grpc.Dial(address, grpc.WithInsecure())</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"did not connect: %v"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">name := defaultName</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(os.Args) &gt; <span class="number">1</span> &#123;</span><br><span class="line">name = os.Args[<span class="number">1</span>]</span><br><span class="line">&#125;</span><br><span class="line">ctx, cancel := context.WithTimeout(context.Background(), time.Second)</span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line">s := something.NewWiwiderClient(conn)</span><br><span class="line">u, err := s.FindUser(ctx, &amp;something.UserRequest&#123;Name:name&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"could not Find: %v"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">us, err := s.FindUsers(ctx, &amp;something.UserRequest&#123;Name:name&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"could not Find users: %v"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">log.Printf(<span class="string">"Find user: %v"</span>, u)</span><br><span class="line">log.Printf(<span class="string">"Find users: %v"</span>, us)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>PHP-Client</p></blockquote><p>PHP首先要安装grpc的php扩展，下载地址：<a href="http://pecl.php.net/package/gRPC" target="_blank" rel="noopener">http://pecl.php.net/package/gRPC</a></p><p>直接使用phpize安装:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tar -zxf grpc-1.17.0.tgz</span><br><span class="line"><span class="built_in">cd</span> grpc-1.17.0</span><br><span class="line">phpize</span><br><span class="line">./configure --with-php-config=/usr/<span class="built_in">local</span>/php/bin/php-config</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="comment"># 在php.ini中增加</span></span><br><span class="line">extension = grpc.so</span><br></pre></td></tr></table></figure><p>执行php -m | grep grpc 应该会输出”grpc”，就代表成功了。</p><p>创建客户端文件，这里需要用到composer获取两个包，其中composer.json内容为：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"grpc/grpc-demo"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">"gRPC example for PHP"</span>,</span><br><span class="line">  <span class="attr">"require"</span>: &#123;</span><br><span class="line">    <span class="attr">"grpc/grpc"</span>: <span class="string">"^v1.3.0"</span>,</span><br><span class="line">    <span class="attr">"google/protobuf"</span>: <span class="string">"^v3.3.0"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>something.php</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span> dirname(<span class="keyword">__FILE__</span>).<span class="string">'/vendor/autoload.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span> dirname(<span class="keyword">__FILE__</span>).<span class="string">'/Something/UserReply.php'</span>;</span><br><span class="line"><span class="keyword">include_once</span> dirname(<span class="keyword">__FILE__</span>).<span class="string">'/Something/UsersReply.php'</span>;</span><br><span class="line"><span class="keyword">include_once</span> dirname(<span class="keyword">__FILE__</span>).<span class="string">'/Something/UserRequest.php'</span>;</span><br><span class="line"><span class="keyword">include_once</span> dirname(<span class="keyword">__FILE__</span>).<span class="string">'/Something/WiwiderClient.php'</span>;</span><br><span class="line"><span class="keyword">include_once</span> dirname(<span class="keyword">__FILE__</span>).<span class="string">'/GPBMetadata/Something.php'</span>;</span><br><span class="line"></span><br><span class="line">$client = <span class="keyword">new</span> Something\WiwiderClient(<span class="string">'127.0.0.1:50051'</span>, [<span class="string">'credentials'</span> =&gt; Grpc\ChannelCredentials::createInsecure()]);</span><br><span class="line">$req = <span class="keyword">new</span> Something\UserRequest();</span><br><span class="line">$name = !<span class="keyword">empty</span>($argv[<span class="number">1</span>]) ? $argv[<span class="number">1</span>] : <span class="string">'world'</span>;</span><br><span class="line">$req-&gt;setName($name);</span><br><span class="line"><span class="keyword">list</span>($reply, $status) = $client-&gt;FindUser($req)-&gt;wait();</span><br><span class="line">var_dump($reply-&gt;getId(), $reply-&gt;getName(), $reply-&gt;getAge(), $reply-&gt;getSex(), $status);</span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>($reply, $status) = $client-&gt;FindUsers($req)-&gt;wait();</span><br><span class="line">$uers = $reply-&gt;getUsers();</span><br><span class="line">$users = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">foreach</span> ($uers <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">array_push($users, <span class="keyword">array</span>(<span class="string">'id'</span>=&gt;$value-&gt;getId(),<span class="string">'name'</span>=&gt;$value-&gt;getName(),<span class="string">'age'</span>=&gt;$value-&gt;getAge(),<span class="string">'sex'</span>=&gt;$value-&gt;getSex()));</span><br><span class="line">&#125;</span><br><span class="line">var_dump($users);</span><br></pre></td></tr></table></figure><h4 id="运行客户端"><a href="#运行客户端" class="headerlink" title="运行客户端"></a>运行客户端</h4><blockquote><p>Go-Client</p></blockquote><p>我们先编译一下：<code>go build client.go</code>，输出可执行文件<code>client</code>，然后直接运行：</p><ul><li><code>./client Anthony</code></li><li><code>./client ny</code></li></ul><p>分别输出如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2018/12/02 13:40:15 Find user: id:1 name:&quot;Anthony&quot; age:24 sex:Female </span><br><span class="line">2018/12/02 13:40:15 Find users: users:&lt;id:1 name:&quot;Anthony&quot; age:24 sex:Female &gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2018/12/02 13:40:25 Find user: </span><br><span class="line">2018/12/02 13:40:25 Find users: users:&lt;id:1 name:&quot;Anthony&quot; age:24 sex:Female &gt; users:&lt;id:4 name:&quot;funny&quot; age:15 sex:2 &gt;</span><br></pre></td></tr></table></figure><blockquote><p>PHP-Client</p></blockquote><p>直接执行PHP文件：<code>php something.php Anthony</code>和<code>php something.php ny</code>，结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">int(1)</span><br><span class="line">string(7) &quot;Anthony&quot;</span><br><span class="line">int(24)</span><br><span class="line">int(1)</span><br><span class="line">object(stdClass)#8 (3) &#123;</span><br><span class="line">  [&quot;metadata&quot;]=&gt;</span><br><span class="line">  array(0) &#123;</span><br><span class="line">  &#125;</span><br><span class="line">  [&quot;code&quot;]=&gt;</span><br><span class="line">  int(0)</span><br><span class="line">  [&quot;details&quot;]=&gt;</span><br><span class="line">  string(0) &quot;&quot;</span><br><span class="line">&#125;</span><br><span class="line">array(1) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  array(4) &#123;</span><br><span class="line">    [&quot;id&quot;]=&gt;</span><br><span class="line">    int(1)</span><br><span class="line">    [&quot;name&quot;]=&gt;</span><br><span class="line">    string(7) &quot;Anthony&quot;</span><br><span class="line">    [&quot;age&quot;]=&gt;</span><br><span class="line">    int(24)</span><br><span class="line">    [&quot;sex&quot;]=&gt;</span><br><span class="line">    int(1)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">int(0)</span><br><span class="line">string(0) &quot;&quot;</span><br><span class="line">int(0)</span><br><span class="line">int(0)</span><br><span class="line">object(stdClass)#8 (3) &#123;</span><br><span class="line">  [&quot;metadata&quot;]=&gt;</span><br><span class="line">  array(0) &#123;</span><br><span class="line">  &#125;</span><br><span class="line">  [&quot;code&quot;]=&gt;</span><br><span class="line">  int(0)</span><br><span class="line">  [&quot;details&quot;]=&gt;</span><br><span class="line">  string(0) &quot;&quot;</span><br><span class="line">&#125;</span><br><span class="line">array(2) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  array(4) &#123;</span><br><span class="line">    [&quot;id&quot;]=&gt;</span><br><span class="line">    int(1)</span><br><span class="line">    [&quot;name&quot;]=&gt;</span><br><span class="line">    string(7) &quot;Anthony&quot;</span><br><span class="line">    [&quot;age&quot;]=&gt;</span><br><span class="line">    int(24)</span><br><span class="line">    [&quot;sex&quot;]=&gt;</span><br><span class="line">    int(1)</span><br><span class="line">  &#125;</span><br><span class="line">  [1]=&gt;</span><br><span class="line">  array(4) &#123;</span><br><span class="line">    [&quot;id&quot;]=&gt;</span><br><span class="line">    int(4)</span><br><span class="line">    [&quot;name&quot;]=&gt;</span><br><span class="line">    string(5) &quot;funny&quot;</span><br><span class="line">    [&quot;age&quot;]=&gt;</span><br><span class="line">    int(15)</span><br><span class="line">    [&quot;sex&quot;]=&gt;</span><br><span class="line">    int(2)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>本次笔记接近结尾了，内容很简单，主要记录使用grpc的大体流程。为后续的测试做一点点的准备。</p><blockquote><p>参考资料</p></blockquote><ul><li><a href="http://doc.oschina.net/grpc" target="_blank" rel="noopener">gRPC官方文档中文版v1.0</a></li><li><a href="https://blog.csdn.net/xuduorui/article/details/77726393" target="_blank" rel="noopener">grpc简易教程 go server+php client</a></li><li><a href="https://blog.csdn.net/wangyunpeng0319/article/details/78651998" target="_blank" rel="noopener">PRC服务和HTTP服务对比</a></li><li><a href="https://grpc.io/" target="_blank" rel="noopener">grpc官方网站</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;写这篇笔记的目的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了应对后续开发生涯中可能遇到的种种情况以及分布式计算的趋势（讲白了就是后续对工作会很有帮助）。如若总是依赖http-api/restful编写并提供外部调用接口，当接口数量不断上升，文档内容不断增加，这给设计者和使用者都带来非常不好的体验，而RPC在这体就现出了非常大的优势。我将自己的理解和体会以及学习的过程记录在这里，以便今后遇到问题能够从这儿获得些许的线索以及提供一个参考给同道中人。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;前提&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不妨思考这样一个情形：作为接口设计者，我早已经定义好的接口的请求方式(RESTFul)和返回结构(json)，但是每个接口我还需要另外维护一个文档来说明各个接口的用法(请求参数)和解释返回的结果(字段描述)。而对于接口的调用者而言，不但要去文档中查找自己需要的接口并阅读说明，在实际调用中，还要以防接口提供者返回非既定结构的结果而导致的报错。&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://www.imsry.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="PHP" scheme="http://www.imsry.cn/tags/PHP/"/>
    
      <category term="Go" scheme="http://www.imsry.cn/tags/Go/"/>
    
      <category term="gRPC" scheme="http://www.imsry.cn/tags/gRPC/"/>
    
      <category term="RPC" scheme="http://www.imsry.cn/tags/RPC/"/>
    
  </entry>
  
  <entry>
    <title>Go语言包-path/filepath</title>
    <link href="http://www.imsry.cn/posts/6ac47315.html"/>
    <id>http://www.imsry.cn/posts/6ac47315.html</id>
    <published>2018-11-29T02:30:23.000Z</published>
    <updated>2020-05-29T04:02:41.608Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一天一个Golang包，慢慢学习之“path/filepath”</p></blockquote><p>上一篇学习了<a href="./66c90df8.html">path包</a>，了解了几个对路径处理的方法。今天继续完成它的子包“filepath”，包中的函数会根据不同平台做不同的处理，如路径分隔符、卷名等。</p><h4 id="阅读文档："><a href="#阅读文档：" class="headerlink" title="阅读文档："></a>阅读文档：</h4><p>官方pkg地址：<a href="https://golang.org/pkg/path/filepath" target="_blank" rel="noopener">https://golang.org/pkg/path/filepath</a></p><blockquote><p>包方法</p></blockquote><p><code>func Base(path string) string</code><br><code>func Clean(path string) string</code><br><code>func Dir(path string) string</code><br><code>func Ext(path string) string</code><br><code>func IsAbs(path string) bool</code><br><code>func Join(elem ...string) string</code><br><code>func Match(pattern, name string) (matched bool, err error)</code><br><code>func Split(path string) (dir, file string)</code><br>// 以上8种方法跟path包同名方法功能类似</p><a id="more"></a><hr><p><code>func Abs(path string) (string, error)</code><br>// 返回相对当前路径的path的绝对路径</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(filepath.Abs(<span class="string">""</span>))</span><br><span class="line">fmt.Println(filepath.Abs(<span class="string">"name.txt"</span>))</span><br><span class="line">fmt.Println(filepath.Abs(<span class="string">"/name.txt"</span>))</span><br><span class="line">fmt.Println(filepath.Abs(<span class="string">"../name.txt"</span>))</span><br><span class="line">fmt.Println(filepath.Abs(<span class="string">"~/../name.txt"</span>))</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">/Users/anthony/Workspaces/GoLand/src/application/learn/path/filepath &lt;nil&gt;</span></span><br><span class="line"><span class="comment">/Users/anthony/Workspaces/GoLand/src/application/learn/path/filepath/name.txt &lt;nil&gt;</span></span><br><span class="line"><span class="comment">/name.txt &lt;nil&gt;</span></span><br><span class="line"><span class="comment">/Users/anthony/Workspaces/GoLand/src/application/learn/path/name.txt &lt;nil&gt;</span></span><br><span class="line"><span class="comment">/Users/anthony/Workspaces/GoLand/src/application/learn/path/filepath/name.txt &lt;nil&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><hr><p><code>func EvalSymlinks(path string) (string, error)</code><br>// 返回Path的实际路径（如果path是个软链接的话）</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(filepath.EvalSymlinks(<span class="string">"/etc"</span>))<span class="comment">// /private/etc &lt;nil&gt;</span></span><br><span class="line">fmt.Println(filepath.EvalSymlinks(<span class="string">"/usr/local"</span>))<span class="comment">// /usr/local &lt;nil&gt;</span></span><br></pre></td></tr></table></figure><hr><p><code>func ToSlash(path string) string</code><br><code>func FromSlash(path string) string</code><br>// 以上两种方法作主要用于Windows平台。<br>// 将path中的平台相关的路径分隔符(或’/‘)转换为’/‘(或平台相关的路径分隔符)</p><hr><p><code>func Glob(pattern string) (matches []string, err error)</code><br>// 列出与指定模式pattern完全匹配的文件或目录，匹配原则同Match一样。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(filepath.Glob(<span class="string">"/usr/*"</span>))</span><br><span class="line"><span class="comment">// [/usr/bin /usr/include /usr/lib /usr/libexec /usr/local /usr/sbin /usr/share /usr/standalone] &lt;nil&gt;</span></span><br></pre></td></tr></table></figure><hr><p><code>func HasPrefix(p, prefix string) bool</code><br>// 该方法已弃用，不再被建议使用。</p><hr><p><code>func Rel(basepath, targpath string) (string, error)</code><br>// 返回targpath相对于basepath的路径。<br>// 要求二者必须同为“相对路径”或“绝对路径”</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(filepath.Rel(<span class="string">"/usr/local"</span>,<span class="string">"/usr/local/bin/go"</span>))<span class="comment">// bin/go &lt;nil&gt;</span></span><br><span class="line">fmt.Println(filepath.Rel(<span class="string">"/usr/local"</span>,<span class="string">"/usr/local/../local/bin/go"</span>))<span class="comment">// bin/go &lt;nil&gt;</span></span><br><span class="line">fmt.Println(filepath.Rel(<span class="string">"/usr/local"</span>,<span class="string">"/usr/bin/go"</span>))<span class="comment">// ../bin/go &lt;nil&gt;</span></span><br><span class="line">fmt.Println(filepath.Rel(<span class="string">"/usr/local"</span>,<span class="string">"/"</span>))<span class="comment">// ../.. &lt;nil&gt;</span></span><br></pre></td></tr></table></figure><hr><p><code>func SplitList(path string) []string</code><br>// 将路径序列path分割为多条独立路径。<br>// path类似Unix/Linux下的环境变量PATH。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fmt.Printf(<span class="string">"%q\n"</span>, filepath.SplitList(<span class="string">"/bin:/sbin:/usr/bin:/usr/sbin  : /usr/local/bin"</span>))</span><br><span class="line"><span class="comment">// ["/bin" "/sbin" "/usr/bin" "/usr/sbin  " " /usr/local/bin"]</span></span><br></pre></td></tr></table></figure><hr><p><code>func VolumeName(path string) string</code><br>// 返回路径字符中的卷名<br>// Windows 中的 <code>C:\Windows</code> 会返回”C:”<br>// Linux 中的 <code>//dev/host/dir</code> 会返回 <code>//dev/host</code></p><hr><p><code>func Walk(root string, walkFn WalkFunc) error</code><br>// 遍历指定目录root（包括子目录），对遍历到的项目用walkFn函数进行处理。<br>// walkFn返回nil，则walkFn继续遍历，如果返回SkipDir，则Walk函数跳过当前目录，继续遍历下一目录。<br>// 如果返回其他错误，则Walk函数终止。<br>// 在Walk遍历过程中，如遇到错误，则会将错误通过err传递给walkFn，同时跳过出错的项目，继续处理后续项目。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 打印目录及目录下所有文件及大小</span></span><br><span class="line">fn := <span class="function"><span class="keyword">func</span><span class="params">(path <span class="keyword">string</span>, info os.FileInfo, err error)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%q, %q, %d\n"</span>, path, info.Name(), info.Size())</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filepath.Walk(<span class="string">"/Users/anthony/Downloads/conf"</span>, fn)</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">"/Users/anthony/Downloads/conf", "conf", 224</span></span><br><span class="line"><span class="comment">"/Users/anthony/Downloads/conf/0x4f5da2.cn.key", "0x4f5da2.cn.key", 1700</span></span><br><span class="line"><span class="comment">"/Users/anthony/Downloads/conf/0x4f5da2.cn_bundle.crt", "0x4f5da2.cn_bundle.crt", 3323</span></span><br><span class="line"><span class="comment">"/Users/anthony/Downloads/conf/world.cert.key.pem", "world.cert.key.pem", 1675</span></span><br><span class="line"><span class="comment">"/Users/anthony/Downloads/conf/world.dev.bundle.crt", "world.dev.bundle.crt", 2802</span></span><br><span class="line"><span class="comment">"/Users/anthony/Downloads/conf/world.local.bundle.crt", "world.local.bundle.crt", 2863</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// WalkFunc 函数：</span></span><br><span class="line"><span class="comment">// 列出含有 *.txt 文件的目录（不是全部，因为会跳过一些子目录）</span></span><br><span class="line">findTxtDir := <span class="function"><span class="keyword">func</span><span class="params">(path <span class="keyword">string</span>, info os.FileInfo, err error)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">ok, err := filepath.Match(<span class="string">`*.txt`</span>, info.Name())</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line">fmt.Println(filepath.Dir(path), info.Name())</span><br><span class="line"><span class="comment">// 遇到 txt 文件则继续处理所在目录的下一个目录</span></span><br><span class="line"><span class="comment">// 注意会跳过子目录</span></span><br><span class="line"><span class="keyword">return</span> filepath.SkipDir</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 列出含有 *.txt 文件的目录（不是全部，因为会跳过一些子目录）</span></span><br><span class="line">err := filepath.Walk(<span class="string">`/usr`</span>, findTxtDir)</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">/usr/local/Cellar/chromaprint/1.4.3 NEWS.txt</span></span><br><span class="line"><span class="comment">/usr/local/Cellar/fontconfig/2.13.1/share/doc/fontconfig fontconfig-devel.txt</span></span><br><span class="line"><span class="comment">/usr/local/Cellar/frei0r/1.6.1 AUTHORS.txt</span></span><br><span class="line"><span class="comment">/usr/local/Cellar/game-music-emu/0.6.2 changes.txt</span></span><br><span class="line"><span class="comment">...</span></span><br><span class="line"><span class="comment">&lt;nil&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// WalkFunc 函数：</span></span><br><span class="line"><span class="comment">// 列出所有以 ab 开头的目录（全部，因为没有跳过任何项目）</span></span><br><span class="line">findabDir := <span class="function"><span class="keyword">func</span><span class="params">(path <span class="keyword">string</span>, info os.FileInfo, err error)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> info.IsDir() &#123;</span><br><span class="line">ok, err := filepath.Match(<span class="string">`[aA][bB]*`</span>, info.Name())</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line">fmt.Println(path)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 列出所有以 ab 开头的目录（全部，因为没有跳过任何项目）</span></span><br><span class="line">err = filepath.Walk(<span class="string">`/usr`</span>, findabDir)</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">/usr/local/Cellar/node/11.0.0/libexec/lib/node_modules/npm/node_modules/abbrev</span></span><br><span class="line"><span class="comment">/usr/local/Homebrew/Library/Taps/homebrew/homebrew-services/.git/objects/ab</span></span><br><span class="line"><span class="comment">/usr/local/lib/node_modules/gulp/node_modules/resolve/test/dotdot/abc</span></span><br><span class="line"><span class="comment">/usr/local/lib/node_modules/hexo-cli/node_modules/abbrev</span></span><br><span class="line"><span class="comment">...</span></span><br><span class="line"><span class="comment">&lt;nil&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一天一个Golang包，慢慢学习之“path/filepath”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上一篇学习了&lt;a href=&quot;./66c90df8.html&quot;&gt;path包&lt;/a&gt;，了解了几个对路径处理的方法。今天继续完成它的子包“filepath”，包中的函数会根据不同平台做不同的处理，如路径分隔符、卷名等。&lt;/p&gt;
&lt;h4 id=&quot;阅读文档：&quot;&gt;&lt;a href=&quot;#阅读文档：&quot; class=&quot;headerlink&quot; title=&quot;阅读文档：&quot;&gt;&lt;/a&gt;阅读文档：&lt;/h4&gt;&lt;p&gt;官方pkg地址：&lt;a href=&quot;https://golang.org/pkg/path/filepath&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://golang.org/pkg/path/filepath&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;包方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;func Base(path string) string&lt;/code&gt;&lt;br&gt;&lt;code&gt;func Clean(path string) string&lt;/code&gt;&lt;br&gt;&lt;code&gt;func Dir(path string) string&lt;/code&gt;&lt;br&gt;&lt;code&gt;func Ext(path string) string&lt;/code&gt;&lt;br&gt;&lt;code&gt;func IsAbs(path string) bool&lt;/code&gt;&lt;br&gt;&lt;code&gt;func Join(elem ...string) string&lt;/code&gt;&lt;br&gt;&lt;code&gt;func Match(pattern, name string) (matched bool, err error)&lt;/code&gt;&lt;br&gt;&lt;code&gt;func Split(path string) (dir, file string)&lt;/code&gt;&lt;br&gt;// 以上8种方法跟path包同名方法功能类似&lt;/p&gt;
    
    </summary>
    
      <category term="Learn-GO" scheme="http://www.imsry.cn/categories/Learn-GO/"/>
    
    
  </entry>
  
  <entry>
    <title>Go语言包-path</title>
    <link href="http://www.imsry.cn/posts/66c90df8.html"/>
    <id>http://www.imsry.cn/posts/66c90df8.html</id>
    <published>2018-11-28T09:08:15.000Z</published>
    <updated>2020-05-29T04:02:47.781Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一天一个Golang包，慢慢学习之“path”</p></blockquote><p>上一篇学习了<a href="./dab4275.html">bytes包</a>，内容还是有点多，花的时间也多了一点。所以今天补充点小内容-path包。当然，path还有子包：filepath，这个下次再继续。</p><h4 id="阅读文档："><a href="#阅读文档：" class="headerlink" title="阅读文档："></a>阅读文档：</h4><p>官方pkg地址：<a href="https://golang.org/pkg/path/" target="_blank" rel="noopener">https://golang.org/pkg/path/</a></p><blockquote><p>包方法</p></blockquote><p><code>func Base(path string) string</code><br>// 返回最后一个元素（目录或文件）的路径</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(path.Base(<span class="string">"/a/b/"</span>))<span class="comment">// b</span></span><br><span class="line">fmt.Println(path.Base(<span class="string">"/a/b"</span>))<span class="comment">// b</span></span><br><span class="line">fmt.Println(path.Base(<span class="string">"./a/b"</span>))<span class="comment">// b</span></span><br><span class="line">fmt.Println(path.Base(<span class="string">"../a/b"</span>))<span class="comment">// b</span></span><br><span class="line">fmt.Println(path.Base(<span class="string">"/"</span>))<span class="comment">// /</span></span><br><span class="line">fmt.Println(path.Base(<span class="string">"./"</span>))<span class="comment">// .</span></span><br><span class="line">fmt.Println(path.Base(<span class="string">"."</span>))<span class="comment">// .</span></span><br><span class="line">fmt.Println(path.Base(<span class="string">""</span>))<span class="comment">// .</span></span><br></pre></td></tr></table></figure><a id="more"></a><hr><p><code>func Clean(path string) string</code><br>// 返回最洁净的路径，在path比较复杂的情况下使用，可以简化path。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">paths := []<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">"a/c"</span>,</span><br><span class="line"><span class="string">"a//c"</span>,</span><br><span class="line"><span class="string">"a/c/."</span>,</span><br><span class="line"><span class="string">"a/c/b/.."</span>,</span><br><span class="line"><span class="string">"/../a/c"</span>,</span><br><span class="line"><span class="string">"/../a/b/../././/c"</span>,</span><br><span class="line"><span class="string">""</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, p := <span class="keyword">range</span> paths &#123;</span><br><span class="line">fmt.Printf(<span class="string">"Clean(%q) = %q\n"</span>, p, path.Clean(p))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Clean("a/c") = "a/c"</span></span><br><span class="line"><span class="comment">// Clean("a//c") = "a/c"</span></span><br><span class="line"><span class="comment">// Clean("a/c/.") = "a/c"</span></span><br><span class="line"><span class="comment">// Clean("a/c/b/..") = "a/c"</span></span><br><span class="line"><span class="comment">// Clean("/../a/c") = "/a/c"</span></span><br><span class="line"><span class="comment">// Clean("/../a/b/../././/c") = "/a/c"</span></span><br><span class="line"><span class="comment">// Clean("") = "."</span></span><br></pre></td></tr></table></figure><hr><p><code>func Dir(path string) string</code><br>// 返回元素（目录或文件）的目录路径</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(path.Dir(<span class="string">"/a/b/c"</span>))<span class="comment">// /a/b</span></span><br><span class="line">fmt.Println(path.Dir(<span class="string">"a/b/c"</span>))<span class="comment">// a/b</span></span><br><span class="line">fmt.Println(path.Dir(<span class="string">"/a/"</span>))<span class="comment">// /a</span></span><br><span class="line">fmt.Println(path.Dir(<span class="string">"a/"</span>))<span class="comment">// a</span></span><br><span class="line">fmt.Println(path.Dir(<span class="string">"/"</span>))<span class="comment">// /</span></span><br><span class="line">fmt.Println(path.Dir(<span class="string">""</span>))<span class="comment">// .</span></span><br></pre></td></tr></table></figure><hr><p><code>func Ext(path string) string</code><br>// 返回path下文件名的后缀</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(path.Ext(<span class="string">"/a/b/c/bar.css"</span>))<span class="comment">// .css</span></span><br><span class="line">fmt.Println(path.Ext(<span class="string">"/a/b/c/bar.tar.gz"</span>))<span class="comment">// .gz</span></span><br><span class="line">fmt.Println(path.Ext(<span class="string">"/"</span>))<span class="comment">//</span></span><br><span class="line">fmt.Println(path.Ext(<span class="string">""</span>))<span class="comment">//</span></span><br></pre></td></tr></table></figure><hr><p><code>func IsAbs(path string) bool</code><br>// 判断path是否是绝对路径</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(path.IsAbs(<span class="string">"/dev/null"</span>))<span class="comment">// true</span></span><br><span class="line">fmt.Println(path.IsAbs(<span class="string">"dev/null"</span>))<span class="comment">// false</span></span><br><span class="line">fmt.Println(path.IsAbs(<span class="string">"./dev/null"</span>))<span class="comment">// false</span></span><br></pre></td></tr></table></figure><hr><p><code>func Join(elem ...string) string</code><br>// 将多个路径元素连接成一个，空元素会被忽略。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(path.Join(<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>))<span class="comment">// a/b/c</span></span><br><span class="line">fmt.Println(path.Join(<span class="string">"a"</span>, <span class="string">"b/c"</span>))<span class="comment">// a/b/c</span></span><br><span class="line">fmt.Println(path.Join(<span class="string">"a/b"</span>, <span class="string">"c"</span>))<span class="comment">// a/b/c</span></span><br><span class="line">fmt.Println(path.Join(<span class="string">""</span>, <span class="string">""</span>))<span class="comment">//</span></span><br><span class="line">fmt.Println(path.Join(<span class="string">"a"</span>, <span class="string">""</span>))<span class="comment">// a</span></span><br><span class="line">fmt.Println(path.Join(<span class="string">""</span>, <span class="string">"a"</span>))<span class="comment">// a</span></span><br></pre></td></tr></table></figure><hr><p><code>func Match(pattern, name string) (matched bool, err error)</code><br>// 判断name是否符合pattern规则，并返回err</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pattern:</span></span><br><span class="line"><span class="comment">// &#123; term &#125;</span></span><br><span class="line"><span class="comment">// term:</span></span><br><span class="line"><span class="comment">//'*'         matches any sequence of non-/ characters</span></span><br><span class="line"><span class="comment">//'?'         matches any single non-/ character</span></span><br><span class="line"><span class="comment">//'[' [ '^' ] &#123; character-range &#125; ']'</span></span><br><span class="line"><span class="comment">//            character class (must be non-empty)</span></span><br><span class="line"><span class="comment">//c           matches character c (c != '*', '?', '\\', '[')</span></span><br><span class="line"><span class="comment">//'\\' c      matches character c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// character-range:</span></span><br><span class="line"><span class="comment">//c           matches character c (c != '\\', '-', ']')</span></span><br><span class="line"><span class="comment">//'\\' c      matches character c</span></span><br><span class="line"><span class="comment">//lo '-' hi   matches character c for lo &lt;= c &lt;= hi</span></span><br><span class="line"></span><br><span class="line">fmt.Println(path.Match(<span class="string">"abc"</span>, <span class="string">"abc"</span>))<span class="comment">// true &lt;nil&gt;</span></span><br><span class="line">fmt.Println(path.Match(<span class="string">"a*"</span>, <span class="string">"abc"</span>))<span class="comment">// true &lt;nil&gt;</span></span><br><span class="line">fmt.Println(path.Match(<span class="string">"a*d"</span>, <span class="string">"abcd"</span>))<span class="comment">// true &lt;nil&gt;</span></span><br><span class="line">fmt.Println(path.Match(<span class="string">"a*/b"</span>, <span class="string">"a/c/b"</span>))<span class="comment">// false &lt;nil&gt;</span></span><br><span class="line">fmt.Println(path.Match(<span class="string">"a/[a-f]/b"</span>, <span class="string">"a/c/b"</span>))<span class="comment">// true &lt;nil&gt;</span></span><br></pre></td></tr></table></figure><hr><p><code>func Split(path string) (dir, file string)</code><br>// 返回path的目录和文件名</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(path.Split(<span class="string">"static/myfile.css"</span>))<span class="comment">// static/ myfile.css</span></span><br><span class="line">fmt.Println(path.Split(<span class="string">"myfile.css"</span>))<span class="comment">//  myfile.css</span></span><br><span class="line">fmt.Println(path.Split(<span class="string">""</span>))<span class="comment">//</span></span><br></pre></td></tr></table></figure><hr><h4 id="子包：filepath"><a href="#子包：filepath" class="headerlink" title="子包：filepath"></a>子包：filepath</h4><p>下一篇来学习：<a href="./6ac47315.html">path/filepath</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一天一个Golang包，慢慢学习之“path”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上一篇学习了&lt;a href=&quot;./dab4275.html&quot;&gt;bytes包&lt;/a&gt;，内容还是有点多，花的时间也多了一点。所以今天补充点小内容-path包。当然，path还有子包：filepath，这个下次再继续。&lt;/p&gt;
&lt;h4 id=&quot;阅读文档：&quot;&gt;&lt;a href=&quot;#阅读文档：&quot; class=&quot;headerlink&quot; title=&quot;阅读文档：&quot;&gt;&lt;/a&gt;阅读文档：&lt;/h4&gt;&lt;p&gt;官方pkg地址：&lt;a href=&quot;https://golang.org/pkg/path/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://golang.org/pkg/path/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;包方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;func Base(path string) string&lt;/code&gt;&lt;br&gt;// 返回最后一个元素（目录或文件）的路径&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(path.Base(&lt;span class=&quot;string&quot;&gt;&quot;/a/b/&quot;&lt;/span&gt;))	&lt;span class=&quot;comment&quot;&gt;// b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(path.Base(&lt;span class=&quot;string&quot;&gt;&quot;/a/b&quot;&lt;/span&gt;))		&lt;span class=&quot;comment&quot;&gt;// b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(path.Base(&lt;span class=&quot;string&quot;&gt;&quot;./a/b&quot;&lt;/span&gt;))	&lt;span class=&quot;comment&quot;&gt;// b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(path.Base(&lt;span class=&quot;string&quot;&gt;&quot;../a/b&quot;&lt;/span&gt;))	&lt;span class=&quot;comment&quot;&gt;// b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(path.Base(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;))		&lt;span class=&quot;comment&quot;&gt;// /&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(path.Base(&lt;span class=&quot;string&quot;&gt;&quot;./&quot;&lt;/span&gt;))		&lt;span class=&quot;comment&quot;&gt;// .&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(path.Base(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;))		&lt;span class=&quot;comment&quot;&gt;// .&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(path.Base(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;))			&lt;span class=&quot;comment&quot;&gt;// .&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Learn-GO" scheme="http://www.imsry.cn/categories/Learn-GO/"/>
    
    
  </entry>
  
  <entry>
    <title>Go语言包-bytes</title>
    <link href="http://www.imsry.cn/posts/dab4275.html"/>
    <id>http://www.imsry.cn/posts/dab4275.html</id>
    <published>2018-11-27T06:45:01.000Z</published>
    <updated>2020-05-29T04:02:37.992Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一天一个Golang包，慢慢学习之“bytes”</p></blockquote><p>今天学习bytes包，其实之前就已经使用了bytes包的很多方法了，这次主要就是再次熟悉和认识这个包里面的方法。</p><h4 id="阅读文档："><a href="#阅读文档：" class="headerlink" title="阅读文档："></a>阅读文档：</h4><p>官方pkg地址：<a href="https://golang.org/pkg/bytes/" target="_blank" rel="noopener">https://golang.org/pkg/bytes/</a></p><blockquote><p>包方法</p></blockquote><p><code>func Compare(a, b []byte) int</code><br>// 比较a和b两个字节数组。<br>// if a==b return 0;<br>// if a &lt; b return -1;<br>// if a &gt; b return 1;</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a, b []<span class="keyword">byte</span></span><br><span class="line">a = []<span class="keyword">byte</span>&#123;<span class="number">65</span>,<span class="number">66</span>,<span class="number">67</span>&#125;</span><br><span class="line">b = []<span class="keyword">byte</span>&#123;<span class="number">65</span>,<span class="number">66</span>,<span class="number">67</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %d\n"</span>, a, b, bytes.Compare(a, b))</span><br><span class="line"></span><br><span class="line">a = []<span class="keyword">byte</span>&#123;<span class="number">65</span>,<span class="number">66</span>,<span class="number">67</span>&#125;</span><br><span class="line">b = []<span class="keyword">byte</span>&#123;<span class="number">65</span>,<span class="number">66</span>,<span class="number">68</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %d\n"</span>, a, b, bytes.Compare(a, b))</span><br><span class="line"></span><br><span class="line">a = []<span class="keyword">byte</span>&#123;<span class="number">65</span>,<span class="number">66</span>,<span class="number">67</span>&#125;</span><br><span class="line">b = []<span class="keyword">byte</span>&#123;<span class="number">65</span>,<span class="number">66</span>,<span class="number">66</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %d\n"</span>, a, b, bytes.Compare(a, b))</span><br><span class="line"></span><br><span class="line">a = []<span class="keyword">byte</span>&#123;<span class="number">65</span>,<span class="number">66</span>,<span class="number">67</span>&#125;</span><br><span class="line">b = []<span class="keyword">byte</span>&#123;<span class="number">65</span>,<span class="number">66</span>,<span class="number">67</span>,<span class="number">68</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %d\n"</span>, a, b, bytes.Compare(a, b))</span><br><span class="line"></span><br><span class="line">a = []<span class="keyword">byte</span>&#123;<span class="number">65</span>,<span class="number">66</span>,<span class="number">67</span>,<span class="number">68</span>&#125;</span><br><span class="line">b = []<span class="keyword">byte</span>&#123;<span class="number">65</span>,<span class="number">66</span>,<span class="number">67</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %d\n"</span>, a, b, bytes.Compare(a, b))</span><br><span class="line"><span class="comment">// ABC, ABC, 0</span></span><br><span class="line"><span class="comment">// ABC, ABD, -1</span></span><br><span class="line"><span class="comment">// ABC, ABB, 1</span></span><br><span class="line"><span class="comment">// ABC, ABCD, -1</span></span><br><span class="line"><span class="comment">// ABCD, ABC, 1</span></span><br></pre></td></tr></table></figure><a id="more"></a><hr><p><code>func Contains(b, subslice []byte) bool</code><br>// 检查subslice是不是包含在b中</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">a := []<span class="keyword">byte</span>&#123;<span class="number">65</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">68</span>, <span class="number">69</span>, <span class="number">70</span>&#125;</span><br><span class="line">b := []<span class="keyword">byte</span>&#123;<span class="number">65</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">68</span>, <span class="number">69</span>, <span class="number">70</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %v\n"</span>, a, b, bytes.Contains(a, b))</span><br><span class="line"></span><br><span class="line">b = []<span class="keyword">byte</span>&#123;<span class="number">65</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">68</span>, <span class="number">69</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %v\n"</span>, a, b, bytes.Contains(a, b))</span><br><span class="line"></span><br><span class="line">b = []<span class="keyword">byte</span>&#123;<span class="number">65</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">68</span>, <span class="number">69</span>, <span class="number">70</span>, <span class="number">71</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %v\n"</span>, a, b, bytes.Contains(a, b))</span><br><span class="line"></span><br><span class="line">b = []<span class="keyword">byte</span>&#123;<span class="number">66</span>, <span class="number">67</span>, <span class="number">68</span>, <span class="number">69</span>, <span class="number">70</span>, <span class="number">71</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %v\n"</span>, a, b, bytes.Contains(a, b))</span><br><span class="line"><span class="comment">// ABCDEF, ABCDEF, true</span></span><br><span class="line"><span class="comment">// ABCDEF, ABCDE, true</span></span><br><span class="line"><span class="comment">// ABCDEF, ABCDEFG, false</span></span><br><span class="line"><span class="comment">// ABCDEF, BCDEFG, false</span></span><br></pre></td></tr></table></figure><hr><p><code>func ContainsAny(b []byte, chars string) bool</code><br>// 检查b中是否包含chars中的任意字符</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a := []<span class="keyword">byte</span>&#123;<span class="number">65</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">68</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%v\n"</span>, bytes.ContainsAny(a, <span class="string">"abcd"</span>) <span class="comment">// false</span></span><br><span class="line">fmt.Printf(<span class="string">"%v\n"</span>, bytes.ContainsAny(a, <span class="string">"a"</span>))<span class="comment">// false</span></span><br><span class="line">fmt.Printf(<span class="string">"%v\n"</span>, bytes.ContainsAny(a, <span class="string">"aB"</span>))<span class="comment">// true</span></span><br><span class="line">fmt.Printf(<span class="string">"%v\n"</span>, bytes.ContainsAny(a, <span class="string">"aBcd"</span>))<span class="comment">// true</span></span><br><span class="line">fmt.Printf(<span class="string">"%v\n"</span>, bytes.ContainsAny(a, <span class="string">"abcd ABC"</span>)) <span class="comment">// true</span></span><br></pre></td></tr></table></figure><hr><p><code>func ContainsRune(b []byte, r rune) bool</code><br>// 判断b中是否包含r字符</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a := []<span class="keyword">byte</span>&#123;<span class="number">65</span>, <span class="number">66</span>, <span class="number">67</span> ,<span class="number">68</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%v\n"</span>, bytes.ContainsRune(a, <span class="string">'b'</span>))<span class="comment">// false</span></span><br><span class="line">fmt.Printf(<span class="string">"%v\n"</span>, bytes.ContainsRune(a, <span class="string">'B'</span>))<span class="comment">//true</span></span><br></pre></td></tr></table></figure><hr><p><code>func Count(s, sep []byte) int</code><br>// sep在s中的重复次数（sep不重叠），即s=ababab,sep=abab则返回1</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a := []<span class="keyword">byte</span>(<span class="string">"ababab"</span>)</span><br><span class="line">sep := []<span class="keyword">byte</span>(<span class="string">"ab"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%d\n"</span>, bytes.Count(a, sep))<span class="comment">// 3</span></span><br><span class="line">sep = []<span class="keyword">byte</span>(<span class="string">"abab"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%d\n"</span>, bytes.Count(a, sep))<span class="comment">// 1</span></span><br></pre></td></tr></table></figure><hr><p><code>func Equal(a, b []byte) bool</code><br>// 判断a和b是否相等，nil等同于[]byte()</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a := []<span class="keyword">byte</span>(<span class="string">"ABC"</span>)</span><br><span class="line">b := []<span class="keyword">byte</span>&#123;<span class="number">65</span>, <span class="number">66</span>, <span class="number">67</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %v\n"</span>, a, b, bytes.Equal(a, b))<span class="comment">// ABC, ABC, true</span></span><br><span class="line">b = []<span class="keyword">byte</span>&#123;<span class="number">65</span> ,<span class="number">66</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %v\n"</span>, a, b, bytes.Equal(a, b))<span class="comment">// ABC, AB, false</span></span><br></pre></td></tr></table></figure><hr><p><code>func EqualFold(s, t []byte) bool</code><br>// 判断s和t是否相似，忽略大小写和标题三种格式</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a := []<span class="keyword">byte</span>(<span class="string">"abc"</span>)</span><br><span class="line">b := []<span class="keyword">byte</span>(<span class="string">"ABC"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %v\n"</span>, a, b, bytes.EqualFold(a, b))<span class="comment">// abc, ABC, true</span></span><br><span class="line">b = []<span class="keyword">byte</span>(<span class="string">"ABCC"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %v\n"</span>, a, b, bytes.EqualFold(a, b))<span class="comment">// abc, ABCC, false</span></span><br></pre></td></tr></table></figure><hr><p><code>func Fields(s []byte) [][]byte</code><br>// 以连续空白为分隔符切割s成多个子串（不含分隔符）</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a := []<span class="keyword">byte</span>(<span class="string">"abc def  ABC  CBA"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %v\n"</span>, a, bytes.Fields(a))</span><br><span class="line"><span class="comment">// abc def  ABC  CBA, [[97 98 99] [100 101 102] [65 66 67] [67 66 65]]</span></span><br></pre></td></tr></table></figure><hr><p><code>func FieldsFunc(s []byte, f func(rune) bool) [][]byte</code><br>// 以符合f方法的字符为分隔符切割s成多个子串（不含分隔符）</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f := <span class="function"><span class="keyword">func</span><span class="params">(r <span class="keyword">rune</span>)</span> <span class="title">bool</span></span> &#123; <span class="keyword">return</span> r == <span class="string">'#'</span>&#125;</span><br><span class="line">a := []<span class="keyword">byte</span>(<span class="string">"This is # and @"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %q\n"</span>, a, bytes.FieldsFunc(a, f))<span class="comment">// This is # and @, ["This is " " and @"]</span></span><br></pre></td></tr></table></figure><hr><p><code>func HasPrefix(s, prefix []byte) bool</code><br>// 检测s字节切片是否以prefix开头</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s := []<span class="keyword">byte</span>(<span class="string">"Hello World!"</span>)</span><br><span class="line">prefix := []<span class="keyword">byte</span>(<span class="string">"hello"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %v\n"</span>, s, prefix, bytes.HasPrefix(s, prefix))<span class="comment">// Hello World!, hello, false</span></span><br><span class="line">prefix = []<span class="keyword">byte</span>(<span class="string">"Hello"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %v\n"</span>, s, prefix, bytes.HasPrefix(s, prefix))<span class="comment">// Hello World!, Hello, true</span></span><br><span class="line">prefix = []<span class="keyword">byte</span>(<span class="string">""</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %v\n"</span>, s, prefix, bytes.HasPrefix(s, prefix))<span class="comment">// Hello World!, , true</span></span><br></pre></td></tr></table></figure><hr><p><code>func HasSuffix(s, suffix []byte) bool</code><br>// 检测s字节切片是否以suffix结尾</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s := []<span class="keyword">byte</span>(<span class="string">"Hello World!"</span>)</span><br><span class="line">suffix := []<span class="keyword">byte</span>(<span class="string">"world!"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %v\n"</span>, s, suffix, bytes.HasSuffix(s, suffix))<span class="comment">// Hello World!, world!, false</span></span><br><span class="line">suffix = []<span class="keyword">byte</span>(<span class="string">"Hello World!"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %v\n"</span>, s, suffix, bytes.HasSuffix(s, suffix))<span class="comment">// Hello World!, World!, true</span></span><br><span class="line">suffix = []<span class="keyword">byte</span>(<span class="string">""</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %v\n"</span>, s, suffix, bytes.HasSuffix(s, suffix))<span class="comment">// Hello World!, , true</span></span><br></pre></td></tr></table></figure><hr><p><code>func Index(s, sep []byte) int</code><br>// 返回sep在s中的起始位置，如果sep不在s中则返回-1</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s := []<span class="keyword">byte</span>(<span class="string">"Hello World!"</span>)</span><br><span class="line">sep := []<span class="keyword">byte</span>(<span class="string">"Hello"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"'%s' of '%s' is %d\n"</span>, sep, s, bytes.Index(s, sep))<span class="comment">// 'Hello' of 'Hello World!' is 0</span></span><br><span class="line">sep = []<span class="keyword">byte</span>(<span class="string">"World"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"'%s' of '%s' is %d\n"</span>, sep, s, bytes.Index(s, sep))<span class="comment">// 'World' of 'Hello World!' is 6</span></span><br><span class="line">sep = []<span class="keyword">byte</span>(<span class="string">"Bob"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"'%s' of '%s' is %d\n"</span>, sep, s, bytes.Index(s, sep))<span class="comment">// 'Bob' of 'Hello World!' is -1</span></span><br><span class="line">sep = []<span class="keyword">byte</span>(<span class="string">""</span>)</span><br><span class="line">fmt.Printf(<span class="string">"'%s' of '%s' is %d\n"</span>, sep, s, bytes.Index(s, sep))<span class="comment">// '' of 'Hello World!' is 0</span></span><br></pre></td></tr></table></figure><hr><p><code>func IndexAny(s []byte, chars string) int</code><br>// 返回chars中任意字符在s中出现的第一个位置，chars为空或找不到则返回-1.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">s := []<span class="keyword">byte</span>(<span class="string">"Hello World!"</span>)</span><br><span class="line">chars := <span class="string">"abcdefg"</span></span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %d\n"</span>, s, chars, bytes.IndexAny(s, chars))<span class="comment">// Hello World!, abcdefg, 1</span></span><br><span class="line">chars = <span class="string">"aabbcc"</span></span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %d\n"</span>, s, chars, bytes.IndexAny(s, chars))<span class="comment">// Hello World!, aabbcc, -1</span></span><br><span class="line">chars = <span class="string">"abcd"</span></span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %d\n"</span>, s, chars, bytes.IndexAny(s, chars))<span class="comment">// Hello World!, abcd, 10</span></span><br><span class="line">chars = <span class="string">""</span></span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %d\n"</span>, s, chars, bytes.IndexAny(s, chars))<span class="comment">// Hello World!, , -1</span></span><br><span class="line">chars = <span class="string">" "</span></span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %d\n"</span>, s, chars, bytes.IndexAny(s, chars))<span class="comment">// Hello World!,  , 5</span></span><br></pre></td></tr></table></figure><hr><p><code>func IndexByte(b []byte, c byte) int</code><br>// 同Index，sep变为c字节</p><hr><p><code>func IndexFunc(s []byte, f func(r rune) bool) int</code><br>// 返回符合f方法的字符首次出现的位置，找不到则返回-1</p><hr><p><code>func IndexRune(s []byte, r rune) int</code><br>// 同Index，sep变为r字符</p><hr><p><code>func Join(s [][]byte, sep []byte) []byte</code><br>// 以sep为连接符将子串列表连接成一个字节串</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s := [][]<span class="keyword">byte</span>&#123;&#123;<span class="number">65</span>,<span class="number">66</span>&#125;,&#123;<span class="number">67</span>,<span class="number">68</span>&#125;&#125;</span><br><span class="line">sep := []<span class="keyword">byte</span>&#123;<span class="number">124</span>,<span class="number">124</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%q, %s, %s\n"</span>, s, sep, bytes.Join(s, sep))<span class="comment">// ["AB" "CD"], ||, AB||CD</span></span><br></pre></td></tr></table></figure><hr><p><code>func LastIndex(s, sep []byte) int</code><br>// 查找s中最后一次出现sep的位置，找不到返回-1<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s := []<span class="keyword">byte</span>(<span class="string">"abcddabcd"</span>)</span><br><span class="line">sep := []<span class="keyword">byte</span>(<span class="string">"abc"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %d\n"</span>, s, sep, bytes.LastIndex(s, sep))<span class="comment">// abcddabcd, abc, 5</span></span><br><span class="line">sep = []<span class="keyword">byte</span>(<span class="string">"bcd"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %d\n"</span>, s, sep, bytes.LastIndex(s, sep))<span class="comment">// abcddabcd, bcd, 6</span></span><br><span class="line">sep = []<span class="keyword">byte</span>(<span class="string">""</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %s, %d\n"</span>, s, sep, bytes.LastIndex(s, sep))<span class="comment">// abcddabcd, , 9</span></span><br></pre></td></tr></table></figure></p><hr><p><code>func LastIndexAny(s []byte, chars string) int</code><br>// 查找s中最后一次出现chars中任意字符的位置，找不到返回-1</p><hr><p><code>func LastIndexByte(s []byte, c byte) int</code><br>// 查找s中最后一次出现c字节的位置，找不到返回-1</p><hr><p><code>func LastIndexFunc(s []byte, f func(r rune) bool) int</code><br>// 查找s中符合f方法的字符位置，找不到返回-1</p><hr><p><code>func Map(mapping func(r rune) rune, s []byte) []byte</code><br>// 将s中的r替换成mapping(r)返回的字符，如果mapping返回负值，则丢弃</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">rot13 := <span class="function"><span class="keyword">func</span><span class="params">(r <span class="keyword">rune</span>)</span> <span class="title">rune</span></span> &#123;</span><br><span class="line"><span class="keyword">switch</span> &#123;</span><br><span class="line"><span class="keyword">case</span> r &gt;= <span class="string">'A'</span> &amp;&amp; r &lt;= <span class="string">'Z'</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">'A'</span> + (r-<span class="string">'A'</span>+<span class="number">13</span>)%<span class="number">26</span></span><br><span class="line"><span class="keyword">case</span> r &gt;= <span class="string">'a'</span> &amp;&amp; r &lt;= <span class="string">'z'</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">'a'</span> + (r-<span class="string">'a'</span>+<span class="number">13</span>)%<span class="number">26</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%s\n"</span>, bytes.Map(rot13, []<span class="keyword">byte</span>(<span class="string">"'Twas brillig and the slithy gopher..."</span>)))</span><br><span class="line"><span class="comment">// 'Gjnf oevyyvt naq gur fyvgul tbcure...</span></span><br></pre></td></tr></table></figure><hr><p><code>func Repeat(b []byte, count int) []byte</code><br>// 返回子串b重复count次后的串</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fmt.Printf(<span class="string">"%s\n"</span>, bytes.Repeat([]<span class="keyword">byte</span>(<span class="string">"Abc"</span>), <span class="number">3</span>))<span class="comment">// AbcAbcAbc</span></span><br></pre></td></tr></table></figure><hr><p><code>func Replace(s, old, new []byte, n int) []byte</code><br>// 将s中的前n个old替换成new，如果n&lt;0则替换全部</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s := []<span class="keyword">byte</span>(<span class="string">"Bob takes you to Bob's house."</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s\n"</span>, bytes.Replace(s, []<span class="keyword">byte</span>(<span class="string">"Bob"</span>), []<span class="keyword">byte</span>(<span class="string">"Lily"</span>), <span class="number">0</span>))<span class="comment">// Bob takes you to Bob's house.</span></span><br><span class="line">fmt.Printf(<span class="string">"%s\n"</span>, bytes.Replace(s, []<span class="keyword">byte</span>(<span class="string">"Bob"</span>), []<span class="keyword">byte</span>(<span class="string">"Lily"</span>), <span class="number">1</span>))<span class="comment">// Lily takes you to Bob's house.</span></span><br><span class="line">fmt.Printf(<span class="string">"%s\n"</span>, bytes.Replace(s, []<span class="keyword">byte</span>(<span class="string">"Bob"</span>), []<span class="keyword">byte</span>(<span class="string">"Lily"</span>), <span class="number">-1</span>))<span class="comment">// Lily takes you to Lily's house.</span></span><br></pre></td></tr></table></figure><hr><p><code>func Runes(s []byte) []rune</code><br>// 将s转换成[]rune型</p><hr><p><code>func Split(s, sep []byte) [][]byte</code><br>// 以sep作为分隔符将s拆分成多个子串。<br>// 如果sep为空，则将s拆分成Unicode字符列表</p><hr><p><code>func SplitN(s, sep []byte, n int) [][]byte</code><br>// 同Split，但可指定拆分次数n，超出n的部分不进行拆分</p><hr><p><code>func SplitAfter(s, sep []byte) [][]byte</code><br>// 同Split，但是每个子串都包含分隔符sep</p><hr><p><code>func SplitAfterN(s, sep []byte, n int) [][]byte</code><br>// 同SplitAfter，但可指定拆分次数n。</p><hr><p><code>func Title(s []byte) []byte</code><br>// 将s中所有单词的首字符修改为Title格式返回<br>// Bug: 不能很好的处理Unicode标点符号分隔的单词。</p><hr><p><code>func ToLower(s []byte) []byte</code><br>// 将s中的字符全部替换成小写并返回</p><hr><p><code>func ToUpper(s []byte) []byte</code><br>// 将s中的字符全部替换成大小并返回</p><hr><p><code>func ToTitle(s []byte) []byte</code><br>// 将s中的字符全部替换成标题并返回</p><hr><p><code>func ToLowerSpecial(c unicode.SpecialCase, s []byte) []byte</code><br>// 使用指定的映射表将 s 中的所有字符修改为小写格式返回。</p><hr><p><code>func ToUpperSpecial(c unicode.SpecialCase, s []byte) []byte</code><br>// 使用指定的映射表将 s 中的所有字符修改为大写格式返回。</p><hr><p><code>func ToTitleSpecial(c unicode.SpecialCase, s []byte) []byte</code><br>// 使用指定的映射表将 s 中的所有字符修改为标题格式返回。</p><hr><p><code>func Trim(s []byte, cutset string) []byte</code><br><code>func TrimLeft(s []byte, cutset string) []byte</code><br><code>func TrimRight(s []byte, cutset string) []byte</code><br>// 以上方法返回去掉s两边（左边、右边）包含在cutset中字符的切片</p><hr><p><code>func TrimFunc(s []byte, f func(r rune) bool) []byte</code><br><code>func TrimLeftFunc(s []byte, f func(r rune) bool) []byte</code><br><code>func TrimRightFunc(s []byte, f func(r rune) bool) []byte</code><br>// 以上方法返回去掉s两边（左边、右边）符合f方法字符的切片</p><hr><p><code>func TrimPrefix(s, prefix []byte) []byte</code><br>// 去掉s的前缀prefix</p><hr><p><code>func TrimSuffix(s, suffix []byte) []byte</code><br>// 去掉s的后缀suffix</p><hr><p><code>func TrimSpace(s []byte) []byte</code><br>// 去掉两边的空白</p><hr><p><code>func NewBuffer(buf []byte) *Buffer</code><br>// 将buf包装成bytes.Buffer对象</p><hr><p><code>func NewBufferString(s string) *Buffer</code><br>// 将s转换成[]byte后，包装成bytes.Buffer对象</p><hr><p><code>func NewReader(b []byte) *Reader</code><br>// 将b包装成bytes.Reader对象</p><hr><blockquote><p>Buffer结构体</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A Buffer is a variable-sized buffer of bytes with Read and Write methods.</span></span><br><span class="line"><span class="comment">// The zero value for Buffer is an empty buffer ready to use.</span></span><br><span class="line"><span class="keyword">type</span> Buffer <span class="keyword">struct</span> &#123;</span><br><span class="line">buf       []<span class="keyword">byte</span>   <span class="comment">// contents are the bytes buf[off : len(buf)]</span></span><br><span class="line">off       <span class="keyword">int</span>      <span class="comment">// read at &amp;buf[off], write at &amp;buf[len(buf)]</span></span><br><span class="line">bootstrap [<span class="number">64</span>]<span class="keyword">byte</span> <span class="comment">// memory to hold first slice; helps small buffers avoid allocation.</span></span><br><span class="line">lastRead  readOp   <span class="comment">// last read operation, so that Unread* can work correctly.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">FIXME:</span> it would be advisable to align Buffer to cachelines to avoid false</span></span><br><span class="line"><span class="comment">// sharing.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Buffer的方法：</p><p><code>func (b *Buffer) Bytes() []byte</code><br>// 引用未读取部分的数据切片（不移动读取位置）</p><hr><p><code>func (b *Buffer) Cap() int</code><br>// 返回缓冲区容量</p><hr><p><code>func (b *Buffer) Grow(n int)</code><br>// 自动增加缓存容量，以保证有n字节的剩余空间<br>// 如果n&lt;0或者无法增加容量则会报Panic</p><hr><p><code>func (b *Buffer) Len() int</code><br>// 返回未读缓冲区的字节长度，b.Len()==len(b.Bytes())</p><hr><p><code>func (b *Buffer) Next(n int) []byte</code><br>// 返回缓冲区中的下n个字节数据的切片，并推进读取位置（类似于返回的字节数据已经被读取）。<br>// 如果n大于缓冲区长度，则返回整个缓冲区数据。<br>// 返回的切片仅在下一次调用Read或Write方法前有效。</p><hr><p><code>func (b *Buffer) Read(p []byte) (n int, err error)</code><br>// 从缓冲区读取len(p)个字节或整个缓冲区到p中，返回读取的字节数n，如果没有数据可返回，则err=io.EOF。</p><hr><p><code>func (b *Buffer) ReadByte() (byte, error)</code><br>// 从缓冲区读取一个字节并返回，如果没有可返回的数据，err=io.EOF。</p><hr><p><code>func (b *Buffer) ReadBytes(delim byte) (line []byte, err error)</code><br>// 从缓存中读取数据直到遇到delim时停止并返回包含delim的切片。<br>// 如果期间遇到错误，则返回遇到错误之前读取的数据并返回err。</p><hr><p><code>func (b *Buffer) ReadFrom(r io.Reader) (n int64, err error)</code><br>// 从r中读取数据直到遇到EOF并且写入缓存区，必要时会增大缓存。<br>// 返回读取到的字节数量n，遇到除了EOF的其他错误也会返回结果。<br>// 如果缓存变的太大将会报一个ErrTooLarge的Panic错误。</p><hr><p><code>func (b *Buffer) ReadRune() (r rune, size int, err error)</code><br>// 从缓存中读取并返回下一个UTF8编码字符，没有合适的字节则返回io.EOF。</p><hr><p><code>func (b *Buffer) ReadString(delim byte) (line string, err error)</code><br>// 从缓存中读取直到第一次遇到delim字节，并作为string返回这个包含delim的数据。</p><hr><p><code>func (b *Buffer) Reset()</code><br>// 将b重置并清空数据，如同Truncate(0)。</p><hr><p><code>func (b *Buffer) String() string</code><br>// 将缓冲区所有未读数据作为string返回，如果b是nil，则返回”<nil>“。</nil></p><hr><p><code>func (b *Buffer) Truncate(n int)</code><br>// 从缓冲区中丢弃第n个未读数据之后数据，如果n<0或n>Cap则报Panic。</0或n></p><hr><p><code>func (b *Buffer) UnreadByte() error</code><br>// 撤销最近一次的读操作中的最后字节数据。<br>// 如果在这之前执行了write或者最后一次读取返回了错误或者最后读取了空字节，则该方法会返回一个错误。</p><hr><p><code>func (b *Buffer) UnreadRune() error</code><br>// 类似UnreadByte()，但是严格要求最后一次读取是Rune，否则报错。</p><hr><p><code>func (b *Buffer) Write(p []byte) (n int, err error)</code><br>// 将p中的数据写入缓存，并返回写入的字节数n和可能发生的错误。</p><hr><p><code>func (b *Buffer) WriteByte(c byte) error</code><br>// 往缓存中写入一个字节c并返回可能发生的错误(通常是nil)。<br>// 如果缓存扩容太大，则会报一个ErrTooLarge的Panic。</p><hr><p><code>func (b *Buffer) WriteRune(r rune) (n int, err error)</code><br>// 同WriteByte，返回写入长度和可能发生的错误(通常是nil)。</p><hr><p><code>func (b *Buffer) WriteString(s string) (n int, err error)</code><br>// 同WriteByte，将s的内容写入缓存，返回写入长度和可能发生的错误。</p><hr><p><code>func (b *Buffer) WriteTo(w io.Writer) (n int64, err error)</code><br>// 将缓存数据写入w直到写入完毕或发生错误。</p><hr><p>Buffer的示列：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> bytes</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"bytes"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Buffer</span><span class="params">()</span></span>&#123;</span><br><span class="line">bt := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">0</span>)</span><br><span class="line">buffer := bytes.NewBuffer(bt)</span><br><span class="line">buffer.Write([]<span class="keyword">byte</span>(<span class="string">"Hello"</span>))</span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// Hello, 5, 5</span></span><br><span class="line"></span><br><span class="line">buffer.WriteString(<span class="string">" World"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// Hello World, 16, 11</span></span><br><span class="line"></span><br><span class="line">buffer.WriteByte(<span class="string">'!'</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// Hello World!, 16, 12</span></span><br><span class="line"></span><br><span class="line">buffer.WriteRune(<span class="string">'$'</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// Hello World!$, 16, 13</span></span><br><span class="line"></span><br><span class="line">r, size, _ := buffer.ReadRune()</span><br><span class="line">fmt.Printf(<span class="string">"%q, %d\n"</span>, r, size)<span class="comment">// 'H', 1</span></span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// ello World!$, 16, 12</span></span><br><span class="line"></span><br><span class="line">buffer.UnreadRune()</span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// Hello World!$, 16, 13</span></span><br><span class="line"></span><br><span class="line">b , _ :=buffer.ReadByte()</span><br><span class="line">fmt.Printf(<span class="string">"%q\n"</span>, b)<span class="comment">// 'H'</span></span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// ello World!$, 16, 12</span></span><br><span class="line"></span><br><span class="line">buffer.UnreadByte()</span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// Hello World!$, 16, 13</span></span><br><span class="line"></span><br><span class="line">line, _ := buffer.ReadBytes(<span class="string">'l'</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%q\n"</span>, line)<span class="comment">// "Hel"</span></span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// lo World!$, 16, 10</span></span><br><span class="line"></span><br><span class="line">buffer.UnreadByte()</span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// llo World!$, 16, 11</span></span><br><span class="line"></span><br><span class="line">str, _ := buffer.ReadString(<span class="string">'o'</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%q\n"</span>, str)<span class="comment">// "llo"</span></span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">//  World!$, 16, 8</span></span><br><span class="line"></span><br><span class="line">buffer.UnreadByte()</span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// o World!$, 16, 9</span></span><br><span class="line"></span><br><span class="line">next := buffer.Next(<span class="number">2</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%q\n"</span>, next)<span class="comment">// "o "</span></span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// World!$, 16, 7</span></span><br><span class="line"></span><br><span class="line">btRead := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">2</span>)</span><br><span class="line">n, _ := buffer.Read(btRead)</span><br><span class="line">fmt.Printf(<span class="string">"%d\n"</span>, n)<span class="comment">// 2</span></span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// rld!$, 16, 5</span></span><br><span class="line"></span><br><span class="line">buffer.Grow(<span class="number">3</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// rld!$, 16, 5</span></span><br><span class="line">buffer.Grow(<span class="number">4</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// rld!$, 36, 5</span></span><br><span class="line"></span><br><span class="line">buffer.Truncate(<span class="number">4</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// rld!, 36, 4</span></span><br><span class="line"></span><br><span class="line">buffer.Reset()</span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// , 36, 0</span></span><br><span class="line"></span><br><span class="line">bt1 := []<span class="keyword">byte</span>(<span class="string">"I see you."</span>)</span><br><span class="line">bf1 := bytes.NewReader(bt1)</span><br><span class="line">n64, _ :=buffer.ReadFrom(bf1)</span><br><span class="line">fmt.Printf(<span class="string">"%d\n"</span>, n64)<span class="comment">// 10</span></span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// I see you., 584, 10</span></span><br><span class="line"></span><br><span class="line">bt2 := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">0</span>)</span><br><span class="line">bf2 := bytes.NewBuffer(bt2)</span><br><span class="line">n64, _ = buffer.WriteTo(bf2)</span><br><span class="line">fmt.Printf(<span class="string">"%d, %q, %q\n"</span>, n64, bf2, bt2)<span class="comment">// 10, "I see you.", ""</span></span><br><span class="line">fmt.Printf(<span class="string">"%s, %d, %d\n"</span>, buffer, buffer.Cap(), buffer.Len())<span class="comment">// , 584, 0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p>Reader结构体</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bytes.Reader 实现了如下接口：</span></span><br><span class="line"><span class="comment">// io.ReadSeeker</span></span><br><span class="line"><span class="comment">// io.ReaderAt</span></span><br><span class="line"><span class="comment">// io.WriterTo</span></span><br><span class="line"><span class="comment">// io.ByteScanner</span></span><br><span class="line"><span class="comment">// io.RuneScanner</span></span><br><span class="line"><span class="keyword">type</span> Reader <span class="keyword">struct</span> &#123;</span><br><span class="line">s        []<span class="keyword">byte</span></span><br><span class="line">i        <span class="keyword">int64</span> <span class="comment">// current reading index</span></span><br><span class="line">prevRune <span class="keyword">int</span>   <span class="comment">// index of previous rune; or &lt; 0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Reader的方法：</p><p><code>func (r *Reader) Len() int</code><br>// 返回未读部分的数据长度。</p><hr><p><code>func (r *Reader) Size() int64</code><br>// 返回底层数据的总长度。</p><hr><p><code>func (r *Reader) Reset(b []byte)</code><br>// 将底层数据切换为b，同时复位所有标记。</p><hr><p><code>func (r *Reader) Read(b []byte) (n int, err error)</code><br><code>func (r *Reader) ReadAt(b []byte, off int64) (n int, err error)</code><br><code>func (r *Reader) ReadByte() (byte, error)</code><br><code>func (r *Reader) ReadRune() (ch rune, size int, err error)</code><br><code>func (r *Reader) Seek(offset int64, whence int) (int64, error)</code><br><code>func (r *Reader) UnreadByte() error</code><br><code>func (r *Reader) UnreadRune() error</code><br><code>func (r *Reader) WriteTo(w io.Writer) (n int64, err error)</code></p><p>Reader的示列：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> bytes</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"bytes"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Reader</span><span class="params">()</span></span>&#123;</span><br><span class="line">b1 := []<span class="keyword">byte</span>(<span class="string">"你好，世界！"</span>)</span><br><span class="line">b2 := []<span class="keyword">byte</span>(<span class="string">"Hello World!"</span>)</span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">9</span>)</span><br><span class="line">rd := bytes.NewReader(b1)</span><br><span class="line">n, _ := rd.Read(buf)</span><br><span class="line">fmt.Printf(<span class="string">"%q, %d, %d, %d\n"</span>, buf, rd.Len(), rd.Size(), n)<span class="comment">// "你好，", 9, 18, 9</span></span><br><span class="line">n, _ = rd.Read(buf)</span><br><span class="line">fmt.Printf(<span class="string">"%q, %d, %d, %d\n"</span>, buf, rd.Len(), rd.Size(), n)<span class="comment">// "世界！", 0, 18, 9</span></span><br><span class="line"></span><br><span class="line">rd.Reset(b2)</span><br><span class="line">buf = <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">6</span>)</span><br><span class="line">n, _ = rd.Read(buf)</span><br><span class="line">fmt.Printf(<span class="string">"%q, %d, %d, %d\n"</span>, buf, rd.Len(), rd.Size(), n)<span class="comment">// "Hello ", 6, 12, 6</span></span><br><span class="line">n, _ = rd.Read(buf)</span><br><span class="line">fmt.Printf(<span class="string">"%q, %d, %d, %d\n"</span>, buf, rd.Len(), rd.Size(), n)<span class="comment">// "World!", 0, 12, 6</span></span><br><span class="line"></span><br><span class="line">rd.UnreadByte()</span><br><span class="line">n, _ = rd.Read(buf)</span><br><span class="line">fmt.Printf(<span class="string">"%q, %d, %d, %d\n"</span>, buf, rd.Len(), rd.Size(), n)<span class="comment">// "!orld!", 0, 12, 1</span></span><br><span class="line"><span class="comment">// UnreadByte使得最后一个字符'!'回到了rd中，在rd.Read写入buf时，则将'!'写入了buf[0]中。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一天一个Golang包，慢慢学习之“bytes”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今天学习bytes包，其实之前就已经使用了bytes包的很多方法了，这次主要就是再次熟悉和认识这个包里面的方法。&lt;/p&gt;
&lt;h4 id=&quot;阅读文档：&quot;&gt;&lt;a href=&quot;#阅读文档：&quot; class=&quot;headerlink&quot; title=&quot;阅读文档：&quot;&gt;&lt;/a&gt;阅读文档：&lt;/h4&gt;&lt;p&gt;官方pkg地址：&lt;a href=&quot;https://golang.org/pkg/bytes/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://golang.org/pkg/bytes/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;包方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;func Compare(a, b []byte) int&lt;/code&gt;&lt;br&gt;// 比较a和b两个字节数组。&lt;br&gt;// if a==b return 0;&lt;br&gt;// if a &amp;lt; b return -1;&lt;br&gt;// if a &amp;gt; b return 1;&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a, b []&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = []&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;&amp;#123;&lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;67&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = []&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;&amp;#123;&lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;67&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%s, %s, %d\n&quot;&lt;/span&gt;, a, b, bytes.Compare(a, b))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = []&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;&amp;#123;&lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;67&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = []&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;&amp;#123;&lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;68&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%s, %s, %d\n&quot;&lt;/span&gt;, a, b, bytes.Compare(a, b))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = []&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;&amp;#123;&lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;67&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = []&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;&amp;#123;&lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%s, %s, %d\n&quot;&lt;/span&gt;, a, b, bytes.Compare(a, b))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = []&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;&amp;#123;&lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;67&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = []&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;&amp;#123;&lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;67&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;68&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%s, %s, %d\n&quot;&lt;/span&gt;, a, b, bytes.Compare(a, b))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = []&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;&amp;#123;&lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;67&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;68&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = []&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;&amp;#123;&lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;67&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%s, %s, %d\n&quot;&lt;/span&gt;, a, b, bytes.Compare(a, b))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ABC, ABC, 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ABC, ABD, -1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ABC, ABB, 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ABC, ABCD, -1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ABCD, ABC, 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Learn-GO" scheme="http://www.imsry.cn/categories/Learn-GO/"/>
    
    
  </entry>
  
  <entry>
    <title>Go语言包-bufio</title>
    <link href="http://www.imsry.cn/posts/e06b9990.html"/>
    <id>http://www.imsry.cn/posts/e06b9990.html</id>
    <published>2018-11-26T06:41:54.000Z</published>
    <updated>2020-05-29T04:02:33.498Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一天一个Golang包，慢慢学习之“bufio”</p></blockquote><p>今天学习带缓存的I/O操作，基础包“bufio”中有bufio.go和scan.go两个文件</p><h4 id="阅读文档："><a href="#阅读文档：" class="headerlink" title="阅读文档："></a>阅读文档：</h4><p>官方pkg地址：<a href="https://golang.org/pkg/bufio/" target="_blank" rel="noopener">https://golang.org/pkg/bufio/</a></p><blockquote><p>包方法</p></blockquote><p><code>func NewReadWriter(r *Reader, w *Writer) *ReadWriter</code><br>// 将r和w封装为一个bufio.Readwriter对象</p><p><code>func NewReader(rd io.Reader) *Reader</code><br>// 将rd封装为一个bufio.Reader对象(缓存大小默认4096)</p><p><code>func NewReaderSize(rd io.Reader, size int) *Reader</code><br>// 将rd封装成一个拥有size大小缓存的bufio.Reader对象</p><p><code>func NewScanner(r io.Reader) *Scanner</code><br>// 创建一个Scanner来扫描r</p><p><code>func NewWriter(w io.Writer) *Writer</code><br>// 将w封装成一个bufio.Writer对象(缓存大小默认4096)</p><p><code>func NewWriterSize(w io.Writer, size int) *Writer</code><br>//将w封装成一个拥有size大小缓存的bufio.Writer对象</p><a id="more"></a><blockquote><p>Reader结构体</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Reader 实现了对io.Reader对象的缓冲功能</span></span><br><span class="line"><span class="keyword">type</span> Reader <span class="keyword">struct</span> &#123;</span><br><span class="line">buf          []<span class="keyword">byte</span></span><br><span class="line">rd           io.Reader <span class="comment">// reader provided by the client</span></span><br><span class="line">r, w         <span class="keyword">int</span>       <span class="comment">// buf read and write positions</span></span><br><span class="line">err          error</span><br><span class="line">lastByte     <span class="keyword">int</span></span><br><span class="line">lastRuneSize <span class="keyword">int</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>func (b *Reader) Buffered() int</code><br>// 返回缓存中的数据长度</p><p><code>func (b *Reader) Discard(n int) (discarded int, err error)</code><br>// 丢弃接下来的n个字节，返回丢弃的字节长度</p><p><code>func (b *Reader) Peek(n int) ([]byte, error)</code><br>// 返回前n字节的缓存切片</p><p><code>func (b *Reader) Read(p []byte) (n int, err error)</code><br>// 读取len(p)个字节到p中。<br>// 如果len(p)&gt;缓存大小，且缓存不为空，则读取全部缓存。<br>// 若缓存为空，则从底层io.Reader直接读取</p><p><code>func (b *Reader) ReadByte() (byte, error)</code><br>// 读出一个字节并返回</p><p><code>func (b *Reader) ReadBytes(delim byte) ([]byte, error)</code><br>// 查找delim并读取delim及其之前的所有数据（byte切片）<br>// 如果在找到delim之前发生错误，则返回发生错误之前的数据和error。<br>// 当找不到delim的时候，err!=nil</p><p><code>func (b *Reader) ReadLine() (line []byte, isPrefix bool, err error)</code><br>// 返回一个单行数据(切片)，不包括行尾标记。<br>// 如果在缓存中找不到行尾标记，isPrefix为true，表示查找未完成，否则isPrefix为false</p><p><code>func (b *Reader) ReadRune() (r rune, size int, err error)</code><br>// 读取一个UTF8字符和字符的编码长度。<br>// 如果UTF8序列无法解码出一个正确的Unicode字符，则只读出一个字节，并返回U+FFFD字符，size返回1。</p><p><code>func (b *Reader) ReadSlice(delim byte) (line []byte, err error)</code><br>// 查找delim并读取delim及其之前的所有数据（byte切片-引用）</p><p><code>func (b *Reader) ReadString(delim byte) (string, error)</code><br>// 查找delim并读取delim及其之前的所有数据（字符串）</p><p><code>func (b *Reader) Reset(r io.Reader)</code><br>// 丢弃任何缓存数据，重置所有状态并切换io.Reader到r</p><p><code>func (r *Reader) Size() int</code><br>// 返回（底层）缓存的字节长度</p><p><code>func (b *Reader) UnreadByte() error</code><br>// 撤销最后一次读出的一个字节</p><p><code>func (b *Reader) UnreadRune() error</code><br>// 撤销最后一次读出的Unicode字符<br>// 如果最后一次执行的不是ReadRune()，则返回一个错误</p><p><code>func (b *Reader) WriteTo(w io.Writer) (n int64, err error)</code><br>// 实现了io.WriteTo接口。<br>// 可以（可能）对底层Reader的Read方法进行多次调用。<br>// 如果底层Reader支持WriteTo方法，则直接调用底层方法，无需缓存。</p><p>Reader的示例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> bufio</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"bufio"</span></span><br><span class="line"><span class="string">"bytes"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Reader</span><span class="params">()</span></span>&#123;</span><br><span class="line">testB := bytes.NewReader([]<span class="keyword">byte</span>(<span class="string">"abcdefg\nABCDEFG\nh i j k\nH I J K\n\nline."</span>))</span><br><span class="line">bufRd := bufio.NewReader(testB)</span><br><span class="line">fmt.Println(bufRd.Buffered(), bufRd.Size())</span><br><span class="line"><span class="comment">// 0 4096</span></span><br><span class="line"></span><br><span class="line">b, _ := bufRd.ReadByte()</span><br><span class="line">fmt.Println(bufRd.Buffered(), b, <span class="keyword">string</span>(b))</span><br><span class="line"><span class="comment">// 37 97 a</span></span><br><span class="line"></span><br><span class="line">bs, _ := bufRd.ReadBytes(<span class="string">'d'</span>)</span><br><span class="line">fmt.Println(bufRd.Buffered(), bs, <span class="keyword">string</span>(bs))</span><br><span class="line"><span class="comment">// 34 [98 99 100] bcd</span></span><br><span class="line"></span><br><span class="line">discard, _ := bufRd.Discard(<span class="number">1</span>)</span><br><span class="line">fmt.Println(<span class="string">"discard:"</span>, discard, <span class="string">"bufferd:"</span>, bufRd.Buffered())</span><br><span class="line"><span class="comment">// discard: 1 bufferd: 33</span></span><br><span class="line"></span><br><span class="line">b, _ = bufRd.ReadByte()</span><br><span class="line">fmt.Println(bufRd.Buffered(), b, <span class="keyword">string</span>(b))</span><br><span class="line"><span class="comment">// 32 102 f</span></span><br><span class="line"></span><br><span class="line">bs, _  = bufRd.Peek(<span class="number">7</span>)</span><br><span class="line">fmt.Println(bufRd.Buffered(), bs, <span class="keyword">string</span>(bs))</span><br><span class="line"><span class="comment">// 32 [103 10 65 66 67 68 69] g</span></span><br><span class="line"><span class="comment">// ABCDE</span></span><br><span class="line"></span><br><span class="line">line, isPrefix, _ := bufRd.ReadLine()</span><br><span class="line">fmt.Println(bufRd.Buffered(), line, <span class="keyword">string</span>(line), isPrefix)</span><br><span class="line"><span class="comment">// 30 [103] g false</span></span><br><span class="line"></span><br><span class="line">r, size, _ := bufRd.ReadRune()</span><br><span class="line">fmt.Println(bufRd.Buffered(), r, <span class="keyword">string</span>(r), size)</span><br><span class="line"><span class="comment">// 29 65 A 1</span></span><br><span class="line"></span><br><span class="line">slice, _ := bufRd.ReadSlice(<span class="string">'D'</span>)</span><br><span class="line">fmt.Println(bufRd.Buffered(), slice, <span class="keyword">string</span>(slice))</span><br><span class="line"><span class="comment">// 26 [66 67 68] BCD</span></span><br><span class="line"></span><br><span class="line">str, _ := bufRd.ReadString(<span class="string">'G'</span>)</span><br><span class="line">fmt.Println(bufRd.Buffered(), str)</span><br><span class="line"><span class="comment">// 23 EFG</span></span><br><span class="line"></span><br><span class="line">bufRd.Reset(bytes.NewReader([]<span class="keyword">byte</span>(<span class="string">"Hello World.\nMy World."</span>)))</span><br><span class="line"></span><br><span class="line">str, _ = bufRd.ReadString(<span class="string">'r'</span>)</span><br><span class="line">fmt.Println(bufRd.Buffered(), str)</span><br><span class="line"><span class="comment">// 13 Hello Wor</span></span><br><span class="line"></span><br><span class="line">bufRd.UnreadByte()</span><br><span class="line">fmt.Println(bufRd.Buffered())</span><br><span class="line"><span class="comment">// 14</span></span><br><span class="line"></span><br><span class="line">str, _ = bufRd.ReadString(<span class="string">'\n'</span>)</span><br><span class="line">fmt.Println(bufRd.Buffered(), str)</span><br><span class="line"><span class="comment">// 9 rld.</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"></span><br><span class="line">r, size, _ = bufRd.ReadRune()</span><br><span class="line">fmt.Println(bufRd.Buffered(), r, <span class="keyword">string</span>(r), size)</span><br><span class="line"><span class="comment">// 8 77 M 1</span></span><br><span class="line"></span><br><span class="line">bufRd.UnreadRune()</span><br><span class="line">fmt.Println(bufRd.Buffered())</span><br><span class="line"><span class="comment">// 9</span></span><br><span class="line"></span><br><span class="line">str, _ = bufRd.ReadString(<span class="string">'\n'</span>)</span><br><span class="line">fmt.Println(bufRd.Buffered(), str)</span><br><span class="line"><span class="comment">// 0 My World.</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p>Writer结构体</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Writer 实现了对io.Writer对象的缓冲功能</span></span><br><span class="line"><span class="comment">// 如果在写入Writer时发生错误，则会停止继续写入和后续操作并返回这个错误。</span></span><br><span class="line"><span class="comment">// 在所有数据被写入后，应当调用Flush方法来保证所有数据都被写入底层Writer。</span></span><br><span class="line"><span class="keyword">type</span> Writer <span class="keyword">struct</span> &#123;</span><br><span class="line">err error</span><br><span class="line">buf []<span class="keyword">byte</span></span><br><span class="line">n   <span class="keyword">int</span></span><br><span class="line">wr  io.Writer</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>func NewWriter(w io.Writer) *Writer</code><br>// 将w封装成一个bufio.Writer对象，缓存大小为4096.</p><p><code>func NewWriterSize(w io.Writer, size int) *Writer</code><br>// 将w封装成一个拥有size大小缓存的bufio.Writer对象</p><p><code>func (b *Writer) Available() int</code><br>// 返回缓存中的可用空间</p><p><code>func (b *Writer) Buffered() int</code><br>// 返回缓存中未提交的数据长度</p><p><code>func (b *Writer) Flush() error</code><br>// 将缓存中的数据提交到底层io.Writer中</p><p><code>func (b *Writer) ReadFrom(r io.Reader) (n int64, err error)</code><br>// 实现了io.ReaderFrom接口。<br>// 如果底层writer支持ReadFrom方法且b的缓存数据为空，则直接调用底层的ReadFrom方法，不使用缓存。</p><p><code>func (b *Writer) Reset(w io.Writer)</code><br>// 丢弃所有未被提交的缓存数据，重置所有状态并切换io.Writer到w</p><p><code>func (b *Writer) Size() int</code><br>// 以字节为单位返回(底层)缓冲区大小</p><p><code>func (b *Writer) Write(p []byte) (nn int, err error)</code><br>// 将p中的数据写入b中，返回写入的字节数<br>// 如果写入的字节数小于p的长度，则返回错误</p><p><code>func (b *Writer) WriteByte(c byte) error</code><br>// 写入一个字节</p><p><code>func (b *Writer) WriteRune(r rune) (size int, err error)</code><br>// 写入一个UTF8编码字符</p><p><code>func (b *Writer) WriteString(s string) (int, error)</code><br>// 写入一个字符串，返回写入的字节数</p><p>Writer的示列：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> bufio</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"bufio"</span></span><br><span class="line"><span class="string">"bytes"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Writer</span><span class="params">()</span></span>&#123;</span><br><span class="line">bt := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">0</span>)</span><br><span class="line">Bt := bytes.NewBuffer(bt)</span><br><span class="line">bufWt := bufio.NewWriter(Bt)</span><br><span class="line"></span><br><span class="line">fmt.Println(bufWt.Available(), bufWt.Buffered())<span class="comment">// 4096 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Write</span></span><br><span class="line">nn, _ := bufWt.Write([]<span class="keyword">byte</span>&#123;<span class="number">65</span>, <span class="number">66</span>&#125;)</span><br><span class="line">fmt.Println(bufWt.Available(), bufWt.Buffered())<span class="comment">// 4094 2</span></span><br><span class="line">fmt.Println(nn, Bt)<span class="comment">// 2 "空"</span></span><br><span class="line">bufWt.Flush()</span><br><span class="line">fmt.Println(bufWt.Available(), bufWt.Buffered())<span class="comment">// 4096 0</span></span><br><span class="line">fmt.Println(nn, Bt)<span class="comment">// 2 AB</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// WriteByte</span></span><br><span class="line">bufWt.WriteByte(<span class="string">'C'</span>)</span><br><span class="line">fmt.Println(bufWt.Available(), bufWt.Buffered())<span class="comment">// 4095 1</span></span><br><span class="line">fmt.Println(Bt)<span class="comment">// AB</span></span><br><span class="line">bufWt.Flush()</span><br><span class="line">fmt.Println(bufWt.Available(), bufWt.Buffered())<span class="comment">// 4096 0</span></span><br><span class="line">fmt.Println(Bt)<span class="comment">// ABC</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// WriteRune</span></span><br><span class="line">size, _ := bufWt.WriteRune(<span class="string">'D'</span>)</span><br><span class="line">fmt.Println(bufWt.Available(), bufWt.Buffered())<span class="comment">// 4095 1</span></span><br><span class="line">fmt.Println(size, Bt)<span class="comment">// 1 ABC</span></span><br><span class="line">bufWt.Flush()</span><br><span class="line">fmt.Println(bufWt.Available(), bufWt.Buffered())<span class="comment">// 4096 0</span></span><br><span class="line">fmt.Println(Bt)<span class="comment">// ABCD</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// WriteString</span></span><br><span class="line">n, _ := bufWt.WriteString(<span class="string">"EFG"</span>)</span><br><span class="line">fmt.Println(bufWt.Available(), bufWt.Buffered())<span class="comment">// 4093 3</span></span><br><span class="line">fmt.Println(n, Bt)<span class="comment">// 3 ABCD</span></span><br><span class="line">bufWt.Flush()</span><br><span class="line">fmt.Println(bufWt.Available(), bufWt.Buffered())<span class="comment">// 4096 0</span></span><br><span class="line">fmt.Println(Bt)<span class="comment">// ABCDEFG</span></span><br><span class="line"></span><br><span class="line">fmt.Println(bufWt.Size())<span class="comment">// 4096</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ReadFrom without buffered</span></span><br><span class="line">some := bytes.NewReader([]<span class="keyword">byte</span>(<span class="string">"HIJKLMN"</span>))</span><br><span class="line">nChar, _ := bufWt.ReadFrom(some)</span><br><span class="line">fmt.Println(bufWt.Available(), bufWt.Buffered())<span class="comment">//4096 0</span></span><br><span class="line">fmt.Println(nChar, Bt)<span class="comment">//7 ABCDEFGHIJKLMN</span></span><br><span class="line"><span class="comment">// 这里不用调用flush，因为在ReadForm之前缓存中没有数据，直接调用底层的ReadFrom写入了数据</span></span><br><span class="line"><span class="comment">// 下面看下有缓存的情况，先写入一个换行</span></span><br><span class="line">bufWt.WriteByte(<span class="string">'\n'</span>)</span><br><span class="line">fmt.Println(bufWt.Available(), bufWt.Buffered())<span class="comment">// 4095 1</span></span><br><span class="line">fmt.Println(Bt)<span class="comment">// ABCDEFGHIJKLMN</span></span><br><span class="line"><span class="comment">// 紧接着不Flash而是直接ReadForm</span></span><br><span class="line">some2 := bytes.NewReader([]<span class="keyword">byte</span>(<span class="string">"OPQRST"</span>))</span><br><span class="line">nChar, _ = bufWt.ReadFrom(some2)</span><br><span class="line">fmt.Println(bufWt.Available(), bufWt.Buffered())<span class="comment">//4089 7</span></span><br><span class="line">fmt.Println(nChar, Bt)<span class="comment">//6 ABCDEFGHIJKLMN</span></span><br><span class="line"><span class="comment">// 现在Flush然后看各个变量</span></span><br><span class="line">bufWt.Flush()</span><br><span class="line">fmt.Println(bufWt.Available(), bufWt.Buffered())<span class="comment">// 4096 0</span></span><br><span class="line">fmt.Println(Bt)<span class="comment">// ABCDEFGHIJKLMN"换行"OPQRST</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p>Scanner结构体</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Scanner为读取数据提供了便捷的接口，这些数据包括但不限于有换行分界符的文本文件。</span></span><br><span class="line"><span class="comment">// 连续调用Scan方法将会遍历文件的'Token'(指定部分)且跳过指定部分之间的字节。</span></span><br><span class="line"><span class="comment">// 指定部分的格式由SplitFunc类型的函数定义，默认的切分函数根据行尾将输入拆分成行但不包括行尾</span></span><br><span class="line"><span class="comment">// 本包下定义并提供的切分函数用于将文件扫描成line,bytes,UTF-8Encoded runes和空格拆分的单词。用户也可以使用自己的切分函数来替换它。</span></span><br><span class="line"><span class="comment">// 当扫描遇到EOF、第一次I/O错误或'指定部分'太大无法存入缓冲区时停止。</span></span><br><span class="line"><span class="comment">// 当一次扫描停止时，读取器有可能早已超出'指定部分'很远。如果程序想要对数据进行更多的控制，如错误处理或扫描更大的'指定部分'或顺序扫描，则应当使用bufio.reader来代替。</span></span><br><span class="line"><span class="keyword">type</span> Scanner <span class="keyword">struct</span> &#123;</span><br><span class="line">r            io.Reader <span class="comment">// 用户提供的reader.</span></span><br><span class="line">split        SplitFunc <span class="comment">// 拆分token的方法.</span></span><br><span class="line">maxTokenSize <span class="keyword">int</span>       <span class="comment">// token的上限</span></span><br><span class="line">token        []<span class="keyword">byte</span>    <span class="comment">// split返回的最后token.</span></span><br><span class="line">buf          []<span class="keyword">byte</span>    <span class="comment">// 作为参数给split的缓冲区.</span></span><br><span class="line">start        <span class="keyword">int</span>       <span class="comment">// 缓冲区起始位.</span></span><br><span class="line">end          <span class="keyword">int</span>       <span class="comment">// 缓冲区终止位.</span></span><br><span class="line">err          error     <span class="comment">// Sticky error.</span></span><br><span class="line">empties      <span class="keyword">int</span>       <span class="comment">// 连续出现空token的次数.</span></span><br><span class="line">scanCalled   <span class="keyword">bool</span>      <span class="comment">// 扫描是否开始.</span></span><br><span class="line">done         <span class="keyword">bool</span>      <span class="comment">// 扫描完毕.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>func (s *Scanner) Buffer(buf []byte, max int)</code><br>// 用于设置自定义缓存以及可扩展范围，如果max小于len(buf)，则buf的尺寸将固定不可调。<br>// Buffer必须在第一次Scan之前设置，否则引发Panic。<br>// 默认情况下，Scanner将会使用一个4096-bufio.MaxScanTokenSize大小的内部缓存。</p><p><code>func (s *Scanner) Bytes() []byte</code><br>// 将最后一次扫描出的‘指定部分’作为切片（引用）返回<br>// 下一次的扫描会覆盖本结果</p><p><code>func (s *Scanner) Err() error</code><br>// 返回扫描过程中遇到的非EOF错误</p><p><code>func (s *Scanner) Scan() bool</code><br>// 扫描数据中的‘指定部分’</p><p><code>func (s *Scanner) Split(split SplitFunc)</code><br>// 设置Scanner的分切函数，必须在Scan方法之前调用</p><p><code>func (s *Scanner) Text() string</code><br>// 最后一次扫描出的‘指定部分’作为String返回</p><p>Scanner的示例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> bufio</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"bufio"</span></span><br><span class="line"><span class="string">"bytes"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Scan</span><span class="params">()</span></span>&#123;</span><br><span class="line">b1 := bytes.NewReader([]<span class="keyword">byte</span>(<span class="string">"ABC\nDEF\r\nGHI\nJKL"</span>))</span><br><span class="line">bs := bufio.NewScanner(b1)</span><br><span class="line"><span class="keyword">for</span> bs.Scan() &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%s %v\n"</span>, bs.Bytes(), bs.Text())</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ABC ABC</span></span><br><span class="line"><span class="comment">// DEF DEF</span></span><br><span class="line"><span class="comment">// GHI GHI</span></span><br><span class="line"><span class="comment">// JKL JKL</span></span><br><span class="line">b2 := bytes.NewReader([]<span class="keyword">byte</span>(<span class="string">"ABC\nDEF GHI JKL"</span>))</span><br><span class="line">bs = bufio.NewScanner(b2)</span><br><span class="line">bs.Split(bufio.ScanWords)</span><br><span class="line"><span class="keyword">for</span> bs.Scan() &#123;</span><br><span class="line">fmt.Println(bs.Text())</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ABC</span></span><br><span class="line"><span class="comment">// DEF</span></span><br><span class="line"><span class="comment">// GHI</span></span><br><span class="line"><span class="comment">// JKL</span></span><br><span class="line">b3 := bytes.NewReader([]<span class="keyword">byte</span>(<span class="string">"Hello 世界！"</span>))</span><br><span class="line">bs = bufio.NewScanner(b3)</span><br><span class="line">bs.Split(bufio.ScanRunes)</span><br><span class="line"><span class="keyword">for</span> bs.Scan() &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%v "</span>, bs.Text())</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// H e l l o   世 界 ！</span></span><br><span class="line">fmt.Println()</span><br><span class="line">b4 := bytes.NewReader([]<span class="keyword">byte</span>(<span class="string">"我的天哪!"</span>))</span><br><span class="line">bs = bufio.NewScanner(b4)</span><br><span class="line">bs.Split(bufio.ScanBytes)</span><br><span class="line"><span class="keyword">for</span> bs.Scan() &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%v "</span>, bs.Bytes())</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// [230] [136] [145] [231] [154] [132] [229] [164] [169] [229] [147] [170] [33]</span></span><br><span class="line">fmt.Println()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外的参考：</p><ul><li><a href="https://studygolang.com/articles/4367" target="_blank" rel="noopener">https://studygolang.com/articles/4367</a></li><li><a href="https://www.cnblogs.com/golove/p/3282667.html" target="_blank" rel="noopener">https://www.cnblogs.com/golove/p/3282667.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一天一个Golang包，慢慢学习之“bufio”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今天学习带缓存的I/O操作，基础包“bufio”中有bufio.go和scan.go两个文件&lt;/p&gt;
&lt;h4 id=&quot;阅读文档：&quot;&gt;&lt;a href=&quot;#阅读文档：&quot; class=&quot;headerlink&quot; title=&quot;阅读文档：&quot;&gt;&lt;/a&gt;阅读文档：&lt;/h4&gt;&lt;p&gt;官方pkg地址：&lt;a href=&quot;https://golang.org/pkg/bufio/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://golang.org/pkg/bufio/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;包方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;func NewReadWriter(r *Reader, w *Writer) *ReadWriter&lt;/code&gt;&lt;br&gt;// 将r和w封装为一个bufio.Readwriter对象&lt;/p&gt;
&lt;p&gt;&lt;code&gt;func NewReader(rd io.Reader) *Reader&lt;/code&gt;&lt;br&gt;// 将rd封装为一个bufio.Reader对象(缓存大小默认4096)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;func NewReaderSize(rd io.Reader, size int) *Reader&lt;/code&gt;&lt;br&gt;// 将rd封装成一个拥有size大小缓存的bufio.Reader对象&lt;/p&gt;
&lt;p&gt;&lt;code&gt;func NewScanner(r io.Reader) *Scanner&lt;/code&gt;&lt;br&gt;// 创建一个Scanner来扫描r&lt;/p&gt;
&lt;p&gt;&lt;code&gt;func NewWriter(w io.Writer) *Writer&lt;/code&gt;&lt;br&gt;// 将w封装成一个bufio.Writer对象(缓存大小默认4096)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;func NewWriterSize(w io.Writer, size int) *Writer&lt;/code&gt;&lt;br&gt;//将w封装成一个拥有size大小缓存的bufio.Writer对象&lt;/p&gt;
    
    </summary>
    
      <category term="Learn-GO" scheme="http://www.imsry.cn/categories/Learn-GO/"/>
    
    
  </entry>
  
  <entry>
    <title>Go语言包-archive/zip</title>
    <link href="http://www.imsry.cn/posts/6200ba6d.html"/>
    <id>http://www.imsry.cn/posts/6200ba6d.html</id>
    <published>2018-11-23T09:08:10.000Z</published>
    <updated>2020-05-29T04:02:29.871Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一天一个Golang包，慢慢学习之“archive/zip”</p></blockquote><p>昨天阅读了archive包的tar包，对Go语言操作压缩包有了一定的基础，今天就继续把另外一个包“zip”也来熟悉一下。</p><h4 id="阅读文档："><a href="#阅读文档：" class="headerlink" title="阅读文档："></a>阅读文档：</h4><p>官方pkg地址：<a href="https://golang.org/pkg/archive/zip/" target="_blank" rel="noopener">https://golang.org/pkg/archive/zip/</a></p><p>今天同样从官方的包文档中提取几个主要的内容出来分享一下：</p><blockquote><p>常量</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> (</span><br><span class="line">        Store   <span class="keyword">uint16</span> = <span class="number">0</span> <span class="comment">// no compression</span></span><br><span class="line">        Deflate <span class="keyword">uint16</span> = <span class="number">8</span> <span class="comment">// DEFLATE compressed</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><a id="more"></a><blockquote><p>变量</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> (</span><br><span class="line">        ErrFormat    = errors.New(<span class="string">"zip: not a valid zip file"</span>)<span class="comment">// 不合法的zip文件</span></span><br><span class="line">        ErrAlgorithm = errors.New(<span class="string">"zip: unsupported compression algorithm"</span>)<span class="comment">// 不支持的压缩算法</span></span><br><span class="line">        ErrChecksum  = errors.New(<span class="string">"zip: checksum error"</span>)<span class="comment">//校验错误</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>FileHeader结构体</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> FileHeader <span class="keyword">struct</span> &#123;</span><br><span class="line">        Name <span class="keyword">string</span><span class="comment">// 文件名，必须是相对路径，不能以设备或斜杠开始，分隔符用'/'表示</span></span><br><span class="line"></span><br><span class="line">        Comment <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">        NonUTF8 <span class="keyword">bool</span> <span class="comment">// Go 1.10</span></span><br><span class="line"></span><br><span class="line">        CreatorVersion <span class="keyword">uint16</span></span><br><span class="line">        ReaderVersion  <span class="keyword">uint16</span></span><br><span class="line">        Flags          <span class="keyword">uint16</span></span><br><span class="line"></span><br><span class="line">        Method <span class="keyword">uint16</span></span><br><span class="line"></span><br><span class="line">        Modified     time.Time <span class="comment">// Go 1.10</span></span><br><span class="line">        ModifiedTime <span class="keyword">uint16</span> <span class="comment">// Deprecated: Legacy MS-DOS date; use Modified instead.</span></span><br><span class="line">        ModifiedDate <span class="keyword">uint16</span> <span class="comment">// Deprecated: Legacy MS-DOS time; use Modified instead.</span></span><br><span class="line"></span><br><span class="line">        CRC32              <span class="keyword">uint32</span></span><br><span class="line">        CompressedSize     <span class="keyword">uint32</span> <span class="comment">// Deprecated: Use CompressedSize64 instead.</span></span><br><span class="line">        UncompressedSize   <span class="keyword">uint32</span> <span class="comment">// Deprecated: Use UncompressedSize64 instead.</span></span><br><span class="line">        CompressedSize64   <span class="keyword">uint64</span> <span class="comment">// Go 1.1</span></span><br><span class="line">        UncompressedSize64 <span class="keyword">uint64</span> <span class="comment">// Go 1.1</span></span><br><span class="line">        Extra              []<span class="keyword">byte</span></span><br><span class="line">        ExternalAttrs      <span class="keyword">uint32</span> <span class="comment">// Meaning depends on CreatorVersion</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>FileHeader相关的方法：</p><p><code>func FileInfoHeader(fi os.FileInfo) (*FileHeader, error)</code>    // 通过传入的fi填充一个FileHeader并返回，由于os.FileInfo的Name方法只返回文件描述的Name，所以实际使用有可能需要自行修改为完整的全路径</p><p><code>func (h *FileHeader) FileInfo() os.FileInfo</code> // 返回一个os.FileInfo</p><p><code>func (h *FileHeader) ModTime() time.Time</code>    // 修改时间</p><p><code>func (h *FileHeader) Mode() (mode os.FileMode)</code>    // 权限和模式位</p><p><code>func (h *FileHeader) SetModTime(t time.Time)</code>    // 设置修改时间</p><p><code>func (h *FileHeader) SetMode(mode os.FileMode)</code>    // 设置权限</p><blockquote><p>ReadCloser结构体</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ReadCloser <span class="keyword">struct</span> &#123;</span><br><span class="line">        Reader</span><br><span class="line">        <span class="comment">// contains filtered or unexported fields</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ReadCloser的相关方法：</p><p><code>func OpenReader(name string) (*ReadCloser, error)</code>    // 传入文件名(路径)，返回一个ReadCloser指针(继承了Reader)</p><p><code>func (rc *ReadCloser) Close() error</code>    // 关闭ReadCloser</p><blockquote><p>Reader结构体</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Reader <span class="keyword">struct</span> &#123;</span><br><span class="line">        File    []*File</span><br><span class="line">        Comment <span class="keyword">string</span></span><br><span class="line">        <span class="comment">// contains filtered or unexported fields</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Reader的相关方法：</p><p><code>func NewReader(r io.ReaderAt, size int64) (*Reader, error)</code>    // 从r中读取size个字节并返回一个新的Reader</p><p><code>func (z *Reader) RegisterDecompressor(method uint16, dcomp Decompressor)</code></p><blockquote><p>Writer结构体</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Writer <span class="keyword">struct</span> &#123;</span><br><span class="line">        <span class="comment">// contains filtered or unexported fields</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Writer的相关方法：</p><p><code>func NewWriter(w io.Writer) *Writer</code>    // 创建并返回一个将zip文件写入w的Writer</p><p><code>func (w *Writer) Close() error</code>    // 关闭Writer</p><p><code>func (w *Writer) Create(name string) (io.Writer, error)</code>    // 使用name添加一个文件到zip文件中，返回一个Writer。name必须是相对路径，不能以设备或斜杠开头，用’/‘作为分隔符。新增文件内容必须在下一次调用CreateHeader、Create或Close方法前全部写入。</p><p><code>func (w *Writer) CreateHeader(fh *FileHeader) (io.Writer, error)</code>    // 使用fh所描述的元数据添加一个文件到zip文件中，并返回一个用于写入数据的io.Writer。</p><p><code>func (w *Writer) Flush() error</code> // 将缓存写入底层IO</p><p>等等..</p><hr><p>实现一个跟昨天一样的需求：简单的创建和读取压缩包，<a href="/posts/5df3d88.html">传送门</a></p><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> zip</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"archive/zip"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"io"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span>(</span><br><span class="line">filePath = <span class="string">"/tmp/go/learn/data/zipArchive.zip"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CreateArchive</span><span class="params">()</span></span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"This is function CreateArchive called"</span>)</span><br><span class="line"><span class="keyword">var</span> files = []<span class="keyword">struct</span>&#123;</span><br><span class="line">Name, Body <span class="keyword">string</span></span><br><span class="line">&#125;&#123;</span><br><span class="line">&#123;<span class="string">"Readme.md"</span>, <span class="string">"## Hello World\n1. line 1\n2. line 2\n3. line 3"</span>&#125;,</span><br><span class="line">&#123;<span class="string">"gopher.txt"</span>, <span class="string">"Gopher names:\nGorge\nGeoffrey\nGonzo"</span>&#125;,</span><br><span class="line">&#123;<span class="string">"todo.txt"</span>, <span class="string">"Get animal handling licence.\nWrite more examples"</span>&#125;,</span><br><span class="line">&#123;<span class="string">"myDir/file.txt"</span>, <span class="string">"This is a sub dir's file"</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line">fi, err := os.Create(filePath)</span><br><span class="line"><span class="keyword">defer</span> fi.Close()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">zw := zip.NewWriter(fi)</span><br><span class="line"><span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line">fh := &amp;zip.FileHeader&#123;</span><br><span class="line">Name: file.Name,</span><br><span class="line">Modified: time.Now(),</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这里也可以使用 f, err := zw.Create(file.Name); 快速创建文件</span></span><br><span class="line"><span class="keyword">if</span> f, err := zw.CreateHeader(fh); err != <span class="literal">nil</span>&#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span> _, err := f.Write([]<span class="keyword">byte</span>(file.Body));err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err = zw.Close(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"Created Archive file is stored in:"</span>, filePath)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ReadArchive</span><span class="params">()</span></span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"This is function ReadeArchive called"</span>)</span><br><span class="line">zr, err := zip.OpenReader(filePath)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> zr.Close()</span><br><span class="line"><span class="keyword">for</span> _, f := <span class="keyword">range</span> zr.File &#123;</span><br><span class="line">fmt.Printf(<span class="string">"\tContents of %s:\n"</span>,f.Name)</span><br><span class="line"><span class="keyword">if</span> rc, err := f.Open();err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span> _, err := io.Copy(os.Stdout, rc, ); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">rc.Close()</span><br><span class="line">fmt.Println()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>通过今天的学习，突然发现了昨天的tar并没有涉及到压缩，所以它应该就是个普通的归档，而zip中带有了压缩算法，所以它可以被称为压缩包。不过我今天也悄悄的看了一下tar.gz的相关内容，非常简单！这里就不多说，感兴趣的自行移步官方文档。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一天一个Golang包，慢慢学习之“archive/zip”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;昨天阅读了archive包的tar包，对Go语言操作压缩包有了一定的基础，今天就继续把另外一个包“zip”也来熟悉一下。&lt;/p&gt;
&lt;h4 id=&quot;阅读文档：&quot;&gt;&lt;a href=&quot;#阅读文档：&quot; class=&quot;headerlink&quot; title=&quot;阅读文档：&quot;&gt;&lt;/a&gt;阅读文档：&lt;/h4&gt;&lt;p&gt;官方pkg地址：&lt;a href=&quot;https://golang.org/pkg/archive/zip/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://golang.org/pkg/archive/zip/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;今天同样从官方的包文档中提取几个主要的内容出来分享一下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;常量&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Store   &lt;span class=&quot;keyword&quot;&gt;uint16&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// no compression&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Deflate &lt;span class=&quot;keyword&quot;&gt;uint16&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// DEFLATE compressed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Learn-GO" scheme="http://www.imsry.cn/categories/Learn-GO/"/>
    
    
  </entry>
  
  <entry>
    <title>Go语言包-archive/tar</title>
    <link href="http://www.imsry.cn/posts/5df3d88.html"/>
    <id>http://www.imsry.cn/posts/5df3d88.html</id>
    <published>2018-11-22T09:33:52.000Z</published>
    <updated>2020-05-29T04:02:25.864Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一天一个Golang包，慢慢学习之“archive/tar”</p></blockquote><p>今天了解一下归档（压缩包）中的tar包，我们对压缩包其实并不陌生，像是”某某.tar”，自然能想到应该用压缩包工具打开并解压出来使用。</p><h4 id="阅读文档："><a href="#阅读文档：" class="headerlink" title="阅读文档："></a>阅读文档：</h4><p>官方pkg地址：<a href="https://golang.org/pkg/archive/tar/" target="_blank" rel="noopener">https://golang.org/pkg/archive/tar/</a></p><p>从官方的包文档中，我提取几个主要的内容出来分享一下：</p><a id="more"></a><blockquote><p>常量</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> (</span><br><span class="line">        <span class="comment">// Type '0' indicates a regular file.(普通文件)</span></span><br><span class="line">        TypeReg  = <span class="string">'0'</span></span><br><span class="line">        TypeRegA = <span class="string">'\x00'</span> <span class="comment">// Deprecated: Use TypeReg instead.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Type '1' to '6' are header-only flags and may not have a data body.</span></span><br><span class="line">        TypeLink    = <span class="string">'1'</span> <span class="comment">// Hard link(硬链接)</span></span><br><span class="line">        TypeSymlink = <span class="string">'2'</span> <span class="comment">// Symbolic link(软链接/符号链接)</span></span><br><span class="line">        TypeChar    = <span class="string">'3'</span> <span class="comment">// Character device node(字符设备节点)</span></span><br><span class="line">        TypeBlock   = <span class="string">'4'</span> <span class="comment">// Block device node(块设备节点)</span></span><br><span class="line">        TypeDir     = <span class="string">'5'</span> <span class="comment">// Directory(目录)</span></span><br><span class="line">        TypeFifo    = <span class="string">'6'</span> <span class="comment">// FIFO node</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Type '7' is reserved.（保留项）</span></span><br><span class="line">        TypeCont = <span class="string">'7'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Type 'x' is used by the PAX format to store key-value records that</span></span><br><span class="line">        <span class="comment">// are only relevant to the next file.</span></span><br><span class="line">        <span class="comment">// This package transparently handles these types.</span></span><br><span class="line">        TypeXHeader = <span class="string">'x'</span><span class="comment">// 可扩展头部</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Type 'g' is used by the PAX format to store key-value records that</span></span><br><span class="line">        <span class="comment">// are relevant to all subsequent files.</span></span><br><span class="line">        <span class="comment">// This package only supports parsing and composing such headers,</span></span><br><span class="line">        <span class="comment">// but does not currently support persisting the global state across files.</span></span><br><span class="line">        TypeXGlobalHeader = <span class="string">'g'</span><span class="comment">// 全局扩展头部</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Type 'S' indicates a sparse file in the GNU format.</span></span><br><span class="line">        TypeGNUSparse = <span class="string">'S'</span><span class="comment">// 稀疏文件</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Types 'L' and 'K' are used by the GNU format for a meta file</span></span><br><span class="line">        <span class="comment">// used to store the path or link name for the next file.</span></span><br><span class="line">        <span class="comment">// This package transparently handles these types.</span></span><br><span class="line">        TypeGNULongName = <span class="string">'L'</span></span><br><span class="line">        TypeGNULongLink = <span class="string">'K'</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>变量(主要用于错误输出)</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> (</span><br><span class="line">        ErrHeader          = errors.New(<span class="string">"archive/tar: invalid tar header"</span>)<span class="comment">// 无效的tar头部</span></span><br><span class="line">        ErrWriteTooLong    = errors.New(<span class="string">"archive/tar: write too long"</span>)<span class="comment">// 写入数据太长</span></span><br><span class="line">        ErrFieldTooLong    = errors.New(<span class="string">"archive/tar: header field too long"</span>)<span class="comment">// 头部太长</span></span><br><span class="line">        ErrWriteAfterClose = errors.New(<span class="string">"archive/tar: write after close"</span>)<span class="comment">// 关闭后写入</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>Header结构体</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Header <span class="keyword">struct</span> &#123;</span><br><span class="line">        Typeflag <span class="keyword">byte</span> <span class="comment">// the type of header entry.(文件类型)</span></span><br><span class="line"></span><br><span class="line">        Name     <span class="keyword">string</span> <span class="comment">// 文件名称</span></span><br><span class="line">        Linkname <span class="keyword">string</span> <span class="comment">// 链接名称 (适用于硬链接和软链接)</span></span><br><span class="line"></span><br><span class="line">        Size  <span class="keyword">int64</span>  <span class="comment">// 文件的字节大小</span></span><br><span class="line">        Mode  <span class="keyword">int64</span>  <span class="comment">// 权限，如：0600</span></span><br><span class="line">        Uid   <span class="keyword">int</span>    <span class="comment">// 用户ID</span></span><br><span class="line">        Gid   <span class="keyword">int</span>    <span class="comment">// 组ID</span></span><br><span class="line">        Uname <span class="keyword">string</span> <span class="comment">// 用户名</span></span><br><span class="line">        Gname <span class="keyword">string</span> <span class="comment">// 组名</span></span><br><span class="line"></span><br><span class="line">        ModTime    time.Time <span class="comment">// 最后一次修改文件或目录的时间</span></span><br><span class="line">        AccessTime time.Time <span class="comment">// 最后一次访问文件或目录的时间</span></span><br><span class="line">        ChangeTime time.Time <span class="comment">// 最后一次改变文件或目录(改变的是原数据即:属性)的时间</span></span><br><span class="line"></span><br><span class="line">        Devmajor <span class="keyword">int64</span> <span class="comment">// Major device number (valid for TypeChar or TypeBlock)(字符设备或块设备的主设备号)</span></span><br><span class="line">        Devminor <span class="keyword">int64</span> <span class="comment">// Minor device number (valid for TypeChar or TypeBlock)(字符设备或块设备的次设备号)</span></span><br><span class="line"></span><br><span class="line">        Xattrs <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span> <span class="comment">// Go 1.3</span></span><br><span class="line">        </span><br><span class="line">        PAXRecords <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span> <span class="comment">// Go 1.10</span></span><br><span class="line"></span><br><span class="line">        Format Format <span class="comment">// Go 1.10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Header的相关方法：</p><p><code>func FileInfoHeader(fi os.FileInfo, link string)(*Header, error)</code>    //该方法通过os.FileInfo来创建一个tar.Header，用在对已有文件打包十分方便</p><p><code>func (h *Header) FileInfo() os.FileInfo</code>    // 该方法获取Header的os.FileInfo信息</p><blockquote><p>Reader结构体</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Reader <span class="keyword">struct</span> &#123;</span><br><span class="line">r    io.Reader</span><br><span class="line">pad  <span class="keyword">int64</span>      <span class="comment">// Amount of padding (ignored) after current file entry</span></span><br><span class="line">curr fileReader <span class="comment">// Reader for current file entry</span></span><br><span class="line">blk  block      <span class="comment">// Buffer to use as temporary local storage</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// err is a persistent error.</span></span><br><span class="line"><span class="comment">// It is only the responsibility of every exported method of Reader to</span></span><br><span class="line"><span class="comment">// ensure that this error is sticky.</span></span><br><span class="line">err error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Reader结构体有以下方法：<br><code>func NewReader(r io.Reader) *Reader</code>    // 用r创建新的tar.Reader</p><p><code>func (tr *Reader) Next() (*Header, error)</code>    // 使tr指向下一个文件实体并返回实体的Header，到最后会返回err为io.EOF</p><p><code>func (tr *Reader) Read(b []byte) (int, error)</code>    // 读取当前实体到b，读取到最后时返回err为io.EOF</p><p>阅读到这儿，基本就可以解析一个tar文件了，从上述的方法我们可以得知，要想获得压缩包的内容，我们可以使用tar.Reader来完成，而tar.Reader的创建可以通过使用tar.NewReader()方法，该方法需要提供一个实现了io.Reader接口的对象，此对象可以通过os包的方法如os.Open()或者os.OpenFile()等方法获得。根据这个思路，我们便可以解析获得tar文件的所有内容了。</p><blockquote><p>Writer结构体</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Writer <span class="keyword">struct</span> &#123;</span><br><span class="line">w    io.Writer</span><br><span class="line">pad  <span class="keyword">int64</span>      <span class="comment">// Amount of padding to write after current file entry</span></span><br><span class="line">curr fileWriter <span class="comment">// Writer for current file entry</span></span><br><span class="line">hdr  Header     <span class="comment">// Shallow copy of Header that is safe for mutations</span></span><br><span class="line">blk  block      <span class="comment">// Buffer to use as temporary local storage</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// err is a persistent error.</span></span><br><span class="line"><span class="comment">// It is only the responsibility of every exported method of Writer to</span></span><br><span class="line"><span class="comment">// ensure that this error is sticky.</span></span><br><span class="line">err error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Writer结构体有如下方法：<br><code>func NewWriter(w io.Writer) *Writer</code>    // 用w创建新的tar.Writer</p><p><code>func (tw *Writer) Close() error</code>        // 关闭tar文件，并将未写入的数据写入底层writer<br><code>func (tw *Writer) Flush() error</code>        // 完成当前写入</p><p><code>func (tw *Writer) Write(b []byte) (int, error)</code>    // 将b写入当前实体，如果写入长度大于WriteHeader所描述的Size，则会返回err为ErrWriteTooLong的报错</p><p><code>func (tw *Writer) WriteHeader(hdr *Header) error</code>    // 将hdr写入tar文件中并准备接受Write()方法的写入，hdr.Size决定写入的文件字节大小。如果未完全写入，则会报错。写入hdr之前会隐式调用Flash()。</p><p>下面我们假设这样一个需求：</p><h4 id="需求描述："><a href="#需求描述：" class="headerlink" title="需求描述："></a>需求描述：</h4><ol><li>创建一个压缩包文件，命名为：”tarArchive.tar”。</li><li>压缩包中存有3个文本文档，分别命名：”readme.md”、”gopher.txt”、”todo.txt”，内容随意。</li><li>压缩包中还有一个目录(命名:dir)，其中有一个文件:dirFile.txt，内容随意</li><li>将压缩包保存在”/tmp/go/learn/data”目录中。</li><li>读取压缩包内容，并打印文件(或目录)以及文件内容。</li></ol><h4 id="求解过程："><a href="#求解过程：" class="headerlink" title="求解过程："></a>求解过程：</h4><ol><li>最终结果是要创建一个文件，所以我们先创建这个文件：这里用到<code>f, err := os.OpenFile()</code>方法来获取一个文件指针</li><li>然后创建一个tar的Writer对象来实现对文件的写入：<code>tw := tar.NewWriter(f)</code>，获得的tw对象就是一个写入器，他有Write方法。</li><li>构建一个文件列表（任何方式，为了方便用循环添加文件）。</li><li>使用<code>tw.WriteHeader()</code>和<code>tw.Write()</code>方法向压缩包写入文件。</li><li>关闭文件和写入器：<code>f.Close()</code>、<code>tw.Close()</code>，tar文件创建完毕。</li><li>读取tar文件，并使用tar.NewReader()获得Reader对象。</li><li>循环Next()方法获得hdr并打印hdr.Name以及Reader的内容</li><li>判断io.EOF结束并关闭文件。</li></ol><h4 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> tar</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"archive/tar"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"io"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">var</span>(</span><br><span class="line">filePath = <span class="string">"/tmp/go/learn/data/tarArchive.tar"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CreateArchive</span><span class="params">()</span></span>&#123;</span><br><span class="line">f, err := os.OpenFile(filePath, os.O_CREATE|os.O_WRONLY|os.O_TRUNC, <span class="number">0666</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> f.Close()</span><br><span class="line">tw := tar.NewWriter(f)</span><br><span class="line"><span class="keyword">var</span> files = []<span class="keyword">struct</span>&#123;</span><br><span class="line">Name, Body <span class="keyword">string</span></span><br><span class="line">&#125;&#123;</span><br><span class="line">&#123;<span class="string">"Readme.md"</span>, <span class="string">"This is a readme markdown file."</span>&#125;,</span><br><span class="line">&#123;<span class="string">"gopher.txt"</span>, <span class="string">"Gopher names:\nGeorge\nGeoffrey\nGonzo"</span>&#125;,</span><br><span class="line">&#123;<span class="string">"todo.txt"</span>, <span class="string">"Get animal handling license."</span>&#125;,</span><br><span class="line">&#123;<span class="string">"dir/dirFile.txt"</span>, <span class="string">"it's content is in directory"</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 创建一个名字叫做myDir2的目录，用于区分上述的dir/dirFile.txt中的目录</span></span><br><span class="line"><span class="keyword">if</span> err = tw.WriteHeader(&amp;tar.Header&#123;Name: <span class="string">"myDir2"</span>,Mode: <span class="number">0766</span>,Typeflag:tar.TypeDir&#125;); err != <span class="literal">nil</span>&#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line">hdr := &amp;tar.Header&#123;</span><br><span class="line">Name: file.Name,</span><br><span class="line">Mode: <span class="number">0600</span>,</span><br><span class="line">Size: <span class="keyword">int64</span>(<span class="built_in">len</span>(file.Body)),</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := tw.WriteHeader(hdr); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> _, err := tw.Write([]<span class="keyword">byte</span>(file.Body)); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := tw.Close(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ReadArchive</span><span class="params">()</span></span>&#123;</span><br><span class="line">f, err := os.OpenFile(filePath, os.O_RDONLY, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> f.Close()</span><br><span class="line">tr := tar.NewReader(f)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">hdr, err := tr.Next()</span><br><span class="line"><span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">"Contents of %s:\n"</span>,hdr.Name)</span><br><span class="line"><span class="keyword">if</span> _, err := io.Copy(os.Stdout, tr); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"\n===="</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：代码中有关myDir目录和myDir2目录的创建方式不一样，但是效果差异不大</strong></p><ul><li>扩展阅读：利用compress/gzip压缩和解压:<a href="https://golang.org/pkg/compress/gzip/" target="_blank" rel="noopener">https://golang.org/pkg/compress/gzip/</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一天一个Golang包，慢慢学习之“archive/tar”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今天了解一下归档（压缩包）中的tar包，我们对压缩包其实并不陌生，像是”某某.tar”，自然能想到应该用压缩包工具打开并解压出来使用。&lt;/p&gt;
&lt;h4 id=&quot;阅读文档：&quot;&gt;&lt;a href=&quot;#阅读文档：&quot; class=&quot;headerlink&quot; title=&quot;阅读文档：&quot;&gt;&lt;/a&gt;阅读文档：&lt;/h4&gt;&lt;p&gt;官方pkg地址：&lt;a href=&quot;https://golang.org/pkg/archive/tar/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://golang.org/pkg/archive/tar/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;从官方的包文档中，我提取几个主要的内容出来分享一下：&lt;/p&gt;
    
    </summary>
    
      <category term="Learn-GO" scheme="http://www.imsry.cn/categories/Learn-GO/"/>
    
    
  </entry>
  
  <entry>
    <title>判断IP地址是否内网IP</title>
    <link href="http://www.imsry.cn/posts/ae0c030a.html"/>
    <id>http://www.imsry.cn/posts/ae0c030a.html</id>
    <published>2018-11-05T06:45:52.000Z</published>
    <updated>2020-05-29T08:32:08.944Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>当你的服务同时开放于公网和内网，子服务却仅允许内网访问，那么则会涉及到IP白名单的功能。但是如果名单太多或者服务进行了迁移，那么维护起来会相当的麻烦，最简单的就是判断访问的来源IP是否内网IP地址，从而直接屏蔽掉公网IP。</p></blockquote><p>首先，我们认识了3类私有地址：</p><p>A类：10.0.0.0-10.255.255.255</p><p>B类：172.16.0.0-172.31.255.255</p><p>C类：192.168.0.0-192.168.255.255</p><p>还有一个本机地址：127.0.0.1</p><p>他们就是我们平时所谓的内网IP地址。</p><h3 id="方法一：-PHP自带函数"><a href="#方法一：-PHP自带函数" class="headerlink" title="方法一： PHP自带函数"></a>方法一： PHP自带函数</h3><a id="more"></a><blockquote><p>filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE)</p></blockquote><p>如果$IP是内网IP则会返回<code>false</code>，否则返回ip字符串。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$IP = get_client_ip(); <span class="comment">//该方法自己实现，返回客户端的IP地址</span></span><br><span class="line">$is_publicIP = filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE);</span><br><span class="line"><span class="keyword">if</span>($is_publicIP)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'公网IP'</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'内网IP'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方法二：-适合有网络基础的胖友阅读"><a href="#方法二：-适合有网络基础的胖友阅读" class="headerlink" title="方法二： 适合有网络基础的胖友阅读"></a>方法二： 适合有网络基础的胖友阅读</h3><p>关于IP地址的知识，这里就不讲太多了，下面的方法就是根据IP地址的定义和网段的划分等专业知识进行判定的。懂的就自然懂啦！</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isLocal</span><span class="params">($ip)</span></span>&#123;</span><br><span class="line">        $long=ip2long($ip);</span><br><span class="line">        $data=<span class="keyword">array</span>(</span><br><span class="line">                <span class="number">24</span>=&gt;<span class="string">'10.255.255.255'</span>,</span><br><span class="line">                <span class="number">20</span>=&gt;<span class="string">'172.31.255.255'</span>,</span><br><span class="line">                <span class="number">16</span>=&gt;<span class="string">'192.168.255.255'</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">foreach</span>($data <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">                <span class="keyword">if</span>($long &gt;&gt; $k === ip2long($v)&gt;&gt;$k)&#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方法三：正则匹配"><a href="#方法三：正则匹配" class="headerlink" title="方法三：正则匹配"></a>方法三：正则匹配</h3><p>更加不用解释了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isLocal</span><span class="params">($ip)</span></span>&#123;        </span><br><span class="line">    <span class="keyword">return</span> preg_match(<span class="string">'%^127\.|10\.|192\.168|172\.(1[6-9]|2|3[01])%'</span>,$ip);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考：</p><ol><li><a href="http://php.net/manual/zh/function.filter-var.php" target="_blank" rel="noopener">http://php.net/manual/zh/function.filter-var.php</a></li><li><a href="https://www.51-n.com/t-4360-1-1.html" target="_blank" rel="noopener">https://www.51-n.com/t-4360-1-1.html</a></li><li><a href="https://blog.csdn.net/z_qifa/article/details/75497577" target="_blank" rel="noopener">https://blog.csdn.net/z_qifa/article/details/75497577</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;当你的服务同时开放于公网和内网，子服务却仅允许内网访问，那么则会涉及到IP白名单的功能。但是如果名单太多或者服务进行了迁移，那么维护起来会相当的麻烦，最简单的就是判断访问的来源IP是否内网IP地址，从而直接屏蔽掉公网IP。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先，我们认识了3类私有地址：&lt;/p&gt;
&lt;p&gt;A类：10.0.0.0-10.255.255.255&lt;/p&gt;
&lt;p&gt;B类：172.16.0.0-172.31.255.255&lt;/p&gt;
&lt;p&gt;C类：192.168.0.0-192.168.255.255&lt;/p&gt;
&lt;p&gt;还有一个本机地址：127.0.0.1&lt;/p&gt;
&lt;p&gt;他们就是我们平时所谓的内网IP地址。&lt;/p&gt;
&lt;h3 id=&quot;方法一：-PHP自带函数&quot;&gt;&lt;a href=&quot;#方法一：-PHP自带函数&quot; class=&quot;headerlink&quot; title=&quot;方法一： PHP自带函数&quot;&gt;&lt;/a&gt;方法一： PHP自带函数&lt;/h3&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://www.imsry.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="PHP" scheme="http://www.imsry.cn/tags/PHP/"/>
    
      <category term="Network" scheme="http://www.imsry.cn/tags/Network/"/>
    
  </entry>
  
  <entry>
    <title>更新升级MacOSX到10.14 Mojave (MacBook Air 13-inch early 2014)</title>
    <link href="http://www.imsry.cn/posts/106d7501.html"/>
    <id>http://www.imsry.cn/posts/106d7501.html</id>
    <published>2018-10-24T07:13:17.000Z</published>
    <updated>2020-05-29T08:36:07.816Z</updated>
    
    <content type="html"><![CDATA[<h3 id="写在前面的话："><a href="#写在前面的话：" class="headerlink" title="写在前面的话："></a>写在前面的话：</h3><p>如果不是真的很需要，其实最好是不去更新系统，以免带来更多的麻烦。如果新的系统对你真的很重要，我也建议你备份现有数据，然后全新安装新的系统版本。我就是那个单纯的升级系统，导致原有的软件无法正常运行的傻逼，下面虽然记录了我的问题，但我最终的解决方案还是把软件卸载后重新安装和配置。</p><blockquote><p>既然App Store推送了本次更新，我也就傻傻的更新了，谁知道会发生什么呢？</p></blockquote><a id="more"></a><p>很不开心的是，第二天上班来发现系统更新好了，直接登录！一切安好。然鹅！！！发现了好几个惊喜：</p><ol><li>svn和git命令无法执行，提示<code>xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun</code></li><li>Apache和PHP配置全部恢复成初始状态，所有已安装的扩展没了</li><li>OSSRS(Simple-RTMP-Server)无法运行了，提示:<code>illegal hardware instruction</code>，目前没找到解决方案，提了<a href="https://github.com/ossrs/srs/issues/1250" target="_blank" rel="noopener">Issue</a>看怎么说。</li></ol><p>解决第一个问题网上给了答案，安装XCode开发者工具就好了：<br><code>xcode-select --install</code></p><p>Apache和PHP的配置的恢复，主要是指httpd.conf的覆盖和php.ini的丢失，以及PHP扩展丢失，这样我就不得不重新编写配置文件和编译安装开发所需要的全部扩展了。</p><p>这里记录一下我的操作过程，因为之前更新系统也遇到这种问题，但是没有做笔记，导致现在又遇到问题时又花了很多时间去找资料。</p><h3 id="安装Memcache扩展"><a href="#安装Memcache扩展" class="headerlink" title="安装Memcache扩展"></a>安装Memcache扩展</h3><p>从Github直接clone下来：<a href="https://github.com/websupport-sk/pecl-memcache" target="_blank" rel="noopener">https://github.com/websupport-sk/pecl-memcache</a></p><p>执行<code>phpize</code>出现问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">grep: /usr/include/php/main/php.h: No such file or directory</span><br><span class="line">grep: /usr/include/php/Zend/zend_modules.h: No such file or directory</span><br><span class="line">grep: /usr/include/php/Zend/zend_extensions.h: No such file or directory</span><br><span class="line">Configuring <span class="keyword">for</span>:</span><br><span class="line">PHP Api Version:        </span><br><span class="line">Zend Module Api No:     </span><br><span class="line">Zend Extension Api No:</span><br></pre></td></tr></table></figure><p>百度出来的解决方案：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/ /usr/include</span><br></pre></td></tr></table></figure><p>好的，遇到了就算使用<code>sudo</code>还是提示权限不足的情况。 不怕，之前有经验，需要关掉系统的保护机制。操作方法就是重启电脑，按住<code>command+R</code>直到进入新界面，通过实用工具打开终端，输入<code>csrutil disable</code>关闭保护，然后<code>reboot</code>重启</p><p>重启完打开终端，傻傻的执行ln命令后发现还是不行！phpize依旧报错， 怪我有点笨，然后才去读这行命令的意思，发现MacOSX10.11.sdk这个目录不存在，只有一个MacOSX10.14.sdk的目录。很傻，根据自己的系统来嘛！</p><p>所以下面的完整命令解决<code>phpize</code>的问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/ /usr/include</span><br></pre></td></tr></table></figure><p>然后是<code>./configure</code> 接着<code>make &amp;&amp; sudo make install</code></p><p>执行完后再修改<code>/etc/php.ini</code>增加extension=memcache.so。然后重启apache:sudo apachectl -k restart</p><h3 id="安装mcrypt扩展"><a href="#安装mcrypt扩展" class="headerlink" title="安装mcrypt扩展"></a>安装mcrypt扩展</h3><p>这个我是直接去php官网下载系统当前版本的PHP源码（php-7.1.19.tar.gz），然后解压进入ext/mcrypt目录，如上所述的执行<code>phpize</code>和<code>./configure</code>以及<code>make &amp;&amp; sudo make install</code>，修改php.ini增加extension=mcrypt.so。重启apache搞定。</p><h3 id="重启打开安全策略csrutil-enable"><a href="#重启打开安全策略csrutil-enable" class="headerlink" title="重启打开安全策略csrutil enable"></a>重启打开安全策略csrutil enable</h3><p>电脑重启后发现memcache和mcrypt扩展无法加载，提示了文件签名的问题。无解！ </p><p><strong>所以，重点强调！！！ 直接舍弃系统自带的PHP和Apache吧，用brew全新安装一个，管理起来也非常的方便，系统更新后也不会导致软件丢失！</strong></p><p>不过，遇到了新的问题，brew在安装cmake的时候出现了错误，提示如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Error: You are using macOS 10.14.</span><br><span class="line">We do not provide support for this pre-release version.</span><br><span class="line">You may encounter build failures or other breakages.</span><br><span class="line">Please create pull-requests instead of filing issues.</span><br></pre></td></tr></table></figure><p>很明显，说当前系统版本时预发布版本，他们不支持，不支持！！？？</p><p>百度了，无解，无奈就去问了Google，然后说要去下载Command Line Tools (macOS 10.14) for Xcode 10，原文：<a href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/360000898980-CMake-not-compiling-after-macOS-10-14-Mojave-update" target="_blank" rel="noopener">https://intellij-support.jetbrains.com/hc/en-us/community/posts/360000898980-CMake-not-compiling-after-macOS-10-14-Mojave-update</a></p><h4 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h4><p>官宣，作为一个需要稳定开发环境的开发人员和开发机器来说，不是闲的蛋疼就别随便的更新系统了吧，一个上午就折腾这事儿去了，真是满脸的不愉快，晚上8点还在重装软件，今儿可是1024啊，过节啊！！</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;写在前面的话：&quot;&gt;&lt;a href=&quot;#写在前面的话：&quot; class=&quot;headerlink&quot; title=&quot;写在前面的话：&quot;&gt;&lt;/a&gt;写在前面的话：&lt;/h3&gt;&lt;p&gt;如果不是真的很需要，其实最好是不去更新系统，以免带来更多的麻烦。如果新的系统对你真的很重要，我也建议你备份现有数据，然后全新安装新的系统版本。我就是那个单纯的升级系统，导致原有的软件无法正常运行的傻逼，下面虽然记录了我的问题，但我最终的解决方案还是把软件卸载后重新安装和配置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;既然App Store推送了本次更新，我也就傻傻的更新了，谁知道会发生什么呢？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://www.imsry.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="MacOS" scheme="http://www.imsry.cn/tags/MacOS/"/>
    
  </entry>
  
</feed>
