[{"title":"线性插值算法之一维数组矩阵","date":"2020-01-08T08:56:19.000Z","path":"posts/babba23d.html","text":"此篇文章用于记录工作中所需的数据插值算法：线性插值（以两个相邻数据的均值作为中间值插入两数之间） 惊喜预览图： 原始数据：一次插值数据：二次插值数据： 现有数据是一个8x8的温度矩阵(值为真实温度的100倍)，存放在一个长度为64的一维数组中，测试数据如下： 12275,2250,2350,2350,2325,2350,2325,2400,2325,2275,2350,2350,2350,2350,2325,2350,2275,2300,2325,2350,2325,2300,2350,2325,2200,2275,2250,2275,2325,2275,2300,2275,2250,2250,2225,2250,2275,2325,2325,2350,2200,2250,2275,2250,2300,2275,2300,2325,2200,2250,2200,2250,2375,2325,2250,2250,2100,2125,2225,2300,2450,2325,2200,2225 问题分析将8x8的矩阵利用插值算法转化成15x15（8个数据中插入7个虚拟值）矩阵根本思路： 将8x8的数据进行横向插值为一个15x8的数组； 将15x8的数字进行纵向插值为一个15x15的数组； 转化公式的分析： 先将问题简化，分析一个4x4的矩阵： 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 横向插值后的数据位置变化： 0 x 1 x 2 x 3 4 x 5 x 6 x 7 8 x 9 x 10 x 11 12 x 13 x 14 x 15 分析一：位置：0=&gt;0，1=&gt;2，2=&gt;4，3=&gt;6，4=&gt;7，5=&gt;9，6=&gt;11，7=&gt;13，8=&gt;14…… 由此推断原始数据的新位置，设原每行长度为w，原位置为i，则新每行长度为2w-1，新位置为n=i*2-i/w。 那么当i满足条件：i不为第一列数据（即i%w不为0）时，可计算前一个插值数据。 设插值为x，上述表格数据存放a数组，则x的数据位为k-1，根据插值算法，则值x=a[k-1]=(a[k-2]+a[k])/2。 现在问题变为分析一个7*4的矩阵： 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 纵向插值后的数据位置变化： 0 1 2 3 4 5 6 x x x x x x x 7 8 9 10 11 12 13 x x x x x x x 14 15 16 17 18 19 20 x x x x x x x 21 22 23 24 25 26 27 分析二：第一行位置0-6不变，从第二行的7开始：7=&gt;14，8=&gt;15……，从第三行的14开始：14=&gt;21，15=&gt;22…… 以此类推 由此推断原始数据的新位置：设原位置为i，则新位置为：i*2-i%w。 那么当满足条件：从原始数据的第二行开始（即i&gt;=w）时，可计算当前位置上一行的插值数据。 设插值为x，上述表格存放在a数组中，则x的数据位为k-w，根据插值算法，则值x=a[k-w]=(a[k-2w]+a[k])/2。 由此经过两步的演算，得出了一个7x7的长度为49的数组。 代码示例：JavaScript版本 12345678910111213141516171819202122232425262728function Linear(old, width)&#123; let data = []; //横向插值 for(let i in old)&#123; i = parseInt(i); let v = old[i]; let k = i*2-parseInt(i/width); data[k] = v; if(i%width != 0)&#123; data[k-1] = (parseInt(data[k-2])+parseInt(data[k]))/2; &#125; &#125; let data2 = data; data = []; width = width*2-1; //纵向插值 for(let i in data2)&#123; i = parseInt(i); let v = data2[i]; let k = i*2-i%width; data[k] = v; if(k&gt;=width)&#123; data[k-width] = (parseInt(data[k])+parseInt(data[k-width*2]))/2; &#125; &#125; return data;&#125; 用HTML渲染数据并上色结果： 原始数据 一次插值数据 二次差值数据 Demo代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;Demo&lt;/title&gt; &lt;style type=\"text/css\"&gt; span &#123;margin: 0px; display:inline-block; text-align:center;color: #ccc&#125; .canvascfg .num &#123;width: 20px;&#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"data\" style=\"width: 100%;height: 100%;line-height: 20px\"&gt;&lt;/div&gt; &lt;script src=\"https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\"&gt; let originalData = [2275,2250,2350,2350,2325,2350,2325,2400,2325,2275,2350,2350,2350,2350,2325,2350,2275,2300,2325,2350,2325,2300,2350,2325,2200,2275,2250,2275,2325,2275,2300,2275,2250,2250,2225,2250,2275,2325,2325,2350,2200,2250,2275,2250,2300,2275,2300,2325,2200,2250,2200,2250,2375,2325,2250,2250,2100,2125,2225,2300,2450,2325,2200,2225]; let Color = &#123; Blue:[0,0,255], Yellow:[255,255,0], Red:[255,0,0] &#125;; let Config = &#123; canvasWidth:8, canvasHeight:8, xValue:2, //线性插值次数为xVlaue-1 &#125;; Draw(originalData); function Linear(old, width)&#123; let data = []; //横向插值 for(let i in old)&#123; i = parseInt(i); let v = old[i]; let k = i*2-parseInt(i/width); data[k] = v; if(i%width != 0)&#123; data[k-1] = (parseInt(data[k-2])+parseInt(data[k]))/2; &#125; &#125; let data2 = data; data = []; width = width*2-1; //纵向插值 for(let i in data2)&#123; i = parseInt(i); let v = data2[i]; let k = i*2-i%width; data[k] = v; if(k&gt;=width)&#123; data[k-width] = (parseInt(data[k])+parseInt(data[k-width*2]))/2; &#125; &#125; return data; &#125; function ComputeColor(from,to,ratio)&#123; var r = Math.round(from[0]*(1-ratio)+to[0]*ratio); var g = Math.round(from[1]*(1-ratio)+to[1]*ratio); var b = Math.round(from[2]*(1-ratio)+to[2]*ratio); return [r,g,b]; &#125; function GetColor(num, max, min)&#123; var ratio = (num - min) / (max - min); var color = ComputeColor(Color.Blue, Color.Red, ratio); return color; &#125; function Draw(tmp)&#123; let canvasHeight = Config.canvasHeight; let canvasWidth = Config.canvasWidth; for(let i = 1;i&lt;Config.xValue;i++)&#123; tmp = Linear(tmp, (canvasWidth-1)*Math.pow(2,i-1)+1); &#125; if(Config.xValue &gt; 1)&#123; canvasHeight = (Config.canvasHeight-1)*Math.pow(2,Config.xValue-1)+1; canvasWidth = (Config.canvasWidth-1)*Math.pow(2,Config.xValue-1)+1; &#125; low = high = tmp[0]; for (var i = tmp.length - 1; i &gt;= 0; i--) &#123; if( tmp[i] &gt; high ) high = tmp[i]; if( tmp[i] &lt; low ) low = tmp[i]; &#125; let index = 2; let span = ''; for(var i = 1; i &lt;=canvasHeight; i++,index++)&#123; for(var j = 1; j &lt;= canvasWidth; j++)&#123; // var idx = (i)*canvasWidth-j; // var idx = (i-1)*canvasWidth+j-1; var idx = canvasWidth*(canvasHeight-i+1)-j; var color = GetColor(tmp[idx], high, low); span += GetSpan(color,tmp[idx]); &#125; span += '&lt;br&gt;'; &#125; $(\"#data\").html(span); &#125; function GetSpan(color,num)&#123; var span = '&lt;span style=\"width:50px;height:50px;background-color:rgb('+color[0]+','+color[1]+','+color[2]+')\"&gt;'+(num/100)+'&lt;/span&gt;'; return span; $(\"#wind\").append(span); &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","tags":[{"name":"算法","slug":"算法","permalink":"http://www.imsry.cn/tags/算法/"}]},{"title":"Linux配置网卡（静态）IP地址","date":"2019-09-23T07:00:08.000Z","path":"posts/15ab52a4.html","text":"上一篇记录了在OrangePi-Zero连接WIFI的过程，今天试着给自带默认网卡配置一下静态IP地址，以方便在整个局域网内能够访问设备。 首先还是得通过ssh等方式登录Server，然后查看网卡的名称。执行ifconfig命令，找到eth开头的网卡，我这里是eth0。 再者使用vim编辑文件/etc/network/interfaces，增加新行如下： 12345678auto eht0#iface eth0 inet dhcp #此处为DHCP自动获取IP，注释掉了哟iface eth0 inet static #声明接口为静态的address 172.16.105.134 #IP地址network 172.16.105.0 #网段netmask 255.255.255.0 #子网掩码broadcast 172.16.105.255 #广播地址gateway 172.16.105.254 #网关IP 保存！ 然后重启网卡，这里我使用ifconfig eth0 down和ifconfig eth0 up达到关闭和重新打开的效果。 最后执行ifconfig eth0查看IP是否正确配置，并且可以在局域网内ping通该地址和ssh到Server。 本篇仅为给自己的小记录，供大家参考！","tags":[{"name":"Linux","slug":"Linux","permalink":"http://www.imsry.cn/tags/Linux/"},{"name":"OrangePi","slug":"OrangePi","permalink":"http://www.imsry.cn/tags/OrangePi/"},{"name":"Network","slug":"Network","permalink":"http://www.imsry.cn/tags/Network/"},{"name":"网卡","slug":"网卡","permalink":"http://www.imsry.cn/tags/网卡/"},{"name":"IP","slug":"IP","permalink":"http://www.imsry.cn/tags/IP/"}]},{"title":"OrangePi Zero 简单连接WIFI的方法","date":"2019-09-12T06:02:31.000Z","path":"posts/ba6472f.html","text":"有幸拿到可爱的小玩意儿“OrangePi_Zero”，也烧写了多个系统去体验，其中可以直接刷写OpenWrt，然后通过web管理界面启用WIFI功能。不过我需要的不是路由器，我需要的是能够连接WIFI的小型Server。 首先通过ssh等方式登录server，然后查看无线网卡的名称。这里使用iwconfig命令，如果无线网卡正常安装且驱动正常的话，你能够看到一个以wlan开头+数字的的网卡，记住这个名字（我这里是wlan5)。 再者使用vim编辑文件/etc/network/interfaces，内容如下： 12345678# interfaces(5) file used by ifup(8) and ifdown(8)# Include files from /etc/network/interfaces.d:source-directory /etc/network/interfaces.dauto wlan5allow-hotplug wlan5iface wlan5 inet dhcpwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf 保存然后创建上面配置的wpa-conf文件/etc/wpa_supplicant/wpa_supplicant.conf，内容如下： 12345678910ctrl_interface=/var/run/wpa_supplicantupdate_config=1network=&#123;ssid=\"需要连接的SSID名称\"psk=\"WIFI密码\"proto=RSNkey_mgmt=WPA-PSKpairwise=CCMPauth_alg=OPEN&#125; 保存！ 然后执行ifdown wlan5关闭并执行ifup wlan5重启网卡，正常的话应该能看到网卡连接WIFI并寻找DHCP服务器来请求IP地址。 如果ifdown或ifup报错，试一下sudo killall wpa_supplicant，然后继续尝试。 最后如果失败了怎么办？reboot重启一下机器，它会自动连接WIFI的。 本篇仅为给自己的一个小记录，仅供参考","tags":[{"name":"OrangePi","slug":"OrangePi","permalink":"http://www.imsry.cn/tags/OrangePi/"},{"name":"Network","slug":"Network","permalink":"http://www.imsry.cn/tags/Network/"}]},{"title":"利用Dockerfile创建PHP7.3环境镜像","date":"2019-07-04T02:39:55.000Z","path":"posts/a05a90fb.html","text":"关于Docker以及DockerfileDocker容器就不详细介绍了，把它理解成类似“虚拟机”的一种介质吧。至于如何创建一个镜像，主要有两种方法：1. 从现有的镜像基础上，创建容器并自定义后Commit成镜像；2. 利用Dockerfile，根据自己的需要，如同写shell脚本一般，将自己需要搭建的容器环境所需的指令一条一条的汇集成指令集，然后让Docker根据Dockerfile来自动创建你想要的镜像 创建自己的PHP7.3镜像下载PHP源码：https://www.php.net/downloads.php 我这里下载了php-7.3.6.tar.bz2 Dockerfile内容12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849# 指定基于ubuntu:16.04创建FROM ubuntu:16.04# 声明作者MAINTAINER haowanxing &lt;haowanxing@gmail.com&gt;# 定义环境变量，设置时区时使用ENV TIME_ZONE Asia/Shanghai# 修改root账号密码RUN /bin/echo 'root:0x4f5da2.cn' | chpasswd# 新增一个prod账号，并设置密码RUN useradd prodRUN /bin/echo 'prod:123456' | chpasswd# 安装编译依赖RUN apt-get updateRUN apt-get install -y gcc make openssl libssl-dev curl libbz2-dev libxml2-dev libjpeg-dev libpng-dev libfreetype6-dev libzip-devRUN apt-get install -y libcurl4-gnutls-devRUN ln -s /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib# 拷贝源码到环境中ADD php-7.3.6.tar.bz2 /tmp/# 编译和安装RUN cd /tmp/php-7.3.6 &amp;&amp; \\ ./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc --enable-fpm --with-fpm-user=prod --with-fpm-group=prod --with-mysqli --with-pdo-mysql --with-iconv-dir --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir=/usr --enable-xml --disable-rpath --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curl --enable-mbregex --enable-mbstring --enable-ftp --with-gd --with-openssl --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap --without-pear --with-gettext --disable-fileinfo --enable-maintainer-zts &amp;&amp; \\ make &amp;&amp; \\ make install# 后续配置RUN cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf &amp;&amp; \\ sed -i 's/127.0.0.1/0.0.0.0/g' /usr/local/php/etc/php-fpm.conf &amp;&amp; \\ sed -i \"21a daemonize=no\" /usr/local/php/etc/php-fpm.conf &amp;&amp; \\ echo \"$&#123;TIME_ZONE&#125;\" &gt; /etc/timezone &amp;&amp; \\ ln -sf /usr/share/zoneinfo/$&#123;TIME_ZONE&#125; /etc/localtime# 清理无用缓存RUN rm -rf /tmp/php-* &amp;&amp; apt-get clean# 拷贝已定义好的配置文件到环境中COPY php.ini /usr/local/php/etc/# 设置默认工作目录WORKDIR /usr/local/php/# 声明端口EXPOSE 22EXPOSE 9000# 容器启动时的执行指令CMD [\"./sbin/php-fpm\",\"-c\",\"/usr/local/php/etc/php.ini\",\"-y\",\"/usr/local/php/etc/php-fpm.conf\"] 一切都准备好了以后，打开shell终端，cd到Dockerfile目录，目录结构如下: 12345~/DockerSpace/phpserver/php » tree ./ anthony@Anthony-Macbook-Air./├── Dockerfile├── php-7.3.6.tar.bz2└── php.ini 将源码和Dockerfile放在同一目录，此目录中还有一个php.ini，放置此文件是方便在创建镜像的时候直接将PHP的配置文件替换进去，这样就省去后期手动修改配置的麻烦了。 使用build指令进行构建镜像：docker build -t haowanxing/php:7.3.6 . 解释： -t #定义构建的镜像名称 后面跟了一个.表示Dockerfile文件在当前目录 build指令执行完成之后，你会看到类似这样的输出： 123456789101112... ---&gt; c4838c0eca4aStep 18/19 : EXPOSE 9000 ---&gt; Running in 447e0dfb161aRemoving intermediate container 447e0dfb161a ---&gt; 25c6980f2084Step 19/19 : CMD [&quot;./sbin/php-fpm&quot;,&quot;-c&quot;,&quot;/usr/local/php/etc/php-fpm.conf&quot;] ---&gt; Running in d00d6a4b2a2aRemoving intermediate container d00d6a4b2a2a ---&gt; e146bd75c478Successfully built e146bd75c478Successfully tagged haowanxing/php:7.3.6 说明构建成功，你可以使用docker run来创建并启动容器了。 否则会输出具体的错误信息和发生错误的具体指令。 创建容器并检查容器环境是否正常1234567891011~/DockerSpace/phpserver/php » docker run -itd --name myphp haowanxing/php:7.3.6 anthony@Anthony-Macbook-Aira612173bd9e715a838b29ef0d7e94ddbcac3f42232668b1e43e1e090c8633e9f------------------------------------------------------------~/DockerSpace/phpserver/php » docker exec -it myphp /bin/bash anthony@Anthony-Macbook-Airroot@a612173bd9e7:/usr/local/php# ps auxUSER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMANDroot 1 1.3 0.8 170396 18408 pts/0 Ss+ 05:09 0:00 php-fpm: master process (/usr/local/php/etc/php-fpm.conf)prod 7 0.0 0.3 170396 6784 pts/0 S+ 05:09 0:00 php-fpm: pool wwwprod 8 0.0 0.3 170396 6784 pts/0 S+ 05:09 0:00 php-fpm: pool wwwroot 9 1.6 0.1 18236 3192 pts/1 Ss 05:09 0:00 /bin/bashroot 19 0.0 0.1 34420 2812 pts/1 R+ 05:09 0:00 ps aux 这里备注一下我遇到的错误以及我是如何解决的OpenSSL’s libraries错误1configure: error: Cannot find OpenSSL’s libraries 命名安装了openssl和libssl-dev，但还是报错，于是如下重新链接libssl.so到lib下，RUN ln -s /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib。 至于这个libssl.so在哪儿？ 我是通过find /usr/lib -name libssl.so找到的。 libcurl错误12configure: error: Please reinstall the libcurl distribution - easy.h should be in &lt;curl-dir&gt;/include/curl/ 检查并多次尝试之后，通过apt-get install -y libcurl4-gnutls-dev来解决；","tags":[{"name":"PHP","slug":"PHP","permalink":"http://www.imsry.cn/tags/PHP/"},{"name":"Docker","slug":"Docker","permalink":"http://www.imsry.cn/tags/Docker/"}]},{"title":"引用符号'&'在foreach循环中的惊喜","date":"2019-06-21T06:51:27.000Z","path":"posts/5f047c20.html","text":"工作中总会遇到一些奇奇怪怪的由前人所写下的不可置疑的代码，如果你仅仅跟着眼前所见的代码去理解他人的思路，Well You have fell into a terrible situation. 贴一段示例代码： 12345678910111213141516171819202122232425262728&lt;?php$students = [ ['name'=&gt;'Jackson','age'=&gt;15], ['name'=&gt;'Jerry','age'=&gt;14], ['name'=&gt;'Amy','age'=&gt;14]];$classes = [ 'CL001'=&gt;['name'=&gt;'Language','classTime'=&gt;30], 'CL002'=&gt;['name'=&gt;'PE','classTime'=&gt;13]];/* * 循环$students,为其添加一个属性'name-age' * 这里使用了&amp;$v以获得数组内部元素的引用，使的可以在循环体内修改元素内容 */foreach ($students as $k=&gt;&amp;$v)&#123; $v['name-age'] = $v['name'] . '-' .$v['age'];&#125;$classString = ''; //定义一个空串/* * 循环$classes,将所有课程ID和名称联结成串 */foreach ($classes as $k=&gt;$v)&#123; $classString .= 'ClassID:'.$k.'-'.$v['name'].PHP_EOL;&#125;echo $classString;var_dump($students); //Think here! 你也许会回答这样一个输出结果： 12345678910111213141516171819202122232425262728293031ClassID:CL001-LanguageClassID:CL002-PEarray(3) &#123; [0]=&gt; array(3) &#123; [&quot;name&quot;]=&gt; string(7) &quot;Jackson&quot; [&quot;age&quot;]=&gt; int(15) [&quot;name-age&quot;]=&gt; string(10) &quot;Jackson-15&quot; &#125; [1]=&gt; array(3) &#123; [&quot;name&quot;]=&gt; string(5) &quot;Jerry&quot; [&quot;age&quot;]=&gt; int(14) [&quot;name-age&quot;]=&gt; string(8) &quot;Jerry-14&quot; &#125; [2]=&gt; array(3) &#123; [&quot;name&quot;]=&gt; string(3) &quot;Amy&quot; [&quot;age&quot;]=&gt; int(14) [&quot;name-age&quot;]=&gt; string(6) &quot;Amy-14&quot; &#125;&#125; 也许会有不少人会使用foreach+引用符号’&amp;’来遍历更新数组内容，这样也的确可行。但是！这里就惊现了这样一个巨坑，为何在循环$classes之后，$students变得面目全非？来看看实际输出结果： 1234567891011121314151617181920212223242526272829ClassID:CL001-LanguageClassID:CL002-PEarray(3) &#123; [0]=&gt; array(3) &#123; [&quot;name&quot;]=&gt; string(7) &quot;Jackson&quot; [&quot;age&quot;]=&gt; int(15) [&quot;name-age&quot;]=&gt; string(10) &quot;Jackson-15&quot; &#125; [1]=&gt; array(3) &#123; [&quot;name&quot;]=&gt; string(5) &quot;Jerry&quot; [&quot;age&quot;]=&gt; int(14) [&quot;name-age&quot;]=&gt; string(8) &quot;Jerry-14&quot; &#125; [2]=&gt; &amp;array(2) &#123; [&quot;name&quot;]=&gt; string(2) &quot;PE&quot; [&quot;classTime&quot;]=&gt; int(13) &#125;&#125; 发现了吧，最后一项为什么是$classes的元素？而且是其最后一项？聪明的你现在应该在开始思考’&amp;’符号了！ 两次foreach循环我们都用了$k和$v来代替键和值，但在&amp;符号作用在$v上的时候，这个$v实际是每次循环的元素地址。而在第二个foreach中使用的$v实际上已经是一个存在的引用（指向上一个数组的最后一次访问的元素），在对他进行赋值修改时，就会导致与其实际指向的数据发生修改，因为他们就是逻辑上的“相同内存”。 我所举例的代码比较容易发现问题，其实我实际遇到的问题却糟糕的多，因为第二次循环是为了给第一次循环的内容进行填补，所以元素结构是一模一样的，这样出现的现象就是同一个元素在数组中出现了两次，其中原数组的最后一个元素指向第二次循环的数组的最后一个。 这里举例的是当&amp;符号用在=&gt;后面的值变量，如果用在=&gt;前面的键变量呢？？？ 实在可怕！ 还好我喜欢用array_walk来代替此类做法。","tags":[{"name":"PHP","slug":"PHP","permalink":"http://www.imsry.cn/tags/PHP/"}]},{"title":"(抄)算法时间复杂度的表达-渐进符号与主定理","date":"2019-05-22T01:09:37.000Z","path":"posts/722b27c3.html","text":"渐进符号是分析算法时间复杂度的常用记号，对于某个规模为n的问题，当n足够大时，就可以忽略掉复杂度表达式中的低阶项和最高次项的系数，由此引出“渐进复杂度”，并且用渐进符号来对“渐进复杂度”进行表达。 一、渐进符号1、O(大O符号）：上界定义：若存在两个正的常数 c 和 n0 , 对于任意 n≥n0 , 都有 T( n)≤cf( n) ,则称T( n) = O( f( n) )(或称算法在 O( f( n))中)。 大 O 符号用来描述增长率的上限,表示 T( n)的增长最多像 f( n)增长的那样快,也就是说, 当输入规模为 n时, 算法消耗时间的最大值,这个上限的阶越低, 结果就越有价值。上界是对算法效率的一种承诺。 大O符号的含义如下图所示： 2、Ω（大Ω符号）：下界定义：若存在两个正的常数 c和 n0 ,对于任意 n≥ n0 , 都有 T( n)≥cg( n) ,则称T( n) = Ω( g( n) )(或称算法在 Ω( g( n) )中)。 大 Ω符号用来描述增长率的下限, 也就是说, 当输入规模为 n 时,算法消耗时间的最小值。与大 O 符号对称, 这个下限的阶越高,结果就越有价值。 大Ω号的含义如下图所示： 大 Ω符号常用来分析某个问题或某类算法的时间下界。例如, 矩阵乘法问题的时间下界为 Ω( n^2) , 是指任何两个 n×n 矩阵相乘的算法的时间复杂性不会小于 n^2, 基于比较的排序算法的时间下界为 Ω( nlog 2 n) ,是指无法设计出基于比较的排序算法, 其时间复杂性小于 nlog 2 n。 大 Ω符号常常与大 O 符号配合以证明某问题的一个特定算法是该问题的最优算法,或是该问题中的某算法类中的最优算法。 3、Θ(theta) ：紧确界定义：若存在 3 个正的常数 c1 、 c2 和 n0 ,对于任意 n≥ n0 , 都有 c1f(n)≥ T(n)≥ c2f(n) , 则称 T( n) = Θ( f(n))。Θ符号意味着 T( n)与 f( n)同阶, 用来表示算法的精确阶。 Θ符号的含义如下图所示。 二、主定理主定理主要用于对一些递归算法进行复杂性分析，这类算法的特征是：其复杂性表达式是以递推关系式表达的。主定理并不适用于所有类型的递推关系式。 假设有递推关系式： 其中 n为问题规模， a为递推的子问题数量， n/b 为每个子问题的规模（假设每个子问题的规模基本一样）， f(n)为递推以外进行的计算工作。a≥1，b&gt;1为常数，f(n) 为函数，T(n) 为非负整数。则有以下结果： (1)若：那么： (2)若：，那么： (3)若：，且对于某个常数c&lt;1, 和所有充分大的 n有:，那么 下面举几个例子来说明主定理的应用过程： 1、设某个算法的复杂性的递推关系式为：T(n)=4T(n/2)+n对比主定理中递推关系式的标准形式：a=4,b=2,f(n)=n所以n^(logba)=n^2,取 0&lt;ε&lt;1即可满足第一种情况，所以T(n)=Θ(n^2) 2、归并排序是一种很适合用递归实现的排序方法，其复杂性递推关系式为：T(n)=2T(n/2)+Θ(n)满足主定理的第二种情况，所以其时间复杂度为：T(n)=nlogn 3、设某个算法的复杂性的递推关系式为：T(n)=4T(n/2)+n^3很显然，满足主定理第三种情况，只需要取1/2≤c&lt;1即可。T(n)=n^3 作者：古月慕南 来源：CSDN 原文：https://blog.csdn.net/u013468917/article/details/70229365","tags":[{"name":"算法","slug":"算法","permalink":"http://www.imsry.cn/tags/算法/"},{"name":"时间复杂度","slug":"时间复杂度","permalink":"http://www.imsry.cn/tags/时间复杂度/"},{"name":"定理","slug":"定理","permalink":"http://www.imsry.cn/tags/定理/"}]},{"title":"软考选择题-索引文件地址项","date":"2019-05-15T07:05:47.000Z","path":"posts/9b10448.html","text":"【选择题】 设文件索引节点中有8个地址项，每个地址项大小为4字节，其中5个地址项为直接地址索引，2个地址项是一级间接地址索引，1个地址项是二级间接地址索引，磁盘索引块和磁盘数据块大小为1KB。若要访问文件的逻辑块号分别为5和518，则系统应分别采用____；而且可表示的单个文件最大长度是____KB。 第一空选项： 直接地址索引和一级间接地址索引 直接地址索引和二级间接地址索引 一级间接地址索引和二级间接地址索引 一级间接地址索引和一级间接地址索引 第二空选项： 517 1029 16513 66053 解答： 由题所知，索引快大小1KB，每个地址项4Byte，则每个索引块包含地址项为1KB/4Byte=256个。 直接地址索引实际拥有5*1个块，块号0~4 一级间接地址索引实际拥有2*256个块，块号5~260,261~516 二级间接地址索引实际拥有1*256*256个块，块号517~66052 逻辑块号为5的在一级间接地址索引，逻辑块号为518的在二级间接地址索引。 如上计算，文件索引节点中可以有66053个索引块，即最大文件长度为66053*1KB","tags":[{"name":"软考","slug":"软考","permalink":"http://www.imsry.cn/tags/软考/"},{"name":"索引文件","slug":"索引文件","permalink":"http://www.imsry.cn/tags/索引文件/"}]},{"title":"免费获得SSL证书-Let's Encrypt","date":"2019-04-22T10:18:33.000Z","path":"posts/7e214f75.html","text":"使用工具：CertBot https://certbot.eff.org Github地址：https://github.com/certbot/certbot 第一步，安装certbotMacOS版本： 1brew install certbot Ubuntu版本： 123456sudo apt-get updatesudo apt-get install software-properties-commonsudo add-apt-repository universesudo add-apt-repository ppa:certbot/certbotsudo apt-get updatesudo apt-get install certbot python-certbot-nginx 第二步，运行certbottype-1.仅仅制作证书1sudo certbot --nginx certonly type-2.和nginx并用，一键部署1sudo certbot --nginx 根据提示，一步一步进行：（如果是Apache，则将nginx替换成apache即可） 1sudo certbot --nginx certonly 输入邮箱地址 12Enter email address (used for urgent renewal and security notices) (Enter 'c' tocancel): smoothest@yeah.net 同意服务条款 12...(A)gree/(C)ancel: A 接受Email通知推送 12...(Y)es/(N)o: Y 输入域名或者Nginx已存在的Server配置编号（我这里nignx没配置过，所以不显示有编号的列表） 12No names were found in your configuration files. Please enter in your domainname(s) (comma and/or space separated) (Enter 'c' to cancel): vpc.0x4f5da2.cn 证书制作完毕！ 证书位置：/etc/letsencrypt/live/vpc.0x4f5da2.cn/fullchain.pem 私钥位置：/etc/letsencrypt/live/vpc.0x4f5da2.cn/privkey.pem 我的执行Log: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849ubuntu@VM-0-14-ubuntu:~$ sudo certbot --nginx certonlySaving debug log to /var/log/letsencrypt/letsencrypt.logPlugins selected: Authenticator nginx, Installer nginxEnter email address (used for urgent renewal and security notices) (Enter &apos;c&apos; tocancel): smoothest@yeah.netStarting new HTTPS connection (1): acme-v02.api.letsencrypt.org- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Please read the Terms of Service athttps://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf. You mustagree in order to register with the ACME server athttps://acme-v02.api.letsencrypt.org/directory- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -(A)gree/(C)ancel: A- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Would you be willing to share your email address with the Electronic FrontierFoundation, a founding partner of the Let&apos;s Encrypt project and the non-profitorganization that develops Certbot? We&apos;d like to send you email about our workencrypting the web, EFF news, campaigns, and ways to support digital freedom.- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -(Y)es/(N)o: NNo names were found in your configuration files. Please enter in your domainname(s) (comma and/or space separated) (Enter &apos;c&apos; to cancel): vpc.0x4f5da2.cnObtaining a new certificatePerforming the following challenges:http-01 challenge for vpc.0x4f5da2.cnWaiting for verification...Cleaning up challengesResetting dropped connection: acme-v02.api.letsencrypt.orgIMPORTANT NOTES: - Congratulations! Your certificate and chain have been saved at: /etc/letsencrypt/live/vpc.0x4f5da2.cn/fullchain.pem Your key file has been saved at: /etc/letsencrypt/live/vpc.0x4f5da2.cn/privkey.pem Your cert will expire on 2019-07-21. To obtain a new or tweaked version of this certificate in the future, simply run certbot again. To non-interactively renew *all* of your certificates, run &quot;certbot renew&quot; - Your account credentials have been saved in your Certbot configuration directory at /etc/letsencrypt. You should make a secure backup of this folder now. This configuration directory will also contain certificates and private keys obtained by Certbot so making regular backups of this folder is ideal. - If you like Certbot, please consider supporting our work by: Donating to ISRG / Let&apos;s Encrypt: https://letsencrypt.org/donate Donating to EFF: https://eff.org/donate-le 第三步，续期（证书过期前需执行）Let’s Encrypt提供的证书默认只有90天有效期，所以咱们必须在过期之前重新对证书进行续期。 对证书续期也十分的便利，直接再执行一下之前的命令，它会检测到并提示你进行相关操作。 以下是我的测试Log：（因为刚生成证书，我选择了第一项：重新安装证书。第二项是续期！）","tags":[{"name":"ssl","slug":"ssl","permalink":"http://www.imsry.cn/tags/ssl/"},{"name":"https","slug":"https","permalink":"http://www.imsry.cn/tags/https/"},{"name":"free ssl cert","slug":"free-ssl-cert","permalink":"http://www.imsry.cn/tags/free-ssl-cert/"}]},{"title":"PHP加解密算法使用openssl替换mcrypt扩展","date":"2019-02-20T10:02:20.000Z","path":"posts/5c3bf0b6.html","text":"PHP版本从7.2开始不再支持mcrypt扩展，所以我们需要使用OpenSSl对其进行替换。本文仅列出部分算法的替换示例，所以不在本文出现的算法或模式需要自行尝试，顺水推舟。 本文替换案例： MCRYPT_RIJNDAEL_128 | MCRYPT_MODE_ECB =&gt; AES-128-ECB MCRYPT_DES | MCRYPT_MODE_CBC =&gt; DES-CBC MCRYPT_RIJNDAEL_128 | MCRYPT_MODE_CBC =&gt; AES-128-CBC MCRYPT_XTEA | MCRYPT_MODE_CBC 在使用 MCRYPT_RIJNDAEL_128 的地方，如果秘钥长度分别为16、24、32，则加密算法用 AES-128-ECB、AES-192-ECB、AES-256-ECB，BlockSize为16、24、32。 首先列出需要用到的数据填充方法： 1234567891011121314151617181920212223function ZeroPadding($str, $block = 16) &#123; $pad = $block - (strlen($str) % $block); if($pad == $block) return $str; return $str.str_repeat(chr(0),$pad);&#125;function ZeroUnPadding($str) &#123; return rtrim($str, \"\\0\");&#125; function PKCS7Padding($str, $block_size) &#123; $padding_char = $block_size - (strlen($str) % $block_size); $padding_str = str_repeat(chr($padding_char),$padding_char); return $str.$padding_str;&#125;function PKCS7UnPadding($str) &#123; $char=substr($str,-1,1); $num=ord($char); if($num&gt;0 &amp;&amp; $num &lt;= strlen($str)) &#123; $str = substr($str, 0, -1 * $num); &#125; return $str;&#125; 算法MCRYPT_RIJNDAEL_128 | MCRYPT_MODE_ECB 对应 AES-128-ECB123456789101112131415161718192021//使用mcrypt加密$data = '1234567890123456';$key = md5('1230456789', true);$encrypted = mcrypt_encrypt(MCRYPT_RIJNDAEL_128, $key, $data, MCRYPT_MODE_ECB);$edata = base64_encode($encrypted);return $edata;//使用OpenSSL加密$data = '1234567890123456';$key = md5('1230456789', true); $encrypted = openssl_encrypt(ZeroPadding($data, 16), 'AES-128-ECB', $key, OPENSSL_RAW_DATA | OPENSSL_ZERO_PADDING);$edata = base64_encode($encrypted);return $edata;//使用OpenSSL解密$key = md5('1230456789', true);$data = openssl_decrypt(base64_decode($edata), 'AES-128-ECB', $key, OPENSSL_RAW_DATA | OPENSSL_ZERO_PADDING);$data = ZeroUnPadding($data);return $data; 算法MCRYPT_DES | MCRYPT_MODE_CBC 对应 DES-CBC1234567891011121314151617181920212223//使用mcrypt加密$data = '1234567890123456';$key = md5('1230456789', true);$encrypted = mcrypt_encrypt(MCRYPT_DES, $key, $data, MCRYPT_MODE_CBC, $iv);$edata = base64_encode($encrypted);return $edata;//使用OpenSSL加密：$data = '1234567890123456';$key = 'abcd1234';$iv = 'mds2345&amp;'; $encrypted = openssl_encrypt(ZeroPadding($data, 8), 'DES-CBC', $key, OPENSSL_RAW_DATA | OPENSSL_ZERO_PADDING, $iv);$edata = base64_encode($encrypted);return $edata;//使用OpenSSL解密：$key = 'abcd1234';$iv = 'mds2345&amp;'; $data = openssl_decrypt(base64_decode($edata), 'DES-CBC', $key, OPENSSL_RAW_DATA | OPENSSL_ZERO_PADDING, $iv);$data = ZeroUnPadding($data);return $data; 算法MCRYPT_RIJNDAEL_128 | MCRYPT_MODE_CBC 对应 AES-128-CBC1234567891011121314151617181920212223242526272829303132333435363738//使用mcrypt加密：$data = '1234567890123456';$key = md5('1230456789', true);$size = mcrypt_get_iv_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC);$iv = mcrypt_create_iv($size, MCRYPT_DEV_RANDOM); //生成随机向量//对内容进行PKCS7填充$block_size = mcrypt_get_block_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC);$padding_char = $block_size - (count($str) % $block_size);$padding_str = '';if($padding_char&lt;=$block_size) &#123; $padding_str = str_repeat(chr($padding_char),$padding_char);&#125;$str = $str.$padding_str; $encrypted = mcrypt_encrypt(MCRYPT_RIJNDAEL_128, $key, $str, MCRYPT_MODE_CBC, $iv);$edata = base64_encode($encrypted);return $edata;//使用OpenSSL加密：$data = '1234567890123456';$key = md5('1230456789', true); $ivlen = openssl_cipher_iv_length('AES-128-CBC');$iv = openssl_random_pseudo_bytes($ivlen);$str = PKCS7Padding($data, 16); $encrypted = openssl_encrypt($str, 'AES-128-CBC', $key, OPENSSL_RAW_DATA | OPENSSL_ZERO_PADDING, $iv);$edata = base64_encode($encrypted);return $edata;//使用OpenSSL解密：$key = md5('1230456789', true);//$iv用加密时生成的同一个iv$data = openssl_decrypt(base64_decode($edata), 'AES-128-CBC', $key, OPENSSL_RAW_DATA | OPENSSL_ZERO_PADDING, $iv);$data = PKCS7UnPadding($data);return $data; 算法MCRYPT_XTEA | MCRYPT_MODE_CBC 需要使用第三方类的修改版本lt;?php// Origin: https://github.com/jungepiraten/nntpboard/blob/master/libs/xtea.class.php// Modified By imsry.cnclass Xtea&#123; //Private var $key; // CBC or ECB Mode // normaly, CBC Mode would be the right choice var $cbc = 1; var $iv = null;// function Xtea($key)// &#123;// $this-&gt;key_setup($key);// &#125; function iv_setup($iv)&#123; $this-&gt;iv = $this-&gt;_str2long($iv); &#125; //Verschluesseln function encrypt($text) &#123; $n = strlen($text); if ($n % 8 != 0) $lng = ($n + (8 - ($n % 8))); else $lng = 0; $text = str_pad($text, $lng, \"\\0\"); $text = $this-&gt;_str2long($text); $cipher = array(); //Initialization vector: IV if ($this-&gt;cbc == 1) &#123; if($this-&gt;iv === null)&#123; $cipher[0][0] = time(); $cipher[0][1] = (double)microtime() * 1000000; &#125;else&#123; $cipher[0][0] = $this-&gt;iv[0]; $cipher[0][1] = $this-&gt;iv[1]; &#125; &#125; $a = 1; for ($i = 0; $i &lt; count($text); $i += 2) &#123; if ($this-&gt;cbc == 1) &#123; //$text mit letztem Geheimtext XOR Verknuepfen //$text is XORed with the previous ciphertext $text[$i] ^= $cipher[$a - 1][0]; $text[$i + 1] ^= $cipher[$a - 1][1]; &#125; $cipher[] = $this-&gt;block_encrypt($text[$i], $text[$i + 1]); $a++; &#125; $output = \"\"; for ($i = ($this-&gt;iv === null?0:1); $i &lt; count($cipher); $i++) &#123; $output .= $this-&gt;_long2str($cipher[$i][0]); $output .= $this-&gt;_long2str($cipher[$i][1]); &#125; return base64_encode($output); &#125; //Entschluesseln function decrypt($text) &#123; $plain = array(); $cipher = $this-&gt;_str2long(base64_decode($text)); if($this-&gt;iv !== null) &#123; $cipher = array_merge($this-&gt;iv,$cipher); &#125; if ($this-&gt;cbc == 1) $i = 2; //Message start at second block else $i = 0; //Message start at first block for ($i; $i &lt; count($cipher); $i += 2) &#123; $return = $this-&gt;block_decrypt($cipher[$i], $cipher[$i + 1]); //Xor Verknuepfung von $return und Geheimtext aus von den letzten beiden Bloecken //XORed $return with the previous ciphertext if ($this-&gt;cbc == 1) $plain[] = array($return[0] ^ $cipher[$i - 2], $return[1] ^ $cipher[$i - 1]); else //EBC Mode $plain[] = $return; &#125; $output = \"\"; for ($i = 0; $i &lt; count($plain); $i++) &#123; $output .= $this-&gt;_long2str($plain[$i][0]); $output .= $this-&gt;_long2str($plain[$i][1]); &#125; return $output; &#125; //Bereitet den Key zum ver/entschluesseln vor function key_setup($key) &#123; if (is_array($key)) $this-&gt;key = $key; else if (isset($key) &amp;&amp; !empty($key)) $this-&gt;key = $this-&gt;_str2long(str_pad($key, 16, $key)); else $this-&gt;key = array(0, 0, 0, 0); &#125; //Performs a benchmark function benchmark($length = 1000) &#123; //1000 Byte String $string = str_pad(\"\", $length, \"text\"); //Key-Setup $start1 = time() + (double)microtime(); $xtea = new Xtea(); $xtea-&gt;key_setup('key'); $end1 = time() + (double)microtime(); //Encryption $start2 = time() + (double)microtime(); $xtea-&gt;Encrypt($string); $end2 = time() + (double)microtime(); echo \"Encrypting \" . $length . \" bytes: \" . round($end2 - $start2, 2) . \" seconds (\" . round($length / ($end2 - $start2), 2) . \" bytes/second)&lt;br&gt;\"; &#125; //verify the correct implementation of the blowfish algorithm function check_implementation() &#123; $xtea = new Xtea(); $xtea-&gt;key_setup('key'); $vectors = array( array(array(0x00000000, 0x00000000, 0x00000000, 0x00000000), array(0x41414141, 0x41414141), array(0xed23375a, 0x821a8c2d)), array(array(0x00010203, 0x04050607, 0x08090a0b, 0x0c0d0e0f), array(0x41424344, 0x45464748), array(0x497df3d0, 0x72612cb5)), ); //Correct implementation? //Test vectors, see http://www.schneier.com/code/vectors.txt foreach ($vectors AS $vector) &#123; $key = $vector[0]; $plain = $vector[1]; $cipher = $vector[2]; $xtea-&gt;key_setup($key); $return = $xtea-&gt;block_encrypt($vector[1][0], $vector[1][1]); if ((int)$return[0] != (int)$cipher[0] || (int)$return[1] != (int)$cipher[1]) return false; &#125; return true; &#125; /*********************************** * Some internal functions ***********************************/ function block_encrypt($y, $z) &#123; $sum = 0; $delta = 0x9e3779b9; /* start cycle */ for ($i = 0; $i &lt; 32; $i++) &#123; $y = $this-&gt;_add($y, $this-&gt;_add($z &lt;&lt; 4 ^ $this-&gt;_rshift($z, 5), $z) ^ $this-&gt;_add($sum, $this-&gt;key[$sum &amp; 3])); $sum = $this-&gt;_add($sum, $delta); $z = $this-&gt;_add($z, $this-&gt;_add($y &lt;&lt; 4 ^ $this-&gt;_rshift($y, 5), $y) ^ $this-&gt;_add($sum, $this-&gt;key[$this-&gt;_rshift($sum, 11) &amp; 3])); &#125; /* end cycle */ $v[0] = $y; $v[1] = $z; return array($y, $z); &#125; function block_decrypt($y, $z) &#123; $delta = 0x9e3779b9; $sum = 0xC6EF3720; $n = 32; /* start cycle */ for ($i = 0; $i &lt; 32; $i++) &#123; $z = $this-&gt;_add($z, -($this-&gt;_add($y &lt;&lt; 4 ^ $this-&gt;_rshift($y, 5), $y) ^ $this-&gt;_add($sum, $this-&gt;key[$this-&gt;_rshift($sum, 11) &amp; 3]))); $sum = $this-&gt;_add($sum, -$delta); $y = $this-&gt;_add($y, -($this-&gt;_add($z &lt;&lt; 4 ^ $this-&gt;_rshift($z, 5), $z) ^ $this-&gt;_add($sum, $this-&gt;key[$sum &amp; 3]))); &#125; /* end cycle */ return array($y, $z); &#125; function _rshift($integer, $n) &#123; // convert to 32 bits if (0xffffffff &lt; $integer || -0xffffffff &gt; $integer) &#123; $integer = fmod($integer, 0xffffffff + 1); &#125; // convert to unsigned integer if (0x7fffffff &lt; $integer) &#123; $integer -= 0xffffffff + 1.0; &#125; elseif (-0x80000000 &gt; $integer) &#123; $integer += 0xffffffff + 1.0; &#125; // do right shift if (0 &gt; $integer) &#123; $integer &amp;= 0x7fffffff; // remove sign bit before shift $integer &gt;&gt;= $n; // right shift $integer |= 1 &lt;&lt; (31 - $n); // set shifted sign bit &#125; else &#123; $integer &gt;&gt;= $n; // use normal right shift &#125; return $integer; &#125; function _add($i1, $i2) &#123; $result = 0.0; foreach (func_get_args() as $value) &#123; // remove sign if necessary if (0.0 &gt; $value) &#123; $value -= 1.0 + 0xffffffff; &#125; $result += $value; &#125; // convert to 32 bits if (0xffffffff &lt; $result || -0xffffffff &gt; $result) &#123; $result = fmod($result, 0xffffffff + 1); &#125; // convert to signed integer if (0x7fffffff &lt; $result) &#123; $result -= 0xffffffff + 1.0; &#125; elseif (-0x80000000 &gt; $result) &#123; $result += 0xffffffff + 1.0; &#125; return $result; &#125; //Einen Text in Longzahlen umwandeln //Covert a string into longinteger function _str2long($data) &#123; $n = strlen($data); $tmp = unpack('N*', $data); $data_long = array(); $j = 0; foreach ($tmp as $value) $data_long[$j++] = $value; return $data_long; &#125; //Longzahlen in Text umwandeln //Convert a longinteger into a string function _long2str($l) &#123; return pack('N', $l); &#125;&#125; 1234567891011121314151617181920212223242526272829//使用mcrypt加密：$data = '1234567890123456';$key = md5('1230456789', true);$iv = '\\0\\0\\0\\0'; $encrypted = mcrypt_encrypt(MCRYPT_XTEA, $key, $data, MCRYPT_MODE_CBC, $iv);$edata = base64_encode($encrypted);return $edata;//使用Xtea加密：$data = '1234567890123456';$key = md5('1230456789', true);$iv = '\\0\\0\\0\\0'; $x = new Xtea();$x-&gt;key_setup($key);$x-&gt;iv_setup($iv);$edata = $x-&gt;encrypt($data);return $edata;//使用Xtea解密：$key = md5('1230456789', true);$iv = '\\0\\0\\0\\0'; $x = new Xtea();$x-&gt;key_setup($key);$x-&gt;iv_setup($iv);$data = $x-&gt;decrypt($edata);return $data; 算法名称、IV、BlockSize、key参照表摘抄自：https://github.com/mfpierre/go-mcrypt Cipher Name Block Mode Block Size IV Size Default Key Size All Key Size(s) CAST-128 CBC 8 8 16 16 CAST-128 ECB 8 8 16 16 CAST-128 OFB 8 8 16 16 CAST-128 NOFB 8 8 16 16 CAST-128 CFB 8 8 16 16 CAST-128 NCFB 8 8 16 16 CAST-128 CTR 8 8 16 16 GOST CBC 8 8 32 32 GOST ECB 8 8 32 32 GOST OFB 8 8 32 32 GOST NOFB 8 8 32 32 GOST CFB 8 8 32 32 GOST NCFB 8 8 32 32 GOST CTR 8 8 32 32 Rijndael-128 CBC 16 16 32 16 24 32 Rijndael-128 ECB 16 16 32 16 24 32 Rijndael-128 OFB 16 16 32 16 24 32 Rijndael-128 NOFB 16 16 32 16 24 32 Rijndael-128 CFB 16 16 32 16 24 32 Rijndael-128 NCFB 16 16 32 16 24 32 Rijndael-128 CTR 16 16 32 16 24 32 Twofish CBC 16 16 32 16 24 32 Twofish ECB 16 16 32 16 24 32 Twofish OFB 16 16 32 16 24 32 Twofish NOFB 16 16 32 16 24 32 Twofish CFB 16 16 32 16 24 32 Twofish NCFB 16 16 32 16 24 32 Twofish CTR 16 16 32 16 24 32 RC4 STREAM 1 0 256 CAST-256 CBC 16 16 32 16 24 32 CAST-256 ECB 16 16 32 16 24 32 CAST-256 OFB 16 16 32 16 24 32 CAST-256 NOFB 16 16 32 16 24 32 CAST-256 CFB 16 16 32 16 24 32 CAST-256 NCFB 16 16 32 16 24 32 CAST-256 CTR 16 16 32 16 24 32 LOKI97 CBC 16 16 32 16 24 32 LOKI97 ECB 16 16 32 16 24 32 LOKI97 OFB 16 16 32 16 24 32 LOKI97 NOFB 16 16 32 16 24 32 LOKI97 CFB 16 16 32 16 24 32 LOKI97 NCFB 16 16 32 16 24 32 LOKI97 CTR 16 16 32 16 24 32 Rijndael-192 CBC 24 24 32 16 24 32 Rijndael-192 ECB 24 24 32 16 24 32 Rijndael-192 OFB 24 24 32 16 24 32 Rijndael-192 NOFB 24 24 32 16 24 32 Rijndael-192 CFB 24 24 32 16 24 32 Rijndael-192 NCFB 24 24 32 16 24 32 Rijndael-192 CTR 24 24 32 16 24 32 Safer+ CBC 16 16 32 16 24 32 Safer+ ECB 16 16 32 16 24 32 Safer+ OFB 16 16 32 16 24 32 Safer+ NOFB 16 16 32 16 24 32 Safer+ CFB 16 16 32 16 24 32 Safer+ NCFB 16 16 32 16 24 32 Safer+ CTR 16 16 32 16 24 32 WAKE STREAM 1 0 32 32 Blowfish CBC 8 8 56 Blowfish ECB 8 8 56 Blowfish OFB 8 8 56 Blowfish NOFB 8 8 56 Blowfish CFB 8 8 56 Blowfish NCFB 8 8 56 Blowfish CTR 8 8 56 DES CBC 8 8 8 8 DES ECB 8 8 8 8 DES OFB 8 8 8 8 DES NOFB 8 8 8 8 DES CFB 8 8 8 8 DES NCFB 8 8 8 8 DES CTR 8 8 8 8 Rijndael-256 CBC 32 32 32 16 24 32 Rijndael-256 ECB 32 32 32 16 24 32 Rijndael-256 OFB 32 32 32 16 24 32 Rijndael-256 NOFB 32 32 32 16 24 32 Rijndael-256 CFB 32 32 32 16 24 32 Rijndael-256 NCFB 32 32 32 16 24 32 Rijndael-256 CTR 32 32 32 16 24 32 Serpent CBC 16 16 32 16 24 32 Serpent ECB 16 16 32 16 24 32 Serpent OFB 16 16 32 16 24 32 Serpent NOFB 16 16 32 16 24 32 Serpent CFB 16 16 32 16 24 32 Serpent NCFB 16 16 32 16 24 32 Serpent CTR 16 16 32 16 24 32 xTEA CBC 8 8 16 16 xTEA ECB 8 8 16 16 xTEA OFB 8 8 16 16 xTEA NOFB 8 8 16 16 xTEA CFB 8 8 16 16 xTEA NCFB 8 8 16 16 xTEA CTR 8 8 16 16 Blowfish CBC 8 8 56 Blowfish ECB 8 8 56 Blowfish OFB 8 8 56 Blowfish NOFB 8 8 56 Blowfish CFB 8 8 56 Blowfish NCFB 8 8 56 Blowfish CTR 8 8 56 enigma STREAM 1 0 13 RC2 CBC 8 8 128 RC2 ECB 8 8 128 RC2 OFB 8 8 128 RC2 NOFB 8 8 128 RC2 CFB 8 8 128 RC2 NCFB 8 8 128 RC2 CTR 8 8 128 3DES CBC 8 8 24 24 3DES ECB 8 8 24 24 3DES OFB 8 8 24 24 3DES NOFB 8 8 24 24 3DES CFB 8 8 24 24 3DES NCFB 8 8 24 24 3DES CTR 8 8 24 24","tags":[{"name":"PHP","slug":"PHP","permalink":"http://www.imsry.cn/tags/PHP/"},{"name":"openssl","slug":"openssl","permalink":"http://www.imsry.cn/tags/openssl/"},{"name":"mcrypt","slug":"mcrypt","permalink":"http://www.imsry.cn/tags/mcrypt/"},{"name":"xtea","slug":"xtea","permalink":"http://www.imsry.cn/tags/xtea/"}]},{"title":"Go-Server/Client以及PHP-Client之间的GRPC初次尝试","date":"2018-12-02T05:47:24.000Z","path":"posts/b37f5033.html","text":"写这篇笔记的目的 为了应对后续开发生涯中可能遇到的种种情况以及分布式计算的趋势（讲白了就是后续对工作会很有帮助）。如若总是依赖http-api/restful编写并提供外部调用接口，当接口数量不断上升，文档内容不断增加，这给设计者和使用者都带来非常不好的体验，而RPC在这体就现出了非常大的优势。我将自己的理解和体会以及学习的过程记录在这里，以便今后遇到问题能够从这儿获得些许的线索以及提供一个参考给同道中人。 前提 不妨思考这样一个情形：作为接口设计者，我早已经定义好的接口的请求方式(RESTFul)和返回结构(json)，但是每个接口我还需要另外维护一个文档来说明各个接口的用法(请求参数)和解释返回的结果(字段描述)。而对于接口的调用者而言，不但要去文档中查找自己需要的接口并阅读说明，在实际调用中，还要以防接口提供者返回非既定结构的结果而导致的报错。 介绍 Remote Procedure Call（远程过程调用），简称RPC。它可以使得调用远程服务接口如同调用本地方法一样简单。虽然实质还是通过网络通信，但是相比http请求api的网络开销还是极小的，其原因简单来说，HTTP协议每次请求都需要建立TCP连接，就会涉及3次握手的网络开销问题以及冗余报文，而rpc直接使用TCP多路复用(gRPC基于HTTP/2)无需重复建立连接。就文档方面而言，编写一份开发文档足矣，因为接口的定义由接口定义语言（IDL）来完成，而阅读IDL便可理解所有接口，并且通过编译器可以将IDL编译成不同的语言实现源码（gRPC通过protoc编译器将protobuf编译）。其他优点例如：注册、监控、发布等的这里不做论述。 Go-Server GRPC的官方资源：go get google.golang.org/grpc GRPC的镜像资源：https://github.com/grpc/grpc 官方的相关示列可以在grpc/examples/中找到。 定义服务使用protocol buffers去定义gRPC service和方法 request以及 response 的类型。 新增并编辑文件：something.proto 123456789101112131415161718192021222324252627282930313233syntax = &quot;proto3&quot;;// 声明包/作用域package something;// 定义一个服务，名为Wiwiderservice Wiwider &#123; rpc FindUser (UserRequest) returns (UserReply) &#123;&#125; // 声明一个方法 rpc FindUsers (UserRequest) returns (UsersReply) &#123;&#125;&#125;// 定义一个请求消息message UserRequest &#123; string name = 1;&#125;// 定义一个响应消息message UserReply &#123; int64 id = 1; string name = 2; int32 age = 3; sexes sex = 4; enum sexes &#123; Male = 0; Female = 1; &#125;&#125;// 定义一个包含消息的消息message UsersReply &#123; repeated UserReply users = 1;&#125; 生成代码 Go-代码 1protoc --go_out=plugins=grpc:. something.proto 运行这个命令后，会在当前目录生成一个something.pb.go文件，内容包含： 所有用于填充，序列化和获取我们请求和响应消息类型的 protocol buffer 代码 一个为客户端调用定义在Wiwider服务的方法的接口类型（或者 存根 ） 一个为服务器使用定义在Wiwider服务的方法去实现的接口类型（或者 存根 ） PHP-代码 1protoc --proto_path=./ --php_out=./ --grpc_out=./ --plugin=protoc-gen-grpc=/Users/anthony/git/grpc/bins/opt/grpc_php_plugin ./something.proto 其中/Users/anthony/git/grpc/bins/opt/grpc_php_plugin对应从git中获取的&lt;grpc-git-path&gt;/bins/opt/grpc_php_plugin 运行这个命令后，会在当前目录生成如下： GPBMetadata/something.php Something/UserReply/sexes.php Something/UserReply.php Something/UserReply_sexes.php Something/UserRequest.php Something/UsersReply.php Something/WiwiderClient.php 创建服务器首先我们需要实现服务定义的服务接口： something/something.go： 1234567891011121314151617181920212223242526272829303132333435363738394041package somethingimport ( \"Wiwide/cmi\" \"context\")type UserServer struct &#123;&#125;func (s *UserServer) FindUser(ctx context.Context, in *UserRequest) (*UserReply, error) &#123; name := in.GetName() rs, err := cmi.Db(\"local\").Table(\"users\").Where(\"name\", name).First() // 从数据库查询 if err != nil || len(rs) == 0 &#123; return &amp;UserReply&#123;&#125;,err &#125; rId := rs[\"id\"].(int64) rName := rs[\"name\"].(string) rAge := int32(rs[\"age\"].(int64)) rSex := UserReplySexes(rs[\"sex\"].(int64)) rep := &amp;UserReply&#123;Id:rId,Name:rName,Age:rAge,Sex:rSex&#125; return rep, nil&#125;func (s *UserServer) FindUsers(ctx context.Context, in *UserRequest) (*UsersReply, error) &#123; name := in.GetName() rs, err := cmi.Db(\"local\").Table(\"users\").Where(\"name\",\"like\",\"%\"+name+\"%\").Get() // 从数据库查询 if err != nil &#123; return &amp;UsersReply&#123;&#125;, err &#125; list := make([]*UserReply, 0) for _, v := range rs &#123; rId := v[\"id\"].(int64) rName := v[\"name\"].(string) rAge := int32(v[\"age\"].(int64)) rSex := UserReplySexes(v[\"sex\"].(int64)) list = append(list, &amp;UserReply&#123;Id:rId,Name:rName,Age:rAge,Sex:rSex&#125;) &#125; rep := &amp;UsersReply&#123;Users: list&#125; return rep, nil&#125; 然后运行一个gRPC服务器，注册我们的服务并监听来自客户端的请求： server.go： 1234567891011121314151617181920212223242526package mainimport ( \"Wiwide/rpc/something\" \"context\" \"google.golang.org/grpc\" \"google.golang.org/grpc/reflection\" \"log\" \"net\")var ( port = \":50051\")func main() &#123; lis, err := net.Listen(\"tcp\", port) if err != nil &#123; log.Fatalf(\"failed to listen: %v\", err) &#125; s := grpc.NewServer() something.RegisterWiwiderServer(s, &amp;something.UserServer&#123;&#125;) reflection.Register(s) if err := s.Serve(lis); err != nil &#123; log.Fatalf(\"failed to serve: %v\", err) &#125;&#125; 运行服务器简单执行命令：go run server.go，然后等待客户端请求。 创建客户端 Go-Client 创建文件client.go： 1234567891011121314151617181920212223242526272829303132333435363738394041package mainimport ( \"Wiwide/rpc/something\" \"context\" \"google.golang.org/grpc\" \"log\" \"os\" \"time\")const( address = \"localhost:50051\" defaultName = \"World\")func main()&#123; conn, err := grpc.Dial(address, grpc.WithInsecure()) if err != nil &#123; log.Fatalf(\"did not connect: %v\", err) &#125; defer conn.Close() name := defaultName if len(os.Args) &gt; 1 &#123; name = os.Args[1] &#125; ctx, cancel := context.WithTimeout(context.Background(), time.Second) defer cancel() s := something.NewWiwiderClient(conn) u, err := s.FindUser(ctx, &amp;something.UserRequest&#123;Name:name&#125;) if err != nil &#123; log.Fatalf(\"could not Find: %v\", err) &#125; us, err := s.FindUsers(ctx, &amp;something.UserRequest&#123;Name:name&#125;) if err != nil &#123; log.Fatalf(\"could not Find users: %v\", err) &#125; log.Printf(\"Find user: %v\", u) log.Printf(\"Find users: %v\", us)&#125; PHP-Client PHP首先要安装grpc的php扩展，下载地址：http://pecl.php.net/package/gRPC 直接使用phpize安装: 12345678tar -zxf grpc-1.17.0.tgzcd grpc-1.17.0phpize./configure --with-php-config=/usr/local/php/bin/php-configmakemake install# 在php.ini中增加extension = grpc.so 执行php -m | grep grpc 应该会输出”grpc”，就代表成功了。 创建客户端文件，这里需要用到composer获取两个包，其中composer.json内容为： 12345678&#123; \"name\": \"grpc/grpc-demo\", \"description\": \"gRPC example for PHP\", \"require\": &#123; \"grpc/grpc\": \"^v1.3.0\", \"google/protobuf\": \"^v3.3.0\" &#125;&#125; something.php： 1234567891011121314151617181920212223&lt;?phprequire dirname(__FILE__).'/vendor/autoload.php';include_once dirname(__FILE__).'/Something/UserReply.php';include_once dirname(__FILE__).'/Something/UsersReply.php';include_once dirname(__FILE__).'/Something/UserRequest.php';include_once dirname(__FILE__).'/Something/WiwiderClient.php';include_once dirname(__FILE__).'/GPBMetadata/Something.php';$client = new Something\\WiwiderClient('127.0.0.1:50051', ['credentials' =&gt; Grpc\\ChannelCredentials::createInsecure()]);$req = new Something\\UserRequest();$name = !empty($argv[1]) ? $argv[1] : 'world';$req-&gt;setName($name);list($reply, $status) = $client-&gt;FindUser($req)-&gt;wait();var_dump($reply-&gt;getId(), $reply-&gt;getName(), $reply-&gt;getAge(), $reply-&gt;getSex(), $status);list($reply, $status) = $client-&gt;FindUsers($req)-&gt;wait();$uers = $reply-&gt;getUsers();$users = array();foreach ($uers as $key =&gt; $value) &#123; array_push($users, array('id'=&gt;$value-&gt;getId(),'name'=&gt;$value-&gt;getName(),'age'=&gt;$value-&gt;getAge(),'sex'=&gt;$value-&gt;getSex()));&#125;var_dump($users); 运行客户端 Go-Client 我们先编译一下：go build client.go，输出可执行文件client，然后直接运行： ./client Anthony ./client ny 分别输出如下： 122018/12/02 13:40:15 Find user: id:1 name:&quot;Anthony&quot; age:24 sex:Female 2018/12/02 13:40:15 Find users: users:&lt;id:1 name:&quot;Anthony&quot; age:24 sex:Female &gt; 122018/12/02 13:40:25 Find user: 2018/12/02 13:40:25 Find users: users:&lt;id:1 name:&quot;Anthony&quot; age:24 sex:Female &gt; users:&lt;id:4 name:&quot;funny&quot; age:15 sex:2 &gt; PHP-Client 直接执行PHP文件：php something.php Anthony和php something.php ny，结果如下： 1234567891011121314151617181920212223242526int(1)string(7) &quot;Anthony&quot;int(24)int(1)object(stdClass)#8 (3) &#123; [&quot;metadata&quot;]=&gt; array(0) &#123; &#125; [&quot;code&quot;]=&gt; int(0) [&quot;details&quot;]=&gt; string(0) &quot;&quot;&#125;array(1) &#123; [0]=&gt; array(4) &#123; [&quot;id&quot;]=&gt; int(1) [&quot;name&quot;]=&gt; string(7) &quot;Anthony&quot; [&quot;age&quot;]=&gt; int(24) [&quot;sex&quot;]=&gt; int(1) &#125;&#125; 12345678910111213141516171819202122232425262728293031323334353637int(0)string(0) &quot;&quot;int(0)int(0)object(stdClass)#8 (3) &#123; [&quot;metadata&quot;]=&gt; array(0) &#123; &#125; [&quot;code&quot;]=&gt; int(0) [&quot;details&quot;]=&gt; string(0) &quot;&quot;&#125;array(2) &#123; [0]=&gt; array(4) &#123; [&quot;id&quot;]=&gt; int(1) [&quot;name&quot;]=&gt; string(7) &quot;Anthony&quot; [&quot;age&quot;]=&gt; int(24) [&quot;sex&quot;]=&gt; int(1) &#125; [1]=&gt; array(4) &#123; [&quot;id&quot;]=&gt; int(4) [&quot;name&quot;]=&gt; string(5) &quot;funny&quot; [&quot;age&quot;]=&gt; int(15) [&quot;sex&quot;]=&gt; int(2) &#125;&#125; 结束本次笔记接近结尾了，内容很简单，主要记录使用grpc的大体流程。为后续的测试做一点点的准备。 参考资料 gRPC官方文档中文版v1.0 grpc简易教程 go server+php client PRC服务和HTTP服务对比 grpc官方网站","tags":[{"name":"PHP","slug":"PHP","permalink":"http://www.imsry.cn/tags/PHP/"},{"name":"Go","slug":"Go","permalink":"http://www.imsry.cn/tags/Go/"},{"name":"gRPC","slug":"gRPC","permalink":"http://www.imsry.cn/tags/gRPC/"},{"name":"RPC","slug":"RPC","permalink":"http://www.imsry.cn/tags/RPC/"}]},{"title":"Go语言包-path/filepath","date":"2018-11-29T02:30:23.000Z","path":"posts/6ac47315.html","text":"一天一个Golang包，慢慢学习之“path/filepath” 上一篇学习了path包，了解了几个对路径处理的方法。今天继续完成它的子包“filepath”，包中的函数会根据不同平台做不同的处理，如路径分隔符、卷名等。 阅读文档：官方pkg地址：https://golang.org/pkg/path/filepath 包方法 func Base(path string) stringfunc Clean(path string) stringfunc Dir(path string) stringfunc Ext(path string) stringfunc IsAbs(path string) boolfunc Join(elem ...string) stringfunc Match(pattern, name string) (matched bool, err error)func Split(path string) (dir, file string)// 以上8种方法跟path包同名方法功能类似 func Abs(path string) (string, error)// 返回相对当前路径的path的绝对路径 123456789101112fmt.Println(filepath.Abs(\"\"))fmt.Println(filepath.Abs(\"name.txt\"))fmt.Println(filepath.Abs(\"/name.txt\"))fmt.Println(filepath.Abs(\"../name.txt\"))fmt.Println(filepath.Abs(\"~/../name.txt\"))/*/Users/anthony/Workspaces/GoLand/src/application/learn/path/filepath &lt;nil&gt;/Users/anthony/Workspaces/GoLand/src/application/learn/path/filepath/name.txt &lt;nil&gt;/name.txt &lt;nil&gt;/Users/anthony/Workspaces/GoLand/src/application/learn/path/name.txt &lt;nil&gt;/Users/anthony/Workspaces/GoLand/src/application/learn/path/filepath/name.txt &lt;nil&gt;*/ func EvalSymlinks(path string) (string, error)// 返回Path的实际路径（如果path是个软链接的话） 12fmt.Println(filepath.EvalSymlinks(\"/etc\")) // /private/etc &lt;nil&gt;fmt.Println(filepath.EvalSymlinks(\"/usr/local\"))// /usr/local &lt;nil&gt; func ToSlash(path string) stringfunc FromSlash(path string) string// 以上两种方法作主要用于Windows平台。// 将path中的平台相关的路径分隔符(或’/‘)转换为’/‘(或平台相关的路径分隔符) func Glob(pattern string) (matches []string, err error)// 列出与指定模式pattern完全匹配的文件或目录，匹配原则同Match一样。 12fmt.Println(filepath.Glob(\"/usr/*\"))// [/usr/bin /usr/include /usr/lib /usr/libexec /usr/local /usr/sbin /usr/share /usr/standalone] &lt;nil&gt; func HasPrefix(p, prefix string) bool// 该方法已弃用，不再被建议使用。 func Rel(basepath, targpath string) (string, error)// 返回targpath相对于basepath的路径。// 要求二者必须同为“相对路径”或“绝对路径” 1234fmt.Println(filepath.Rel(\"/usr/local\",\"/usr/local/bin/go\")) // bin/go &lt;nil&gt;fmt.Println(filepath.Rel(\"/usr/local\",\"/usr/local/../local/bin/go\"))// bin/go &lt;nil&gt;fmt.Println(filepath.Rel(\"/usr/local\",\"/usr/bin/go\")) // ../bin/go &lt;nil&gt;fmt.Println(filepath.Rel(\"/usr/local\",\"/\")) // ../.. &lt;nil&gt; func SplitList(path string) []string// 将路径序列path分割为多条独立路径。// path类似Unix/Linux下的环境变量PATH。 12fmt.Printf(\"%q\\n\", filepath.SplitList(\"/bin:/sbin:/usr/bin:/usr/sbin : /usr/local/bin\"))// [\"/bin\" \"/sbin\" \"/usr/bin\" \"/usr/sbin \" \" /usr/local/bin\"] func VolumeName(path string) string// 返回路径字符中的卷名// Windows 中的 C:\\Windows 会返回”C:”// Linux 中的 //dev/host/dir 会返回 //dev/host func Walk(root string, walkFn WalkFunc) error// 遍历指定目录root（包括子目录），对遍历到的项目用walkFn函数进行处理。// walkFn返回nil，则walkFn继续遍历，如果返回SkipDir，则Walk函数跳过当前目录，继续遍历下一目录。// 如果返回其他错误，则Walk函数终止。// 在Walk遍历过程中，如遇到错误，则会将错误通过err传递给walkFn，同时跳过出错的项目，继续处理后续项目。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768// 打印目录及目录下所有文件及大小fn := func(path string, info os.FileInfo, err error) error &#123; if err != nil &#123; return err &#125; fmt.Printf(\"%q, %q, %d\\n\", path, info.Name(), info.Size()) return nil&#125;filepath.Walk(\"/Users/anthony/Downloads/conf\", fn)/* \"/Users/anthony/Downloads/conf\", \"conf\", 224 \"/Users/anthony/Downloads/conf/0x4f5da2.cn.key\", \"0x4f5da2.cn.key\", 1700 \"/Users/anthony/Downloads/conf/0x4f5da2.cn_bundle.crt\", \"0x4f5da2.cn_bundle.crt\", 3323 \"/Users/anthony/Downloads/conf/world.cert.key.pem\", \"world.cert.key.pem\", 1675 \"/Users/anthony/Downloads/conf/world.dev.bundle.crt\", \"world.dev.bundle.crt\", 2802 \"/Users/anthony/Downloads/conf/world.local.bundle.crt\", \"world.local.bundle.crt\", 2863*/// WalkFunc 函数：// 列出含有 *.txt 文件的目录（不是全部，因为会跳过一些子目录）findTxtDir := func(path string, info os.FileInfo, err error) error &#123; ok, err := filepath.Match(`*.txt`, info.Name()) if ok &#123; fmt.Println(filepath.Dir(path), info.Name()) // 遇到 txt 文件则继续处理所在目录的下一个目录 // 注意会跳过子目录 return filepath.SkipDir &#125; return err&#125;// 列出含有 *.txt 文件的目录（不是全部，因为会跳过一些子目录）err := filepath.Walk(`/usr`, findTxtDir)fmt.Println(err)/*/usr/local/Cellar/chromaprint/1.4.3 NEWS.txt/usr/local/Cellar/fontconfig/2.13.1/share/doc/fontconfig fontconfig-devel.txt/usr/local/Cellar/frei0r/1.6.1 AUTHORS.txt/usr/local/Cellar/game-music-emu/0.6.2 changes.txt...&lt;nil&gt;*/// WalkFunc 函数：// 列出所有以 ab 开头的目录（全部，因为没有跳过任何项目）findabDir := func(path string, info os.FileInfo, err error) error &#123; if info.IsDir() &#123; ok, err := filepath.Match(`[aA][bB]*`, info.Name()) if err != nil &#123; return err &#125; if ok &#123; fmt.Println(path) &#125; &#125; return nil&#125;// 列出所有以 ab 开头的目录（全部，因为没有跳过任何项目）err = filepath.Walk(`/usr`, findabDir)fmt.Println(err)/*/usr/local/Cellar/node/11.0.0/libexec/lib/node_modules/npm/node_modules/abbrev/usr/local/Homebrew/Library/Taps/homebrew/homebrew-services/.git/objects/ab/usr/local/lib/node_modules/gulp/node_modules/resolve/test/dotdot/abc/usr/local/lib/node_modules/hexo-cli/node_modules/abbrev...&lt;nil&gt;*/","tags":[{"name":"path","slug":"path","permalink":"http://www.imsry.cn/tags/path/"},{"name":"filepath","slug":"filepath","permalink":"http://www.imsry.cn/tags/filepath/"}]},{"title":"Go语言包-path","date":"2018-11-28T09:08:15.000Z","path":"posts/66c90df8.html","text":"一天一个Golang包，慢慢学习之“path” 上一篇学习了bytes包，内容还是有点多，花的时间也多了一点。所以今天补充点小内容-path包。当然，path还有子包：filepath，这个下次再继续。 阅读文档：官方pkg地址：https://golang.org/pkg/path/ 包方法 func Base(path string) string// 返回最后一个元素（目录或文件）的路径 12345678fmt.Println(path.Base(\"/a/b/\")) // bfmt.Println(path.Base(\"/a/b\")) // bfmt.Println(path.Base(\"./a/b\")) // bfmt.Println(path.Base(\"../a/b\")) // bfmt.Println(path.Base(\"/\")) // /fmt.Println(path.Base(\"./\")) // .fmt.Println(path.Base(\".\")) // .fmt.Println(path.Base(\"\")) // . func Clean(path string) string// 返回最洁净的路径，在path比较复杂的情况下使用，可以简化path。 12345678910111213141516171819paths := []string&#123; \"a/c\", \"a//c\", \"a/c/.\", \"a/c/b/..\", \"/../a/c\", \"/../a/b/../././/c\", \"\",&#125;for _, p := range paths &#123; fmt.Printf(\"Clean(%q) = %q\\n\", p, path.Clean(p))&#125;// Clean(\"a/c\") = \"a/c\"// Clean(\"a//c\") = \"a/c\"// Clean(\"a/c/.\") = \"a/c\"// Clean(\"a/c/b/..\") = \"a/c\"// Clean(\"/../a/c\") = \"/a/c\"// Clean(\"/../a/b/../././/c\") = \"/a/c\"// Clean(\"\") = \".\" func Dir(path string) string// 返回元素（目录或文件）的目录路径 123456fmt.Println(path.Dir(\"/a/b/c\")) // /a/bfmt.Println(path.Dir(\"a/b/c\")) // a/bfmt.Println(path.Dir(\"/a/\")) // /afmt.Println(path.Dir(\"a/\")) // afmt.Println(path.Dir(\"/\")) // /fmt.Println(path.Dir(\"\")) // . func Ext(path string) string// 返回path下文件名的后缀 1234fmt.Println(path.Ext(\"/a/b/c/bar.css\")) // .cssfmt.Println(path.Ext(\"/a/b/c/bar.tar.gz\")) // .gzfmt.Println(path.Ext(\"/\")) //fmt.Println(path.Ext(\"\")) // func IsAbs(path string) bool// 判断path是否是绝对路径 123fmt.Println(path.IsAbs(\"/dev/null\")) // truefmt.Println(path.IsAbs(\"dev/null\")) // falsefmt.Println(path.IsAbs(\"./dev/null\")) // false func Join(elem ...string) string// 将多个路径元素连接成一个，空元素会被忽略。 123456fmt.Println(path.Join(\"a\", \"b\", \"c\")) // a/b/cfmt.Println(path.Join(\"a\", \"b/c\")) // a/b/cfmt.Println(path.Join(\"a/b\", \"c\")) // a/b/cfmt.Println(path.Join(\"\", \"\")) //fmt.Println(path.Join(\"a\", \"\")) // afmt.Println(path.Join(\"\", \"a\")) // a func Match(pattern, name string) (matched bool, err error)// 判断name是否符合pattern规则，并返回err 1234567891011121314151617181920// pattern:// &#123; term &#125;// term:// '*' matches any sequence of non-/ characters// '?' matches any single non-/ character// '[' [ '^' ] &#123; character-range &#125; ']'// character class (must be non-empty)// c matches character c (c != '*', '?', '\\\\', '[')// '\\\\' c matches character c// character-range:// c matches character c (c != '\\\\', '-', ']')// '\\\\' c matches character c// lo '-' hi matches character c for lo &lt;= c &lt;= hi fmt.Println(path.Match(\"abc\", \"abc\")) // true &lt;nil&gt; fmt.Println(path.Match(\"a*\", \"abc\")) // true &lt;nil&gt; fmt.Println(path.Match(\"a*d\", \"abcd\")) // true &lt;nil&gt; fmt.Println(path.Match(\"a*/b\", \"a/c/b\")) // false &lt;nil&gt; fmt.Println(path.Match(\"a/[a-f]/b\", \"a/c/b\")) // true &lt;nil&gt; func Split(path string) (dir, file string)// 返回path的目录和文件名 123fmt.Println(path.Split(\"static/myfile.css\")) // static/ myfile.cssfmt.Println(path.Split(\"myfile.css\")) // myfile.cssfmt.Println(path.Split(\"\")) // 子包：filepath下一篇来学习：path/filepath","tags":[{"name":"path","slug":"path","permalink":"http://www.imsry.cn/tags/path/"}]},{"title":"Go语言包-bytes","date":"2018-11-27T06:45:01.000Z","path":"posts/dab4275.html","text":"一天一个Golang包，慢慢学习之“bytes” 今天学习bytes包，其实之前就已经使用了bytes包的很多方法了，这次主要就是再次熟悉和认识这个包里面的方法。 阅读文档：官方pkg地址：https://golang.org/pkg/bytes/ 包方法 func Compare(a, b []byte) int// 比较a和b两个字节数组。// if a==b return 0;// if a &lt; b return -1;// if a &gt; b return 1; 12345678910111213141516171819202122232425var a, b []bytea = []byte&#123;65,66,67&#125;b = []byte&#123;65,66,67&#125;fmt.Printf(\"%s, %s, %d\\n\", a, b, bytes.Compare(a, b))a = []byte&#123;65,66,67&#125;b = []byte&#123;65,66,68&#125;fmt.Printf(\"%s, %s, %d\\n\", a, b, bytes.Compare(a, b))a = []byte&#123;65,66,67&#125;b = []byte&#123;65,66,66&#125;fmt.Printf(\"%s, %s, %d\\n\", a, b, bytes.Compare(a, b))a = []byte&#123;65,66,67&#125;b = []byte&#123;65,66,67,68&#125;fmt.Printf(\"%s, %s, %d\\n\", a, b, bytes.Compare(a, b))a = []byte&#123;65,66,67,68&#125;b = []byte&#123;65,66,67&#125;fmt.Printf(\"%s, %s, %d\\n\", a, b, bytes.Compare(a, b))// ABC, ABC, 0// ABC, ABD, -1// ABC, ABB, 1// ABC, ABCD, -1// ABCD, ABC, 1 func Contains(b, subslice []byte) bool// 检查subslice是不是包含在b中 12345678910111213141516a := []byte&#123;65, 66, 67, 68, 69, 70&#125;b := []byte&#123;65, 66, 67, 68, 69, 70&#125;fmt.Printf(\"%s, %s, %v\\n\", a, b, bytes.Contains(a, b))b = []byte&#123;65, 66, 67, 68, 69&#125;fmt.Printf(\"%s, %s, %v\\n\", a, b, bytes.Contains(a, b))b = []byte&#123;65, 66, 67, 68, 69, 70, 71&#125;fmt.Printf(\"%s, %s, %v\\n\", a, b, bytes.Contains(a, b))b = []byte&#123;66, 67, 68, 69, 70, 71&#125;fmt.Printf(\"%s, %s, %v\\n\", a, b, bytes.Contains(a, b))// ABCDEF, ABCDEF, true// ABCDEF, ABCDE, true// ABCDEF, ABCDEFG, false// ABCDEF, BCDEFG, false func ContainsAny(b []byte, chars string) bool// 检查b中是否包含chars中的任意字符 123456a := []byte&#123;65, 66, 67, 68&#125;fmt.Printf(\"%v\\n\", bytes.ContainsAny(a, \"abcd\") // falsefmt.Printf(\"%v\\n\", bytes.ContainsAny(a, \"a\")) // falsefmt.Printf(\"%v\\n\", bytes.ContainsAny(a, \"aB\")) // truefmt.Printf(\"%v\\n\", bytes.ContainsAny(a, \"aBcd\")) // truefmt.Printf(\"%v\\n\", bytes.ContainsAny(a, \"abcd ABC\")) // true func ContainsRune(b []byte, r rune) bool// 判断b中是否包含r字符 123a := []byte&#123;65, 66, 67 ,68&#125;fmt.Printf(\"%v\\n\", bytes.ContainsRune(a, 'b')) // falsefmt.Printf(\"%v\\n\", bytes.ContainsRune(a, 'B')) //true func Count(s, sep []byte) int// sep在s中的重复次数（sep不重叠），即s=ababab,sep=abab则返回1 12345a := []byte(\"ababab\")sep := []byte(\"ab\")fmt.Printf(\"%d\\n\", bytes.Count(a, sep)) // 3sep = []byte(\"abab\")fmt.Printf(\"%d\\n\", bytes.Count(a, sep)) // 1 func Equal(a, b []byte) bool// 判断a和b是否相等，nil等同于[]byte() 12345a := []byte(\"ABC\")b := []byte&#123;65, 66, 67&#125;fmt.Printf(\"%s, %s, %v\\n\", a, b, bytes.Equal(a, b)) // ABC, ABC, trueb = []byte&#123;65 ,66&#125;fmt.Printf(\"%s, %s, %v\\n\", a, b, bytes.Equal(a, b)) // ABC, AB, false func EqualFold(s, t []byte) bool// 判断s和t是否相似，忽略大小写和标题三种格式 12345a := []byte(\"abc\")b := []byte(\"ABC\")fmt.Printf(\"%s, %s, %v\\n\", a, b, bytes.EqualFold(a, b)) // abc, ABC, trueb = []byte(\"ABCC\")fmt.Printf(\"%s, %s, %v\\n\", a, b, bytes.EqualFold(a, b)) // abc, ABCC, false func Fields(s []byte) [][]byte// 以连续空白为分隔符切割s成多个子串（不含分隔符） 123a := []byte(\"abc def ABC CBA\")fmt.Printf(\"%s, %v\\n\", a, bytes.Fields(a))// abc def ABC CBA, [[97 98 99] [100 101 102] [65 66 67] [67 66 65]] func FieldsFunc(s []byte, f func(rune) bool) [][]byte// 以符合f方法的字符为分隔符切割s成多个子串（不含分隔符） 123f := func(r rune) bool &#123; return r == '#'&#125;a := []byte(\"This is # and @\")fmt.Printf(\"%s, %q\\n\", a, bytes.FieldsFunc(a, f)) // This is # and @, [\"This is \" \" and @\"] func HasPrefix(s, prefix []byte) bool// 检测s字节切片是否以prefix开头 1234567s := []byte(\"Hello World!\")prefix := []byte(\"hello\")fmt.Printf(\"%s, %s, %v\\n\", s, prefix, bytes.HasPrefix(s, prefix)) // Hello World!, hello, falseprefix = []byte(\"Hello\")fmt.Printf(\"%s, %s, %v\\n\", s, prefix, bytes.HasPrefix(s, prefix)) // Hello World!, Hello, trueprefix = []byte(\"\")fmt.Printf(\"%s, %s, %v\\n\", s, prefix, bytes.HasPrefix(s, prefix)) // Hello World!, , true func HasSuffix(s, suffix []byte) bool// 检测s字节切片是否以suffix结尾 1234567s := []byte(\"Hello World!\")suffix := []byte(\"world!\")fmt.Printf(\"%s, %s, %v\\n\", s, suffix, bytes.HasSuffix(s, suffix)) // Hello World!, world!, falsesuffix = []byte(\"Hello World!\")fmt.Printf(\"%s, %s, %v\\n\", s, suffix, bytes.HasSuffix(s, suffix)) // Hello World!, World!, truesuffix = []byte(\"\")fmt.Printf(\"%s, %s, %v\\n\", s, suffix, bytes.HasSuffix(s, suffix)) // Hello World!, , true func Index(s, sep []byte) int// 返回sep在s中的起始位置，如果sep不在s中则返回-1 123456789s := []byte(\"Hello World!\")sep := []byte(\"Hello\")fmt.Printf(\"'%s' of '%s' is %d\\n\", sep, s, bytes.Index(s, sep)) // 'Hello' of 'Hello World!' is 0sep = []byte(\"World\")fmt.Printf(\"'%s' of '%s' is %d\\n\", sep, s, bytes.Index(s, sep)) // 'World' of 'Hello World!' is 6sep = []byte(\"Bob\")fmt.Printf(\"'%s' of '%s' is %d\\n\", sep, s, bytes.Index(s, sep)) // 'Bob' of 'Hello World!' is -1sep = []byte(\"\")fmt.Printf(\"'%s' of '%s' is %d\\n\", sep, s, bytes.Index(s, sep)) // '' of 'Hello World!' is 0 func IndexAny(s []byte, chars string) int// 返回chars中任意字符在s中出现的第一个位置，chars为空或找不到则返回-1. 1234567891011s := []byte(\"Hello World!\")chars := \"abcdefg\"fmt.Printf(\"%s, %s, %d\\n\", s, chars, bytes.IndexAny(s, chars)) // Hello World!, abcdefg, 1chars = \"aabbcc\"fmt.Printf(\"%s, %s, %d\\n\", s, chars, bytes.IndexAny(s, chars)) // Hello World!, aabbcc, -1chars = \"abcd\"fmt.Printf(\"%s, %s, %d\\n\", s, chars, bytes.IndexAny(s, chars)) // Hello World!, abcd, 10chars = \"\"fmt.Printf(\"%s, %s, %d\\n\", s, chars, bytes.IndexAny(s, chars)) // Hello World!, , -1chars = \" \"fmt.Printf(\"%s, %s, %d\\n\", s, chars, bytes.IndexAny(s, chars)) // Hello World!, , 5 func IndexByte(b []byte, c byte) int// 同Index，sep变为c字节 func IndexFunc(s []byte, f func(r rune) bool) int// 返回符合f方法的字符首次出现的位置，找不到则返回-1 func IndexRune(s []byte, r rune) int// 同Index，sep变为r字符 func Join(s [][]byte, sep []byte) []byte// 以sep为连接符将子串列表连接成一个字节串 123s := [][]byte&#123;&#123;65,66&#125;,&#123;67,68&#125;&#125;sep := []byte&#123;124,124&#125;fmt.Printf(\"%q, %s, %s\\n\", s, sep, bytes.Join(s, sep)) // [\"AB\" \"CD\"], ||, AB||CD func LastIndex(s, sep []byte) int// 查找s中最后一次出现sep的位置，找不到返回-11234567s := []byte(\"abcddabcd\")sep := []byte(\"abc\")fmt.Printf(\"%s, %s, %d\\n\", s, sep, bytes.LastIndex(s, sep)) // abcddabcd, abc, 5sep = []byte(\"bcd\")fmt.Printf(\"%s, %s, %d\\n\", s, sep, bytes.LastIndex(s, sep)) // abcddabcd, bcd, 6sep = []byte(\"\")fmt.Printf(\"%s, %s, %d\\n\", s, sep, bytes.LastIndex(s, sep)) // abcddabcd, , 9 func LastIndexAny(s []byte, chars string) int// 查找s中最后一次出现chars中任意字符的位置，找不到返回-1 func LastIndexByte(s []byte, c byte) int// 查找s中最后一次出现c字节的位置，找不到返回-1 func LastIndexFunc(s []byte, f func(r rune) bool) int// 查找s中符合f方法的字符位置，找不到返回-1 func Map(mapping func(r rune) rune, s []byte) []byte// 将s中的r替换成mapping(r)返回的字符，如果mapping返回负值，则丢弃 1234567891011rot13 := func(r rune) rune &#123; switch &#123; case r &gt;= 'A' &amp;&amp; r &lt;= 'Z': return 'A' + (r-'A'+13)%26 case r &gt;= 'a' &amp;&amp; r &lt;= 'z': return 'a' + (r-'a'+13)%26 &#125; return r &#125; fmt.Printf(\"%s\\n\", bytes.Map(rot13, []byte(\"'Twas brillig and the slithy gopher...\"))) // 'Gjnf oevyyvt naq gur fyvgul tbcure... func Repeat(b []byte, count int) []byte// 返回子串b重复count次后的串 1fmt.Printf(\"%s\\n\", bytes.Repeat([]byte(\"Abc\"), 3)) // AbcAbcAbc func Replace(s, old, new []byte, n int) []byte// 将s中的前n个old替换成new，如果n&lt;0则替换全部 1234s := []byte(\"Bob takes you to Bob's house.\")fmt.Printf(\"%s\\n\", bytes.Replace(s, []byte(\"Bob\"), []byte(\"Lily\"), 0)) // Bob takes you to Bob's house.fmt.Printf(\"%s\\n\", bytes.Replace(s, []byte(\"Bob\"), []byte(\"Lily\"), 1)) // Lily takes you to Bob's house.fmt.Printf(\"%s\\n\", bytes.Replace(s, []byte(\"Bob\"), []byte(\"Lily\"), -1)) // Lily takes you to Lily's house. func Runes(s []byte) []rune// 将s转换成[]rune型 func Split(s, sep []byte) [][]byte// 以sep作为分隔符将s拆分成多个子串。// 如果sep为空，则将s拆分成Unicode字符列表 func SplitN(s, sep []byte, n int) [][]byte// 同Split，但可指定拆分次数n，超出n的部分不进行拆分 func SplitAfter(s, sep []byte) [][]byte// 同Split，但是每个子串都包含分隔符sep func SplitAfterN(s, sep []byte, n int) [][]byte// 同SplitAfter，但可指定拆分次数n。 func Title(s []byte) []byte// 将s中所有单词的首字符修改为Title格式返回// Bug: 不能很好的处理Unicode标点符号分隔的单词。 func ToLower(s []byte) []byte// 将s中的字符全部替换成小写并返回 func ToUpper(s []byte) []byte// 将s中的字符全部替换成大小并返回 func ToTitle(s []byte) []byte// 将s中的字符全部替换成标题并返回 func ToLowerSpecial(c unicode.SpecialCase, s []byte) []byte// 使用指定的映射表将 s 中的所有字符修改为小写格式返回。 func ToUpperSpecial(c unicode.SpecialCase, s []byte) []byte// 使用指定的映射表将 s 中的所有字符修改为大写格式返回。 func ToTitleSpecial(c unicode.SpecialCase, s []byte) []byte// 使用指定的映射表将 s 中的所有字符修改为标题格式返回。 func Trim(s []byte, cutset string) []bytefunc TrimLeft(s []byte, cutset string) []bytefunc TrimRight(s []byte, cutset string) []byte// 以上方法返回去掉s两边（左边、右边）包含在cutset中字符的切片 func TrimFunc(s []byte, f func(r rune) bool) []bytefunc TrimLeftFunc(s []byte, f func(r rune) bool) []bytefunc TrimRightFunc(s []byte, f func(r rune) bool) []byte// 以上方法返回去掉s两边（左边、右边）符合f方法字符的切片 func TrimPrefix(s, prefix []byte) []byte// 去掉s的前缀prefix func TrimSuffix(s, suffix []byte) []byte// 去掉s的后缀suffix func TrimSpace(s []byte) []byte// 去掉两边的空白 func NewBuffer(buf []byte) *Buffer// 将buf包装成bytes.Buffer对象 func NewBufferString(s string) *Buffer// 将s转换成[]byte后，包装成bytes.Buffer对象 func NewReader(b []byte) *Reader// 将b包装成bytes.Reader对象 Buffer结构体 1234567891011// A Buffer is a variable-sized buffer of bytes with Read and Write methods.// The zero value for Buffer is an empty buffer ready to use.type Buffer struct &#123; buf []byte // contents are the bytes buf[off : len(buf)] off int // read at &amp;buf[off], write at &amp;buf[len(buf)] bootstrap [64]byte // memory to hold first slice; helps small buffers avoid allocation. lastRead readOp // last read operation, so that Unread* can work correctly. // FIXME: it would be advisable to align Buffer to cachelines to avoid false // sharing.&#125; Buffer的方法： func (b *Buffer) Bytes() []byte// 引用未读取部分的数据切片（不移动读取位置） func (b *Buffer) Cap() int// 返回缓冲区容量 func (b *Buffer) Grow(n int)// 自动增加缓存容量，以保证有n字节的剩余空间// 如果n&lt;0或者无法增加容量则会报Panic func (b *Buffer) Len() int// 返回未读缓冲区的字节长度，b.Len()==len(b.Bytes()) func (b *Buffer) Next(n int) []byte// 返回缓冲区中的下n个字节数据的切片，并推进读取位置（类似于返回的字节数据已经被读取）。// 如果n大于缓冲区长度，则返回整个缓冲区数据。// 返回的切片仅在下一次调用Read或Write方法前有效。 func (b *Buffer) Read(p []byte) (n int, err error)// 从缓冲区读取len(p)个字节或整个缓冲区到p中，返回读取的字节数n，如果没有数据可返回，则err=io.EOF。 func (b *Buffer) ReadByte() (byte, error)// 从缓冲区读取一个字节并返回，如果没有可返回的数据，err=io.EOF。 func (b *Buffer) ReadBytes(delim byte) (line []byte, err error)// 从缓存中读取数据直到遇到delim时停止并返回包含delim的切片。// 如果期间遇到错误，则返回遇到错误之前读取的数据并返回err。 func (b *Buffer) ReadFrom(r io.Reader) (n int64, err error)// 从r中读取数据直到遇到EOF并且写入缓存区，必要时会增大缓存。// 返回读取到的字节数量n，遇到除了EOF的其他错误也会返回结果。// 如果缓存变的太大将会报一个ErrTooLarge的Panic错误。 func (b *Buffer) ReadRune() (r rune, size int, err error)// 从缓存中读取并返回下一个UTF8编码字符，没有合适的字节则返回io.EOF。 func (b *Buffer) ReadString(delim byte) (line string, err error)// 从缓存中读取直到第一次遇到delim字节，并作为string返回这个包含delim的数据。 func (b *Buffer) Reset()// 将b重置并清空数据，如同Truncate(0)。 func (b *Buffer) String() string// 将缓冲区所有未读数据作为string返回，如果b是nil，则返回”“。 func (b *Buffer) Truncate(n int)// 从缓冲区中丢弃第n个未读数据之后数据，如果nCap则报Panic。 func (b *Buffer) UnreadByte() error// 撤销最近一次的读操作中的最后字节数据。// 如果在这之前执行了write或者最后一次读取返回了错误或者最后读取了空字节，则该方法会返回一个错误。 func (b *Buffer) UnreadRune() error// 类似UnreadByte()，但是严格要求最后一次读取是Rune，否则报错。 func (b *Buffer) Write(p []byte) (n int, err error)// 将p中的数据写入缓存，并返回写入的字节数n和可能发生的错误。 func (b *Buffer) WriteByte(c byte) error// 往缓存中写入一个字节c并返回可能发生的错误(通常是nil)。// 如果缓存扩容太大，则会报一个ErrTooLarge的Panic。 func (b *Buffer) WriteRune(r rune) (n int, err error)// 同WriteByte，返回写入长度和可能发生的错误(通常是nil)。 func (b *Buffer) WriteString(s string) (n int, err error)// 同WriteByte，将s的内容写入缓存，返回写入长度和可能发生的错误。 func (b *Buffer) WriteTo(w io.Writer) (n int64, err error)// 将缓存数据写入w直到写入完毕或发生错误。 Buffer的示列： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182package bytesimport ( \"bytes\" \"fmt\")func Buffer()&#123; bt := make([]byte, 0) buffer := bytes.NewBuffer(bt) buffer.Write([]byte(\"Hello\")) fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // Hello, 5, 5 buffer.WriteString(\" World\") fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // Hello World, 16, 11 buffer.WriteByte('!') fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // Hello World!, 16, 12 buffer.WriteRune('$') fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // Hello World!$, 16, 13 r, size, _ := buffer.ReadRune() fmt.Printf(\"%q, %d\\n\", r, size) // 'H', 1 fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // ello World!$, 16, 12 buffer.UnreadRune() fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // Hello World!$, 16, 13 b , _ :=buffer.ReadByte() fmt.Printf(\"%q\\n\", b) // 'H' fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // ello World!$, 16, 12 buffer.UnreadByte() fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // Hello World!$, 16, 13 line, _ := buffer.ReadBytes('l') fmt.Printf(\"%q\\n\", line) // \"Hel\" fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // lo World!$, 16, 10 buffer.UnreadByte() fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // llo World!$, 16, 11 str, _ := buffer.ReadString('o') fmt.Printf(\"%q\\n\", str) // \"llo\" fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // World!$, 16, 8 buffer.UnreadByte() fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // o World!$, 16, 9 next := buffer.Next(2) fmt.Printf(\"%q\\n\", next) // \"o \" fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // World!$, 16, 7 btRead := make([]byte, 2) n, _ := buffer.Read(btRead) fmt.Printf(\"%d\\n\", n) // 2 fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // rld!$, 16, 5 buffer.Grow(3) fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // rld!$, 16, 5 buffer.Grow(4) fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // rld!$, 36, 5 buffer.Truncate(4) fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // rld!, 36, 4 buffer.Reset() fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // , 36, 0 bt1 := []byte(\"I see you.\") bf1 := bytes.NewReader(bt1) n64, _ :=buffer.ReadFrom(bf1) fmt.Printf(\"%d\\n\", n64) // 10 fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // I see you., 584, 10 bt2 := make([]byte, 0) bf2 := bytes.NewBuffer(bt2) n64, _ = buffer.WriteTo(bf2) fmt.Printf(\"%d, %q, %q\\n\", n64, bf2, bt2) // 10, \"I see you.\", \"\" fmt.Printf(\"%s, %d, %d\\n\", buffer, buffer.Cap(), buffer.Len()) // , 584, 0&#125; Reader结构体 1234567891011// bytes.Reader 实现了如下接口：// io.ReadSeeker// io.ReaderAt// io.WriterTo// io.ByteScanner// io.RuneScannertype Reader struct &#123; s []byte i int64 // current reading index prevRune int // index of previous rune; or &lt; 0&#125; Reader的方法： func (r *Reader) Len() int// 返回未读部分的数据长度。 func (r *Reader) Size() int64// 返回底层数据的总长度。 func (r *Reader) Reset(b []byte)// 将底层数据切换为b，同时复位所有标记。 func (r *Reader) Read(b []byte) (n int, err error)func (r *Reader) ReadAt(b []byte, off int64) (n int, err error)func (r *Reader) ReadByte() (byte, error)func (r *Reader) ReadRune() (ch rune, size int, err error)func (r *Reader) Seek(offset int64, whence int) (int64, error)func (r *Reader) UnreadByte() errorfunc (r *Reader) UnreadRune() errorfunc (r *Reader) WriteTo(w io.Writer) (n int64, err error) Reader的示列： 1234567891011121314151617181920212223242526272829package bytesimport ( \"bytes\" \"fmt\")func Reader()&#123; b1 := []byte(\"你好，世界！\") b2 := []byte(\"Hello World!\") buf := make([]byte, 9) rd := bytes.NewReader(b1) n, _ := rd.Read(buf) fmt.Printf(\"%q, %d, %d, %d\\n\", buf, rd.Len(), rd.Size(), n) // \"你好，\", 9, 18, 9 n, _ = rd.Read(buf) fmt.Printf(\"%q, %d, %d, %d\\n\", buf, rd.Len(), rd.Size(), n) // \"世界！\", 0, 18, 9 rd.Reset(b2) buf = make([]byte, 6) n, _ = rd.Read(buf) fmt.Printf(\"%q, %d, %d, %d\\n\", buf, rd.Len(), rd.Size(), n) // \"Hello \", 6, 12, 6 n, _ = rd.Read(buf) fmt.Printf(\"%q, %d, %d, %d\\n\", buf, rd.Len(), rd.Size(), n) // \"World!\", 0, 12, 6 rd.UnreadByte() n, _ = rd.Read(buf) fmt.Printf(\"%q, %d, %d, %d\\n\", buf, rd.Len(), rd.Size(), n) // \"!orld!\", 0, 12, 1 // UnreadByte使得最后一个字符'!'回到了rd中，在rd.Read写入buf时，则将'!'写入了buf[0]中。&#125;","tags":[{"name":"bytes","slug":"bytes","permalink":"http://www.imsry.cn/tags/bytes/"}]},{"title":"Go语言包-bufio","date":"2018-11-26T06:41:54.000Z","path":"posts/e06b9990.html","text":"一天一个Golang包，慢慢学习之“bufio” 今天学习带缓存的I/O操作，基础包“bufio”中有bufio.go和scan.go两个文件 阅读文档：官方pkg地址：https://golang.org/pkg/bufio/ 包方法 func NewReadWriter(r *Reader, w *Writer) *ReadWriter// 将r和w封装为一个bufio.Readwriter对象 func NewReader(rd io.Reader) *Reader// 将rd封装为一个bufio.Reader对象(缓存大小默认4096) func NewReaderSize(rd io.Reader, size int) *Reader// 将rd封装成一个拥有size大小缓存的bufio.Reader对象 func NewScanner(r io.Reader) *Scanner// 创建一个Scanner来扫描r func NewWriter(w io.Writer) *Writer// 将w封装成一个bufio.Writer对象(缓存大小默认4096) func NewWriterSize(w io.Writer, size int) *Writer//将w封装成一个拥有size大小缓存的bufio.Writer对象 Reader结构体 123456789// Reader 实现了对io.Reader对象的缓冲功能type Reader struct &#123; buf []byte rd io.Reader // reader provided by the client r, w int // buf read and write positions err error lastByte int lastRuneSize int&#125; func (b *Reader) Buffered() int// 返回缓存中的数据长度 func (b *Reader) Discard(n int) (discarded int, err error)// 丢弃接下来的n个字节，返回丢弃的字节长度 func (b *Reader) Peek(n int) ([]byte, error)// 返回前n字节的缓存切片 func (b *Reader) Read(p []byte) (n int, err error)// 读取len(p)个字节到p中。// 如果len(p)&gt;缓存大小，且缓存不为空，则读取全部缓存。// 若缓存为空，则从底层io.Reader直接读取 func (b *Reader) ReadByte() (byte, error)// 读出一个字节并返回 func (b *Reader) ReadBytes(delim byte) ([]byte, error)// 查找delim并读取delim及其之前的所有数据（byte切片）// 如果在找到delim之前发生错误，则返回发生错误之前的数据和error。// 当找不到delim的时候，err!=nil func (b *Reader) ReadLine() (line []byte, isPrefix bool, err error)// 返回一个单行数据(切片)，不包括行尾标记。// 如果在缓存中找不到行尾标记，isPrefix为true，表示查找未完成，否则isPrefix为false func (b *Reader) ReadRune() (r rune, size int, err error)// 读取一个UTF8字符和字符的编码长度。// 如果UTF8序列无法解码出一个正确的Unicode字符，则只读出一个字节，并返回U+FFFD字符，size返回1。 func (b *Reader) ReadSlice(delim byte) (line []byte, err error)// 查找delim并读取delim及其之前的所有数据（byte切片-引用） func (b *Reader) ReadString(delim byte) (string, error)// 查找delim并读取delim及其之前的所有数据（字符串） func (b *Reader) Reset(r io.Reader)// 丢弃任何缓存数据，重置所有状态并切换io.Reader到r func (r *Reader) Size() int// 返回（底层）缓存的字节长度 func (b *Reader) UnreadByte() error// 撤销最后一次读出的一个字节 func (b *Reader) UnreadRune() error// 撤销最后一次读出的Unicode字符// 如果最后一次执行的不是ReadRune()，则返回一个错误 func (b *Reader) WriteTo(w io.Writer) (n int64, err error)// 实现了io.WriteTo接口。// 可以（可能）对底层Reader的Read方法进行多次调用。// 如果底层Reader支持WriteTo方法，则直接调用底层方法，无需缓存。 Reader的示例： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879package bufioimport ( \"bufio\" \"bytes\" \"fmt\")func Reader()&#123; testB := bytes.NewReader([]byte(\"abcdefg\\nABCDEFG\\nh i j k\\nH I J K\\n\\nline.\")) bufRd := bufio.NewReader(testB) fmt.Println(bufRd.Buffered(), bufRd.Size()) // 0 4096 b, _ := bufRd.ReadByte() fmt.Println(bufRd.Buffered(), b, string(b)) // 37 97 a bs, _ := bufRd.ReadBytes('d') fmt.Println(bufRd.Buffered(), bs, string(bs)) // 34 [98 99 100] bcd discard, _ := bufRd.Discard(1) fmt.Println(\"discard:\", discard, \"bufferd:\", bufRd.Buffered()) // discard: 1 bufferd: 33 b, _ = bufRd.ReadByte() fmt.Println(bufRd.Buffered(), b, string(b)) // 32 102 f bs, _ = bufRd.Peek(7) fmt.Println(bufRd.Buffered(), bs, string(bs)) // 32 [103 10 65 66 67 68 69] g // ABCDE line, isPrefix, _ := bufRd.ReadLine() fmt.Println(bufRd.Buffered(), line, string(line), isPrefix) // 30 [103] g false r, size, _ := bufRd.ReadRune() fmt.Println(bufRd.Buffered(), r, string(r), size) // 29 65 A 1 slice, _ := bufRd.ReadSlice('D') fmt.Println(bufRd.Buffered(), slice, string(slice)) // 26 [66 67 68] BCD str, _ := bufRd.ReadString('G') fmt.Println(bufRd.Buffered(), str) // 23 EFG bufRd.Reset(bytes.NewReader([]byte(\"Hello World.\\nMy World.\"))) str, _ = bufRd.ReadString('r') fmt.Println(bufRd.Buffered(), str) // 13 Hello Wor bufRd.UnreadByte() fmt.Println(bufRd.Buffered()) // 14 str, _ = bufRd.ReadString('\\n') fmt.Println(bufRd.Buffered(), str) // 9 rld. // r, size, _ = bufRd.ReadRune() fmt.Println(bufRd.Buffered(), r, string(r), size) // 8 77 M 1 bufRd.UnreadRune() fmt.Println(bufRd.Buffered()) // 9 str, _ = bufRd.ReadString('\\n') fmt.Println(bufRd.Buffered(), str) // 0 My World.&#125; Writer结构体 123456789// Writer 实现了对io.Writer对象的缓冲功能// 如果在写入Writer时发生错误，则会停止继续写入和后续操作并返回这个错误。// 在所有数据被写入后，应当调用Flush方法来保证所有数据都被写入底层Writer。type Writer struct &#123; err error buf []byte n int wr io.Writer&#125; func NewWriter(w io.Writer) *Writer// 将w封装成一个bufio.Writer对象，缓存大小为4096. func NewWriterSize(w io.Writer, size int) *Writer// 将w封装成一个拥有size大小缓存的bufio.Writer对象 func (b *Writer) Available() int// 返回缓存中的可用空间 func (b *Writer) Buffered() int// 返回缓存中未提交的数据长度 func (b *Writer) Flush() error// 将缓存中的数据提交到底层io.Writer中 func (b *Writer) ReadFrom(r io.Reader) (n int64, err error)// 实现了io.ReaderFrom接口。// 如果底层writer支持ReadFrom方法且b的缓存数据为空，则直接调用底层的ReadFrom方法，不使用缓存。 func (b *Writer) Reset(w io.Writer)// 丢弃所有未被提交的缓存数据，重置所有状态并切换io.Writer到w func (b *Writer) Size() int// 以字节为单位返回(底层)缓冲区大小 func (b *Writer) Write(p []byte) (nn int, err error)// 将p中的数据写入b中，返回写入的字节数// 如果写入的字节数小于p的长度，则返回错误 func (b *Writer) WriteByte(c byte) error// 写入一个字节 func (b *Writer) WriteRune(r rune) (size int, err error)// 写入一个UTF8编码字符 func (b *Writer) WriteString(s string) (int, error)// 写入一个字符串，返回写入的字节数 Writer的示列： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869package bufioimport ( \"bufio\" \"bytes\" \"fmt\")func Writer()&#123; bt := make([]byte, 0) Bt := bytes.NewBuffer(bt) bufWt := bufio.NewWriter(Bt) fmt.Println(bufWt.Available(), bufWt.Buffered()) // 4096 0 // Write nn, _ := bufWt.Write([]byte&#123;65, 66&#125;) fmt.Println(bufWt.Available(), bufWt.Buffered()) // 4094 2 fmt.Println(nn, Bt) // 2 \"空\" bufWt.Flush() fmt.Println(bufWt.Available(), bufWt.Buffered()) // 4096 0 fmt.Println(nn, Bt) // 2 AB // WriteByte bufWt.WriteByte('C') fmt.Println(bufWt.Available(), bufWt.Buffered()) // 4095 1 fmt.Println(Bt) // AB bufWt.Flush() fmt.Println(bufWt.Available(), bufWt.Buffered()) // 4096 0 fmt.Println(Bt) // ABC // WriteRune size, _ := bufWt.WriteRune('D') fmt.Println(bufWt.Available(), bufWt.Buffered()) // 4095 1 fmt.Println(size, Bt) // 1 ABC bufWt.Flush() fmt.Println(bufWt.Available(), bufWt.Buffered()) // 4096 0 fmt.Println(Bt) // ABCD // WriteString n, _ := bufWt.WriteString(\"EFG\") fmt.Println(bufWt.Available(), bufWt.Buffered()) // 4093 3 fmt.Println(n, Bt) // 3 ABCD bufWt.Flush() fmt.Println(bufWt.Available(), bufWt.Buffered()) // 4096 0 fmt.Println(Bt) // ABCDEFG fmt.Println(bufWt.Size()) // 4096 // ReadFrom without buffered some := bytes.NewReader([]byte(\"HIJKLMN\")) nChar, _ := bufWt.ReadFrom(some) fmt.Println(bufWt.Available(), bufWt.Buffered()) //4096 0 fmt.Println(nChar, Bt) //7 ABCDEFGHIJKLMN // 这里不用调用flush，因为在ReadForm之前缓存中没有数据，直接调用底层的ReadFrom写入了数据 // 下面看下有缓存的情况，先写入一个换行 bufWt.WriteByte('\\n') fmt.Println(bufWt.Available(), bufWt.Buffered()) // 4095 1 fmt.Println(Bt) // ABCDEFGHIJKLMN // 紧接着不Flash而是直接ReadForm some2 := bytes.NewReader([]byte(\"OPQRST\")) nChar, _ = bufWt.ReadFrom(some2) fmt.Println(bufWt.Available(), bufWt.Buffered()) //4089 7 fmt.Println(nChar, Bt) //6 ABCDEFGHIJKLMN // 现在Flush然后看各个变量 bufWt.Flush() fmt.Println(bufWt.Available(), bufWt.Buffered()) // 4096 0 fmt.Println(Bt) // ABCDEFGHIJKLMN\"换行\"OPQRST&#125; Scanner结构体 12345678910111213141516171819// Scanner为读取数据提供了便捷的接口，这些数据包括但不限于有换行分界符的文本文件。// 连续调用Scan方法将会遍历文件的'Token'(指定部分)且跳过指定部分之间的字节。// 指定部分的格式由SplitFunc类型的函数定义，默认的切分函数根据行尾将输入拆分成行但不包括行尾// 本包下定义并提供的切分函数用于将文件扫描成line,bytes,UTF-8Encoded runes和空格拆分的单词。用户也可以使用自己的切分函数来替换它。// 当扫描遇到EOF、第一次I/O错误或'指定部分'太大无法存入缓冲区时停止。// 当一次扫描停止时，读取器有可能早已超出'指定部分'很远。如果程序想要对数据进行更多的控制，如错误处理或扫描更大的'指定部分'或顺序扫描，则应当使用bufio.reader来代替。type Scanner struct &#123; r io.Reader // 用户提供的reader. split SplitFunc // 拆分token的方法. maxTokenSize int // token的上限 token []byte // split返回的最后token. buf []byte // 作为参数给split的缓冲区. start int // 缓冲区起始位. end int // 缓冲区终止位. err error // Sticky error. empties int // 连续出现空token的次数. scanCalled bool // 扫描是否开始. done bool // 扫描完毕.&#125; func (s *Scanner) Buffer(buf []byte, max int)// 用于设置自定义缓存以及可扩展范围，如果max小于len(buf)，则buf的尺寸将固定不可调。// Buffer必须在第一次Scan之前设置，否则引发Panic。// 默认情况下，Scanner将会使用一个4096-bufio.MaxScanTokenSize大小的内部缓存。 func (s *Scanner) Bytes() []byte// 将最后一次扫描出的‘指定部分’作为切片（引用）返回// 下一次的扫描会覆盖本结果 func (s *Scanner) Err() error// 返回扫描过程中遇到的非EOF错误 func (s *Scanner) Scan() bool// 扫描数据中的‘指定部分’ func (s *Scanner) Split(split SplitFunc)// 设置Scanner的分切函数，必须在Scan方法之前调用 func (s *Scanner) Text() string// 最后一次扫描出的‘指定部分’作为String返回 Scanner的示例： 123456789101112131415161718192021222324252627282930313233343536373839404142434445package bufioimport ( \"bufio\" \"bytes\" \"fmt\")func Scan()&#123; b1 := bytes.NewReader([]byte(\"ABC\\nDEF\\r\\nGHI\\nJKL\")) bs := bufio.NewScanner(b1) for bs.Scan() &#123; fmt.Printf(\"%s %v\\n\", bs.Bytes(), bs.Text()) &#125; // ABC ABC // DEF DEF // GHI GHI // JKL JKL b2 := bytes.NewReader([]byte(\"ABC\\nDEF GHI JKL\")) bs = bufio.NewScanner(b2) bs.Split(bufio.ScanWords) for bs.Scan() &#123; fmt.Println(bs.Text()) &#125; // ABC // DEF // GHI // JKL b3 := bytes.NewReader([]byte(\"Hello 世界！\")) bs = bufio.NewScanner(b3) bs.Split(bufio.ScanRunes) for bs.Scan() &#123; fmt.Printf(\"%v \", bs.Text()) &#125; // H e l l o 世 界 ！ fmt.Println() b4 := bytes.NewReader([]byte(\"我的天哪!\")) bs = bufio.NewScanner(b4) bs.Split(bufio.ScanBytes) for bs.Scan() &#123; fmt.Printf(\"%v \", bs.Bytes()) &#125; // [230] [136] [145] [231] [154] [132] [229] [164] [169] [229] [147] [170] [33] fmt.Println()&#125; 另外的参考： https://studygolang.com/articles/4367 https://www.cnblogs.com/golove/p/3282667.html","tags":[{"name":"bufio","slug":"bufio","permalink":"http://www.imsry.cn/tags/bufio/"}]},{"title":"Go语言包-archive/zip","date":"2018-11-23T09:08:10.000Z","path":"posts/6200ba6d.html","text":"一天一个Golang包，慢慢学习之“archive/zip” 昨天阅读了archive包的tar包，对Go语言操作压缩包有了一定的基础，今天就继续把另外一个包“zip”也来熟悉一下。 阅读文档：官方pkg地址：https://golang.org/pkg/archive/zip/ 今天同样从官方的包文档中提取几个主要的内容出来分享一下： 常量 1234const ( Store uint16 = 0 // no compression Deflate uint16 = 8 // DEFLATE compressed) 变量 12345var ( ErrFormat = errors.New(\"zip: not a valid zip file\") // 不合法的zip文件 ErrAlgorithm = errors.New(\"zip: unsupported compression algorithm\") // 不支持的压缩算法 ErrChecksum = errors.New(\"zip: checksum error\") //校验错误) FileHeader结构体 12345678910111213141516171819202122232425type FileHeader struct &#123; Name string // 文件名，必须是相对路径，不能以设备或斜杠开始，分隔符用'/'表示 Comment string NonUTF8 bool // Go 1.10 CreatorVersion uint16 ReaderVersion uint16 Flags uint16 Method uint16 Modified time.Time // Go 1.10 ModifiedTime uint16 // Deprecated: Legacy MS-DOS date; use Modified instead. ModifiedDate uint16 // Deprecated: Legacy MS-DOS time; use Modified instead. CRC32 uint32 CompressedSize uint32 // Deprecated: Use CompressedSize64 instead. UncompressedSize uint32 // Deprecated: Use UncompressedSize64 instead. CompressedSize64 uint64 // Go 1.1 UncompressedSize64 uint64 // Go 1.1 Extra []byte ExternalAttrs uint32 // Meaning depends on CreatorVersion&#125; FileHeader相关的方法： func FileInfoHeader(fi os.FileInfo) (*FileHeader, error) // 通过传入的fi填充一个FileHeader并返回，由于os.FileInfo的Name方法只返回文件描述的Name，所以实际使用有可能需要自行修改为完整的全路径 func (h *FileHeader) FileInfo() os.FileInfo // 返回一个os.FileInfo func (h *FileHeader) ModTime() time.Time // 修改时间 func (h *FileHeader) Mode() (mode os.FileMode) // 权限和模式位 func (h *FileHeader) SetModTime(t time.Time) // 设置修改时间 func (h *FileHeader) SetMode(mode os.FileMode) // 设置权限 ReadCloser结构体 1234type ReadCloser struct &#123; Reader // contains filtered or unexported fields&#125; ReadCloser的相关方法： func OpenReader(name string) (*ReadCloser, error) // 传入文件名(路径)，返回一个ReadCloser指针(继承了Reader) func (rc *ReadCloser) Close() error // 关闭ReadCloser Reader结构体 12345type Reader struct &#123; File []*File Comment string // contains filtered or unexported fields&#125; Reader的相关方法： func NewReader(r io.ReaderAt, size int64) (*Reader, error) // 从r中读取size个字节并返回一个新的Reader func (z *Reader) RegisterDecompressor(method uint16, dcomp Decompressor) Writer结构体 123type Writer struct &#123; // contains filtered or unexported fields&#125; Writer的相关方法： func NewWriter(w io.Writer) *Writer // 创建并返回一个将zip文件写入w的Writer func (w *Writer) Close() error // 关闭Writer func (w *Writer) Create(name string) (io.Writer, error) // 使用name添加一个文件到zip文件中，返回一个Writer。name必须是相对路径，不能以设备或斜杠开头，用’/‘作为分隔符。新增文件内容必须在下一次调用CreateHeader、Create或Close方法前全部写入。 func (w *Writer) CreateHeader(fh *FileHeader) (io.Writer, error) // 使用fh所描述的元数据添加一个文件到zip文件中，并返回一个用于写入数据的io.Writer。 func (w *Writer) Flush() error // 将缓存写入底层IO 等等.. 实现一个跟昨天一样的需求：简单的创建和读取压缩包，传送门 代码实现1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071package zipimport ( \"archive/zip\" \"fmt\" \"io\" \"log\" \"os\" \"time\")var( filePath = \"/tmp/go/learn/data/zipArchive.zip\")func CreateArchive()&#123; fmt.Println(\"This is function CreateArchive called\") var files = []struct&#123; Name, Body string &#125;&#123; &#123;\"Readme.md\", \"## Hello World\\n1. line 1\\n2. line 2\\n3. line 3\"&#125;, &#123;\"gopher.txt\", \"Gopher names:\\nGorge\\nGeoffrey\\nGonzo\"&#125;, &#123;\"todo.txt\", \"Get animal handling licence.\\nWrite more examples\"&#125;, &#123;\"myDir/file.txt\", \"This is a sub dir's file\"&#125;, &#125; fi, err := os.Create(filePath) defer fi.Close() if err != nil &#123; log.Fatal(err) &#125; zw := zip.NewWriter(fi) for _, file := range files &#123; fh := &amp;zip.FileHeader&#123; Name: file.Name, Modified: time.Now(), &#125; // 这里也可以使用 f, err := zw.Create(file.Name); 快速创建文件 if f, err := zw.CreateHeader(fh); err != nil&#123; log.Fatal(err) &#125;else&#123; if _, err := f.Write([]byte(file.Body));err != nil &#123; log.Fatal(err) &#125; &#125; &#125; if err = zw.Close(); err != nil &#123; log.Fatal(err) &#125; fmt.Println(\"Created Archive file is stored in:\", filePath)&#125;func ReadArchive()&#123; fmt.Println(\"This is function ReadeArchive called\") zr, err := zip.OpenReader(filePath) if err != nil &#123; log.Fatal(err) &#125; defer zr.Close() for _, f := range zr.File &#123; fmt.Printf(\"\\tContents of %s:\\n\",f.Name) if rc, err := f.Open();err != nil &#123; log.Fatal(err) &#125;else&#123; if _, err := io.Copy(os.Stdout, rc, ); err != nil &#123; log.Fatal(err) &#125; rc.Close() fmt.Println() &#125; &#125;&#125; 通过今天的学习，突然发现了昨天的tar并没有涉及到压缩，所以它应该就是个普通的归档，而zip中带有了压缩算法，所以它可以被称为压缩包。不过我今天也悄悄的看了一下tar.gz的相关内容，非常简单！这里就不多说，感兴趣的自行移步官方文档。","tags":[{"name":"archive","slug":"archive","permalink":"http://www.imsry.cn/tags/archive/"},{"name":"zip","slug":"zip","permalink":"http://www.imsry.cn/tags/zip/"}]},{"title":"Go语言包-archive/tar","date":"2018-11-22T09:33:52.000Z","path":"posts/5df3d88.html","text":"一天一个Golang包，慢慢学习之“archive/tar” 今天了解一下归档（压缩包）中的tar包，我们对压缩包其实并不陌生，像是”某某.tar”，自然能想到应该用压缩包工具打开并解压出来使用。 阅读文档：官方pkg地址：https://golang.org/pkg/archive/tar/ 从官方的包文档中，我提取几个主要的内容出来分享一下： 常量 123456789101112131415161718192021222324252627282930313233343536const ( // Type '0' indicates a regular file.(普通文件) TypeReg = '0' TypeRegA = '\\x00' // Deprecated: Use TypeReg instead. // Type '1' to '6' are header-only flags and may not have a data body. TypeLink = '1' // Hard link(硬链接) TypeSymlink = '2' // Symbolic link(软链接/符号链接) TypeChar = '3' // Character device node(字符设备节点) TypeBlock = '4' // Block device node(块设备节点) TypeDir = '5' // Directory(目录) TypeFifo = '6' // FIFO node // Type '7' is reserved.（保留项） TypeCont = '7' // Type 'x' is used by the PAX format to store key-value records that // are only relevant to the next file. // This package transparently handles these types. TypeXHeader = 'x' // 可扩展头部 // Type 'g' is used by the PAX format to store key-value records that // are relevant to all subsequent files. // This package only supports parsing and composing such headers, // but does not currently support persisting the global state across files. TypeXGlobalHeader = 'g' // 全局扩展头部 // Type 'S' indicates a sparse file in the GNU format. TypeGNUSparse = 'S' // 稀疏文件 // Types 'L' and 'K' are used by the GNU format for a meta file // used to store the path or link name for the next file. // This package transparently handles these types. TypeGNULongName = 'L' TypeGNULongLink = 'K') 变量(主要用于错误输出) 123456var ( ErrHeader = errors.New(\"archive/tar: invalid tar header\") // 无效的tar头部 ErrWriteTooLong = errors.New(\"archive/tar: write too long\") // 写入数据太长 ErrFieldTooLong = errors.New(\"archive/tar: header field too long\") // 头部太长 ErrWriteAfterClose = errors.New(\"archive/tar: write after close\") // 关闭后写入) Header结构体 1234567891011121314151617181920212223242526type Header struct &#123; Typeflag byte // the type of header entry.(文件类型) Name string // 文件名称 Linkname string // 链接名称 (适用于硬链接和软链接) Size int64 // 文件的字节大小 Mode int64 // 权限，如：0600 Uid int // 用户ID Gid int // 组ID Uname string // 用户名 Gname string // 组名 ModTime time.Time // 最后一次修改文件或目录的时间 AccessTime time.Time // 最后一次访问文件或目录的时间 ChangeTime time.Time // 最后一次改变文件或目录(改变的是原数据即:属性)的时间 Devmajor int64 // Major device number (valid for TypeChar or TypeBlock)(字符设备或块设备的主设备号) Devminor int64 // Minor device number (valid for TypeChar or TypeBlock)(字符设备或块设备的次设备号) Xattrs map[string]string // Go 1.3 PAXRecords map[string]string // Go 1.10 Format Format // Go 1.10&#125; Header的相关方法： func FileInfoHeader(fi os.FileInfo, link string)(*Header, error) //该方法通过os.FileInfo来创建一个tar.Header，用在对已有文件打包十分方便 func (h *Header) FileInfo() os.FileInfo // 该方法获取Header的os.FileInfo信息 Reader结构体 1234567891011type Reader struct &#123; r io.Reader pad int64 // Amount of padding (ignored) after current file entry curr fileReader // Reader for current file entry blk block // Buffer to use as temporary local storage // err is a persistent error. // It is only the responsibility of every exported method of Reader to // ensure that this error is sticky. err error&#125; Reader结构体有以下方法：func NewReader(r io.Reader) *Reader // 用r创建新的tar.Reader func (tr *Reader) Next() (*Header, error) // 使tr指向下一个文件实体并返回实体的Header，到最后会返回err为io.EOF func (tr *Reader) Read(b []byte) (int, error) // 读取当前实体到b，读取到最后时返回err为io.EOF 阅读到这儿，基本就可以解析一个tar文件了，从上述的方法我们可以得知，要想获得压缩包的内容，我们可以使用tar.Reader来完成，而tar.Reader的创建可以通过使用tar.NewReader()方法，该方法需要提供一个实现了io.Reader接口的对象，此对象可以通过os包的方法如os.Open()或者os.OpenFile()等方法获得。根据这个思路，我们便可以解析获得tar文件的所有内容了。 Writer结构体 123456789101112type Writer struct &#123; w io.Writer pad int64 // Amount of padding to write after current file entry curr fileWriter // Writer for current file entry hdr Header // Shallow copy of Header that is safe for mutations blk block // Buffer to use as temporary local storage // err is a persistent error. // It is only the responsibility of every exported method of Writer to // ensure that this error is sticky. err error&#125; Writer结构体有如下方法：func NewWriter(w io.Writer) *Writer // 用w创建新的tar.Writer func (tw *Writer) Close() error // 关闭tar文件，并将未写入的数据写入底层writerfunc (tw *Writer) Flush() error // 完成当前写入 func (tw *Writer) Write(b []byte) (int, error) // 将b写入当前实体，如果写入长度大于WriteHeader所描述的Size，则会返回err为ErrWriteTooLong的报错 func (tw *Writer) WriteHeader(hdr *Header) error // 将hdr写入tar文件中并准备接受Write()方法的写入，hdr.Size决定写入的文件字节大小。如果未完全写入，则会报错。写入hdr之前会隐式调用Flash()。 下面我们假设这样一个需求： 需求描述： 创建一个压缩包文件，命名为：”tarArchive.tar”。 压缩包中存有3个文本文档，分别命名：”readme.md”、”gopher.txt”、”todo.txt”，内容随意。 压缩包中还有一个目录(命名:dir)，其中有一个文件:dirFile.txt，内容随意 将压缩包保存在”/tmp/go/learn/data”目录中。 读取压缩包内容，并打印文件(或目录)以及文件内容。 求解过程： 最终结果是要创建一个文件，所以我们先创建这个文件：这里用到f, err := os.OpenFile()方法来获取一个文件指针 然后创建一个tar的Writer对象来实现对文件的写入：tw := tar.NewWriter(f)，获得的tw对象就是一个写入器，他有Write方法。 构建一个文件列表（任何方式，为了方便用循环添加文件）。 使用tw.WriteHeader()和tw.Write()方法向压缩包写入文件。 关闭文件和写入器：f.Close()、tw.Close()，tar文件创建完毕。 读取tar文件，并使用tar.NewReader()获得Reader对象。 循环Next()方法获得hdr并打印hdr.Name以及Reader的内容 判断io.EOF结束并关闭文件。 完整代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172package tarimport ( \"archive/tar\" \"fmt\" \"io\" \"log\" \"os\")var( filePath = \"/tmp/go/learn/data/tarArchive.tar\")func CreateArchive()&#123; f, err := os.OpenFile(filePath, os.O_CREATE|os.O_WRONLY|os.O_TRUNC, 0666) if err != nil &#123; log.Fatal(err) &#125; defer f.Close() tw := tar.NewWriter(f) var files = []struct&#123; Name, Body string &#125;&#123; &#123;\"Readme.md\", \"This is a readme markdown file.\"&#125;, &#123;\"gopher.txt\", \"Gopher names:\\nGeorge\\nGeoffrey\\nGonzo\"&#125;, &#123;\"todo.txt\", \"Get animal handling license.\"&#125;, &#123;\"dir/dirFile.txt\", \"it's content is in directory\"&#125;, &#125; // 创建一个名字叫做myDir2的目录，用于区分上述的dir/dirFile.txt中的目录 if err = tw.WriteHeader(&amp;tar.Header&#123;Name: \"myDir2\",Mode: 0766,Typeflag:tar.TypeDir&#125;); err != nil&#123; log.Fatal(err) &#125; for _, file := range files &#123; hdr := &amp;tar.Header&#123; Name: file.Name, Mode: 0600, Size: int64(len(file.Body)), &#125; if err := tw.WriteHeader(hdr); err != nil &#123; log.Fatal(err) &#125; if _, err := tw.Write([]byte(file.Body)); err != nil &#123; log.Fatal(err) &#125; &#125; if err := tw.Close(); err != nil &#123; log.Fatal(err) &#125;&#125;func ReadArchive()&#123; f, err := os.OpenFile(filePath, os.O_RDONLY, 0) if err != nil &#123; log.Fatal(err) &#125; defer f.Close() tr := tar.NewReader(f) for &#123; hdr, err := tr.Next() if err == io.EOF &#123; break &#125; if err != nil &#123; log.Fatal(err) &#125; fmt.Printf(\"Contents of %s:\\n\",hdr.Name) if _, err := io.Copy(os.Stdout, tr); err != nil &#123; log.Fatal(err) &#125; fmt.Println(\"\\n====\") &#125;&#125; 注意：代码中有关myDir目录和myDir2目录的创建方式不一样，但是效果差异不大 扩展阅读：利用compress/gzip压缩和解压:https://golang.org/pkg/compress/gzip/","tags":[{"name":"archive","slug":"archive","permalink":"http://www.imsry.cn/tags/archive/"},{"name":"tar","slug":"tar","permalink":"http://www.imsry.cn/tags/tar/"}]},{"title":"判断IP地址是否内网IP","date":"2018-11-05T06:45:52.000Z","path":"posts/ae0c030a.html","text":"当你的服务同时开放于公网和内网，子服务却仅允许内网访问，那么则会涉及到IP白名单的功能。但是如果名单太多或者服务进行了迁移，那么维护起来会相当的麻烦，最简单的就是判断访问的来源IP是否内网IP地址，从而直接屏蔽掉公网IP。 首先，我们认识了3类私有地址： A类：10.0.0.0-10.255.255.255 B类：172.16.0.0-172.31.255.255 C类：192.168.0.0-192.168.255.255 还有一个本机地址：127.0.0.1 他们就是我们平时所谓的内网IP地址。 方法一： PHP自带函数 filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE) 如果$IP是内网IP则会返回false，否则返回ip字符串。 1234567$IP = get_client_ip(); //该方法自己实现，返回客户端的IP地址$is_publicIP = filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE);if($is_publicIP)&#123; echo '公网IP';&#125;else&#123; echo '内网IP';&#125; 方法二： 适合有网络基础的胖友阅读关于IP地址的知识，这里就不讲太多了，下面的方法就是根据IP地址的定义和网段的划分等专业知识进行判定的。懂的就自然懂啦！ 123456789101112131415&lt;?phpfunction isLocal($ip)&#123; $long=ip2long($ip); $data=array( 24=&gt;'10.255.255.255', 20=&gt;'172.31.255.255', 16=&gt;'192.168.255.255' ); foreach($data as $k=&gt;$v)&#123; if($long &gt;&gt; $k === ip2long($v)&gt;&gt;$k)&#123; return true; &#125; &#125; return false;&#125; 方法三：正则匹配更加不用解释了。 1234&lt;?phpfunction isLocal($ip)&#123; return preg_match('%^127\\.|10\\.|192\\.168|172\\.(1[6-9]|2|3[01])%',$ip);&#125; 参考： http://php.net/manual/zh/function.filter-var.php https://www.51-n.com/t-4360-1-1.html https://blog.csdn.net/z_qifa/article/details/75497577","tags":[{"name":"PHP","slug":"PHP","permalink":"http://www.imsry.cn/tags/PHP/"},{"name":"IP","slug":"IP","permalink":"http://www.imsry.cn/tags/IP/"}]},{"title":"更新升级MacOSX到10.14 Mojave (MacBook Air 13-inch early 2014)","date":"2018-10-24T07:13:17.000Z","path":"posts/106d7501.html","text":"写在前面的话：如果不是真的很需要，其实最好是不去更新系统，以免带来更多的麻烦。如果新的系统对你真的很重要，我也建议你备份现有数据，然后全新安装新的系统版本。我就是那个单纯的升级系统，导致原有的软件无法正常运行的傻逼，下面虽然记录了我的问题，但我最终的解决方案还是把软件卸载后重新安装和配置。 既然App Store推送了本次更新，我也就傻傻的更新了，谁知道会发生什么呢？ 很不开心的是，第二天上班来发现系统更新好了，直接登录！一切安好。然鹅！！！发现了好几个惊喜： svn和git命令无法执行，提示xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun Apache和PHP配置全部恢复成初始状态，所有已安装的扩展没了 OSSRS(Simple-RTMP-Server)无法运行了，提示:illegal hardware instruction，目前没找到解决方案，提了Issue看怎么说。 解决第一个问题网上给了答案，安装XCode开发者工具就好了：xcode-select --install Apache和PHP的配置的恢复，主要是指httpd.conf的覆盖和php.ini的丢失，以及PHP扩展丢失，这样我就不得不重新编写配置文件和编译安装开发所需要的全部扩展了。 这里记录一下我的操作过程，因为之前更新系统也遇到这种问题，但是没有做笔记，导致现在又遇到问题时又花了很多时间去找资料。 安装Memcache扩展从Github直接clone下来：https://github.com/websupport-sk/pecl-memcache 执行phpize出现问题： 1234567grep: /usr/include/php/main/php.h: No such file or directorygrep: /usr/include/php/Zend/zend_modules.h: No such file or directorygrep: /usr/include/php/Zend/zend_extensions.h: No such file or directoryConfiguring for:PHP Api Version: Zend Module Api No: Zend Extension Api No: 百度出来的解决方案： 1sudo ln -s /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/ /usr/include 好的，遇到了就算使用sudo还是提示权限不足的情况。 不怕，之前有经验，需要关掉系统的保护机制。操作方法就是重启电脑，按住command+R直到进入新界面，通过实用工具打开终端，输入csrutil disable关闭保护，然后reboot重启 重启完打开终端，傻傻的执行ln命令后发现还是不行！phpize依旧报错， 怪我有点笨，然后才去读这行命令的意思，发现MacOSX10.11.sdk这个目录不存在，只有一个MacOSX10.14.sdk的目录。很傻，根据自己的系统来嘛！ 所以下面的完整命令解决phpize的问题 1sudo ln -s /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/ /usr/include 然后是./configure 接着make &amp;&amp; sudo make install 执行完后再修改/etc/php.ini增加extension=memcache.so。然后重启apache:sudo apachectl -k restart 安装mcrypt扩展这个我是直接去php官网下载系统当前版本的PHP源码（php-7.1.19.tar.gz），然后解压进入ext/mcrypt目录，如上所述的执行phpize和./configure以及make &amp;&amp; sudo make install，修改php.ini增加extension=mcrypt.so。重启apache搞定。 重启打开安全策略csrutil enable电脑重启后发现memcache和mcrypt扩展无法加载，提示了文件签名的问题。无解！ 所以，重点强调！！！ 直接舍弃系统自带的PHP和Apache吧，用brew全新安装一个，管理起来也非常的方便，系统更新后也不会导致软件丢失！ 不过，遇到了新的问题，brew在安装cmake的时候出现了错误，提示如下： 1234Error: You are using macOS 10.14.We do not provide support for this pre-release version.You may encounter build failures or other breakages.Please create pull-requests instead of filing issues. 很明显，说当前系统版本时预发布版本，他们不支持，不支持！！？？ 百度了，无解，无奈就去问了Google，然后说要去下载Command Line Tools (macOS 10.14) for Xcode 10，原文：https://intellij-support.jetbrains.com/hc/en-us/community/posts/360000898980-CMake-not-compiling-after-macOS-10-14-Mojave-update 写在最后官宣，作为一个需要稳定开发环境的开发人员和开发机器来说，不是闲的蛋疼就别随便的更新系统了吧，一个上午就折腾这事儿去了，真是满脸的不愉快，晚上8点还在重装软件，今儿可是1024啊，过节啊！！","tags":[{"name":"Mac","slug":"Mac","permalink":"http://www.imsry.cn/tags/Mac/"}]},{"title":"Linux下的安装Ngrok服务器的故事","date":"2018-09-05T08:22:19.000Z","path":"posts/39d9f6df.html","text":"使用场景 公司A是一家服务提供商，公司B是一家知名企业。现在公司B中的一个软件服务出现了故障，需要公司A的专业人员来排查。由于两家公司相隔甚远，他们采用了远程排查方案。但是公司B的这个软件部署在内网环境的机器C上，层层网关以及种种原因（和谐部分）导致无法将机器C映射到公司B的公网端口。为了解决这种需要打通从一个局域网到另外一个局域网的网络通路，我们叫它‘内网穿透’。 总所周知，处在同一个局域网的所有机器是可以互通的，而不同局域网中的机器是无法跨域访问的。解决这种问题，我能想到的有： 交换机和路由 使用公网VPN服务器 使用内网穿透服务器 配置交换机和路由往往非常复杂，遇到复杂的组网环境，还是杀了我吧！ 公网VPN服务器我也试过了，使用简单，但是稳定性得不到保证。 所以我最终尝试了内网穿透服务器：Ngrok。（当然还有别的比如：frp） Ngrok简介Ngrok是一款使用GO语言开发的开源软件（仅针对1.x，2.x不开源），是一个反向代理软件。它可以在你本地运行的服务和公网服务器端点建立一条安全的隧道，这样任何一个和公网连通的客户端都可以访问和使用你的本地服务。Ngrok还可以捕获和分析所有通道上的流量，对后期的分析和处理也有相当好的支持。 Ngrok的git仓库地址：https://github.com/inconshreveable/ngrok 需要的宝贝云服务器（有公网IP的服务器） 提供这种服务的像阿里云/腾讯云/百度云等等，随便挑 域名 随便什么域名，只要是你的域名，你能对其配置解析（最好能泛解析）。 环境要求Linux服务器：CentOS、Ubuntu12345#centosyum -y install zlib-devel openssl-devel perl hg cpio expat-devel gettext-devel curl curl-devel perl-ExtUtils-MakeMaker hg wget gcc gcc-c++ git golang#ubuntu#自行对应缺啥用'apt-get'补啥，openssl golang make 等等的都得有 安装服务器克隆Ngrok到本地1git clone https://github.com/inconshreveable/ngrok.git 制作和生成证书123456789cd ngrokmkdir certcd certNGROK_DOMAIN=\"ngrok.imsry.cn\"openssl genrsa -out base.key 2048openssl req -new -x509 -nodes -key base.key -days 10000 -subj \"/CN=$NGROK_DOMAIN\" -out base.pemopenssl genrsa -out server.key 2048openssl req -new -key server.key -subj \"/CN=$NGROK_DOMAIN\" -out server.csropenssl x509 -req -in server.csr -CA base.pem -CAkey base.key -CAcreateserial -days 10000 -out server.crt 覆盖证书到Ngrok中123cp base.pem ../ngrok/assets/client/tls/ngrokroot.crtcp server.crt ../ngrok/assets/server/tls/snakeoil.crtcp server.key ../ngrok/assets/server/tls/snakeoil.key 编译生成Ngrok服务端12cd ../ngrokGOOS=linux GOARCH=amd64 make release-server 启动和运行服务端(可以写成bash脚本)1234567./bin/ngrokd -tlsKey=\"assets/server/tls/snakeoil.key\" -tlsCrt=\"assets/server/tls/snakeoil.crt\" -domain=\"ngrok.imsry.cn\" -httpAddr=\":8081\" -httpsAddr=\":8082\" -tunnelAddr=\":8083\"#参数说明：#-domain 访问ngrok是所设置的服务地址生成证书时那个#-httpAddr http协议端口 默认为80#-httpsAddr https协议端口 默认为443 （可配置https证书）#-tunnelAddr 通道端口 默认4443 客户端的编译和使用1234567891011#window-64bit如下：GOOS=windows GOARCH=amd64 make release-client#编译成功后会在ngrok/bin/下面生成一个windows_amd64目录下面有ngrok.exe#Linux 平台 32 位系统：GOOS=linux GOARCH=386#Linux 平台 64 位系统：GOOS=linux GOARCH=amd64#Windows 平台 32 位系统：GOOS=windows GOARCH=386#Windows 平台 64 位系统：GOOS=windows GOARCH=amd64#MAC 平台 32 位系统：GOOS=darwin GOARCH=386#MAC 平台 64 位系统：GOOS=darwin GOARCH=amd64#ARM 平台：GOOS=linux GOARCH=arm 编写配置文件ngrok.cfg1234567891011121314151617181920212223server_addr: \"ngrok.imsry.cn:8083\"trust_host_root_certs: falsetunnels: http: subdomain: \"test\" proto: http: \"80\" https: subdomain: \"test\" proto: https: \"443\" tcp: remote_port: 5555 proto: tcp: \"8001\" ssh: remote_port: 2222 proto: tcp: \"22\" 启动客户端1234./ngrok -config=ngrok.cfg start-all #启动所有服务./ngrok -config=ngrok.cfg start ssh #启动SSH服务./ngrok -config=ngrok.cfg start ssh http #启动SSH和HTTP服务 出现下面内容，表示链接成功： 1234567891011ngrokTunnel Status onlineVersion 1.7/1.7Forwarding http://test.ngrok.imsry.cn8081 -&gt; 127.0.0.1:80Forwarding https://test.ngrok.imsry.cn:8082 -&gt; 127.0.0.1:443Forwarding tcp://test.ngrok.imsry.cn:5555 -&gt; 127.0.0.1:8001Forwarding tcp://test.ngrok.imsry.cn:2222 -&gt; 127.0.0.1:22Web Interface 127.0.0.1:4040# Conn 0Avg Conn Time 0.00ms 开始访问你的服务吧！ 直接访问上面的地址就能取得相应的服务如果是ssh和tcp的话，直接使用如：ssh anthony@ngrok.imsry.cn -p 2222","tags":[{"name":"ngrok","slug":"ngrok","permalink":"http://www.imsry.cn/tags/ngrok/"}]},{"title":"不同语言下文件读取和排序测试","date":"2018-08-22T06:32:38.000Z","path":"posts/9739d7d7.html","text":"测试机器配置： MacBook Air (13-inch, Early 2014) 处理器：1.4 GHz Intel Core i5 内存：4 GB 1600 MHz DDR3 PHP123PHP 7.1.16 (cli) (built: Mar 31 2018 02:59:59) ( NTS )Copyright (c) 1997-2018 The PHP GroupZend Engine v3.1.0, Copyright (c) 1998-2018 Zend Technologies 12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;?php$t1 = microtime(true); $fileName = \"Data.txt\";if(($file=fopen($fileName,'r')) === false)&#123; echo '读取文件:'.$fileName.\"失败\\n\"; exit;&#125;if(empty($file))&#123; echo \"文件为空!\\n\"; exit;&#125;$data = array();while(!feof($file))&#123; $lineStr = fgets($file); array_push($data, trim($lineStr));&#125;$t2 = microtime(true);echo 'Read time:' . ($t2 - $t1)*1000 . \"ms\\n\"; BubbleSort($data);var_dump($data);fclose($file);$t3 = microtime(true); echo 'Sort time:' . ($t3 - $t2)*1000 . \"ms\\n\"; echo 'Finished time:' . ($t3 - $t1)*1000 . \"ms\\n\"; function BubbleSort(&amp;$data)&#123; $len = count($data); for($i=0;$i&lt;$len;$i++)&#123; $flag = 0; for($j=1;$j&lt;($len-$i);$j++)&#123; if($data[$j]&lt;$data[$j-1]) &#123; $tmp = $data[$j]; $data[$j] = $data[$j-1]; $data[$j-1] = $tmp; $flag = 1; &#125; &#125; if($flag == 0)&#123; return; &#125; &#125;&#125;?&gt; 测试结果： 123456789101112131415161718192021222324~/Sites/languageDiff/sort » php sort.phpRead time:20.021915435791msSort time:219256.12616539msFinished time:219276.14808083ms-------------------------------------------------------~/Sites/languageDiff/sort » php sort.phpRead time:19.091129302979msSort time:229677.68502235msFinished time:229696.77615166ms-------------------------------------------------------~/Sites/languageDiff/sort » php sort.phpRead time:21.70205116272msSort time:228220.97086906msFinished time:228242.67292023ms-------------------------------------------------------~/Sites/languageDiff/sort » php sort.phpRead time:20.930051803589msSort time:206329.57100868msFinished time:206350.50106049ms-------------------------------------------------------~/Sites/languageDiff/sort » php sort.phpRead time:18.213033676147msSort time:201813.07411194msFinished time:201831.28714561ms Java123java version &quot;10.0.1&quot; 2018-04-17Java(TM) SE Runtime Environment 18.3 (build 10.0.1+10)Java HotSpot(TM) 64-Bit Server VM 18.3 (build 10.0.1+10, mixed mode) 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455import java.io.BufferedReader;import java.io.FileNotFoundException;import java.io.FileReader;import java.io.IOException;public class sort &#123; public static void main(String[] args) &#123; try &#123; long t1 = System.currentTimeMillis(); int[] data = new int[50000]; BufferedReader br = new BufferedReader(new FileReader(\"Data.txt\")); String line = null; int index = 0; while ((line = br.readLine()) != null) &#123; data[index] = Integer.parseInt(line); index++; &#125; if (br != null) &#123; br.close(); &#125; long t2 = System.currentTimeMillis(); System.out.println(\"Read time: \" + String.valueOf(t2 - t1) + \"ms\"); BubbleSort(data); long t3 = System.currentTimeMillis(); System.out.println(\"Sort time: \" + String.valueOf(t3 - t2) + \"ms\"); System.out.println(\"Finished time: \" + String.valueOf(t3 - t1) + \"ms\"); &#125; catch (FileNotFoundException e) &#123; e.printStackTrace(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; public static void BubbleSort(int[] a) &#123; int j, flag; int temp; for (int i = 0; i &lt; a.length; i++) &#123; flag = 0; for (j = 1; j &lt; a.length - i; j++) &#123; if (a[j] &lt; a[j-1]) &#123; temp = a[j]; a[j] = a[j - 1]; a[j - 1] = temp; flag = 1; &#125; &#125; if (flag == 0) &#123; return; &#125; &#125; &#125;&#125; 测试结果： 123456789101112131415161718192021222324~/Sites/languageDiff/sort » java sortRead time: 56msSort time: 5286msFinished time: 5342ms-------------------------------------------------------~/Sites/languageDiff/sort » java sortRead time: 47msSort time: 4911msFinished time: 4958ms-------------------------------------------------------~/Sites/languageDiff/sort » java sortRead time: 46msSort time: 4903msFinished time: 4949ms-------------------------------------------------------~/Sites/languageDiff/sort » java sortRead time: 47msSort time: 4953msFinished time: 5000ms-------------------------------------------------------~/Sites/languageDiff/sort » java sortRead time: 49msSort time: 5335msFinished time: 5384ms Go1go version go1.10.3 darwin/amd64 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657package mainimport ( \"bufio\" \"fmt\" \"io\" \"os\" \"strconv\" \"time\")func main() &#123; fileName := \"Data.txt\" data := make([]int, 0, 50000) start := time.Now() fi, err := os.Open(fileName) if err != nil &#123; fmt.Printf(\"Error: %s\\n\", err) return &#125; defer fi.Close() br := bufio.NewReader(fi) for &#123; a, _, c := br.ReadLine() if c == io.EOF &#123; break &#125; num, _ := strconv.Atoi(string(a)) data = append(data, num) &#125; endReadTime := time.Now() fmt.Printf(\"Read time: %fs\\n\", endReadTime.Sub(start).Seconds()) BubbleSort(data) endTime := time.Now() fmt.Printf(\"Sort time: %fs\\n\", endTime.Sub(endReadTime).Seconds()) fmt.Printf(\"finished time: %fs\\n\", endTime.Sub(start).Seconds())&#125;func BubbleSort(arr []int) &#123; length := len(arr) var flag int var tmp int for i := 0; i &lt; length; i++ &#123; flag = 0 for j := 1; j &lt; (length - i); j++ &#123; if arr[j] &lt; arr[j-1] &#123; tmp = arr[j] arr[j] = arr[j-1] arr[j-1] = tmp flag = 1 &#125; &#125; if flag == 0 &#123; return &#125; &#125;&#125; 测试结果： 12345678910111213141516171819202122232425~/Sites/languageDiff/sort » go build sort.go~/Sites/languageDiff/sort » ./sortRead time: 0.006603sSort time: 5.207361sfinished time: 5.213964s-------------------------------------------------------~/Sites/languageDiff/sort » ./sortRead time: 0.005319sSort time: 5.167615sfinished time: 5.172934s-------------------------------------------------------~/Sites/languageDiff/sort » ./sortRead time: 0.005648sSort time: 5.317512sfinished time: 5.323160s-------------------------------------------------------~/Sites/languageDiff/sort » ./sortRead time: 0.005842sSort time: 5.267731sfinished time: 5.273573s-------------------------------------------------------~/Sites/languageDiff/sort » ./sortRead time: 0.005585sSort time: 5.442154sfinished time: 5.447738s JavaScript(NodeJS)12~/Sites » node -vv9.11.1 12345678910111213141516171819202122232425262728293031323334353637383940414243444546var t1 = (new Date()).getTime(); var readline = require('readline');var fs = require('fs');var os = require('os'); var fReadName = './data.txt';var fRead = fs.createReadStream(fReadName); var objReadline = readline.createInterface(&#123; input: fRead,&#125;); var data = [];objReadline.on('line', (line)=&gt;&#123; data.push(Number(line));&#125;); objReadline.on('close', ()=&gt;&#123; var t2 = (new Date()).getTime(); console.log(\"Read time：\" + (t2 - t1) + \"ms\"); var res = BubbleSort(data); // console.log(res); var t3 = (new Date()).getTime(); console.log(\"Sort time：\" + (t3 - t2) + \"ms\"); console.log(\"finished time：\" + (t3 - t1) + \"ms\"); &#125;);function BubbleSort(arr)&#123; for (var i = 0; i &lt; arr.length; i++) &#123; var flag = 0; for(var j = 1;j&lt; arr.length-i;j++)&#123; if(arr[j]&lt;arr[j-1])&#123; var tmp = arr[j]; arr[j] = arr[j-1] arr[j-1] = tmp flag = 1; &#125; &#125; if(flag == 0)&#123; return arr; &#125; &#125; return arr;&#125; 测试结果： 123456789101112131415161718192021222324~/Sites/languageDiff/sort » node sort.jsRead time：55msSort time：6067msfinished time：6122ms-------------------------------------------------------~/Sites/languageDiff/sort » node sort.jsRead time：38msSort time：6064msfinished time：6102ms-------------------------------------------------------~/Sites/languageDiff/sort » node sort.jsRead time：37msSort time：6339msfinished time：6376ms-------------------------------------------------------~/Sites/languageDiff/sort » node sort.jsRead time：42msSort time：6367msfinished time：6409ms-------------------------------------------------------~/Sites/languageDiff/sort » node sort.jsRead time：40msSort time：7110msfinished time：7150ms Python12~/Sites » python -VPython 2.7.10 123456789101112131415161718192021222324252627import time def BubbleSort(a): length = len(a) for i in range(0,length): flag = 0 for j in range(1,length-i): if a[j] &lt; a[j-1]: tmp = a[j] a[j] = a[j-1] a[j-1] = tmp flag = 1 if flag == 0: return a t1 = time.time()fileName = \"Data.txt\"data = []for line in open(fileName): data.append(int(line.strip()))t2 = time.time()print 'Read time: %.02fs' % (t2 - t1)res = BubbleSort(data)t3 = time.time()print 'Sort time: %.02fs' % (t3 - t2)print 'finished time: %.02fs' % (t3 - t1) 测试结果： 12345678910111213141516171819202122232425-------------------------------------------------------~/Sites/languageDiff/sort » python sort.pyRead time: 0.05sSort time: 282.76sfinished time: 282.82s-------------------------------------------------------~/Sites/languageDiff/sort » python sort.pyRead time: 0.07sSort time: 263.54sfinished time: 263.61s-------------------------------------------------------~/Sites/languageDiff/sort » python sort.pyRead time: 0.06sSort time: 346.26sfinished time: 346.32s-------------------------------------------------------~/Sites/languageDiff/sort » python sort.pyRead time: 0.06sSort time: 298.12sfinished time: 298.18s-------------------------------------------------------~/Sites/languageDiff/sort » python sort.pyRead time: 0.06sSort time: 251.43sfinished time: 251.49s 目前这几种编程语言看来，排序如下：IO时长,排序时长,总时长 Java 平均 0.0490s 5.078s 5.127s Go 平均 0.0058s 5.281s 5.286s NodeJs 平均 0.0424s 6.389s 6.432s PHP 平均 0.0200s 217.059s 217.079s Python 平均 0.0600s 288.422s 288.484s Ps: 如果你希望看到自己喜欢的语言也排进来，欢迎提供代码！","tags":[{"name":"PHP","slug":"PHP","permalink":"http://www.imsry.cn/tags/PHP/"},{"name":"Go","slug":"Go","permalink":"http://www.imsry.cn/tags/Go/"},{"name":"测试","slug":"测试","permalink":"http://www.imsry.cn/tags/测试/"},{"name":"性能","slug":"性能","permalink":"http://www.imsry.cn/tags/性能/"}]},{"title":"不同语言对网络IO的效率对比","date":"2018-08-21T09:07:37.000Z","path":"posts/55e3ba30.html","text":"测试机器配置： MacBook Air (13-inch, Early 2014) 处理器：1.4 GHz Intel Core i5 内存：4 GB 1600 MHz DDR3 PHP123PHP 7.1.16 (cli) (built: Mar 31 2018 02:59:59) ( NTS )Copyright (c) 1997-2018 The PHP GroupZend Engine v3.1.0, Copyright (c) 1998-2018 Zend Technologies 1234567891011121314&lt;?php$t1 = microtime(true); for($i=0; $i&lt;20; $i++)&#123; $url = \"http://2018.ip138.com/ic.asp?count=\".$i; $data = file_get_contents($url); // echo 'get:'.$i.\" \".$data.\"\\r\\n\";&#125; $t2 = microtime(true); echo 'php time:' . ($t2 - $t1)*1000 . \"ms\\n\"; ?&gt; 测试结果： 1234567891011121314~/Sites/languageDiff/io » php main.phpphp time:2112.9629611969ms-------------------------------------------------------~/Sites/languageDiff/io » php main.phpphp time:1960.746049881ms-------------------------------------------------------~/Sites/languageDiff/io » php main.phpphp time:2055.7940006256ms-------------------------------------------------------~/Sites/languageDiff/io » php main.phpphp time:2052.6430606842ms-------------------------------------------------------~/Sites/languageDiff/io » php main.phpphp time:1990.2958869934ms Java123java version &quot;10.0.1&quot; 2018-04-17Java(TM) SE Runtime Environment 18.3 (build 10.0.1+10)Java HotSpot(TM) 64-Bit Server VM 18.3 (build 10.0.1+10, mixed mode) 123456789101112131415public class Main &#123; public static void main(String[] args) &#123; long t1 = System.currentTimeMillis(); for(int i=0; i&lt;20; i++)&#123; String s=HttpRequest.sendGet(\"http://2018.ip138.com/ic.asp\", \"count=\"+i); // System.out.println(\"\"+i+\" : \"+s); &#125; long t2 = System.currentTimeMillis(); System.out.println(\"java time: \" + String.valueOf(t2 - t1) + \"ms\"); &#125;&#125; HttpRequst.java CodeOrigin:https://www.cnblogs.com/guoyinli/p/7192839.html 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.net.URL;import java.net.URLConnection;import java.util.List;import java.util.Map;public class HttpRequest &#123; /** * 向指定URL发送GET方法的请求 * * @param url * 发送请求的URL * @param param * 请求参数，请求参数应该是 name1=value1&amp;name2=value2 的形式。 * @return URL 所代表远程资源的响应结果 */ public static String sendGet(String url, String param) &#123; String result = \"\"; BufferedReader in = null; try &#123; String urlNameString = url + \"?\" + param; URL realUrl = new URL(urlNameString); // 打开和URL之间的连接 URLConnection connection = realUrl.openConnection(); // 设置通用的请求属性 connection.setRequestProperty(\"accept\", \"*/*\"); connection.setRequestProperty(\"connection\", \"Keep-Alive\"); connection.setRequestProperty(\"user-agent\", \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)\"); // 建立实际的连接 connection.connect(); // 获取所有响应头字段 Map&lt;String, List&lt;String&gt;&gt; map = connection.getHeaderFields(); // 遍历所有的响应头字段 /*for (String key : map.keySet()) &#123; System.out.println(key + \"---&gt;\" + map.get(key)); &#125;*/ // 定义 BufferedReader输入流来读取URL的响应 in = new BufferedReader(new InputStreamReader( connection.getInputStream())); String line; while ((line = in.readLine()) != null) &#123; result += line; &#125; &#125; catch (Exception e) &#123; System.out.println(\"发送GET请求出现异常！\" + e); e.printStackTrace(); &#125; // 使用finally块来关闭输入流 finally &#123; try &#123; if (in != null) &#123; in.close(); &#125; &#125; catch (Exception e2) &#123; e2.printStackTrace(); &#125; &#125; return result; &#125; /** * 向指定 URL 发送POST方法的请求 * * @param url * 发送请求的 URL * @param param * 请求参数，请求参数应该是 name1=value1&amp;name2=value2 的形式。 * @return 所代表远程资源的响应结果 */ public static String sendPost(String url, String param) &#123; PrintWriter out = null; BufferedReader in = null; String result = \"\"; try &#123; URL realUrl = new URL(url); // 打开和URL之间的连接 URLConnection conn = realUrl.openConnection(); // 设置通用的请求属性 conn.setRequestProperty(\"accept\", \"*/*\"); conn.setRequestProperty(\"connection\", \"Keep-Alive\"); conn.setRequestProperty(\"user-agent\", \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)\"); // 发送POST请求必须设置如下两行 conn.setDoOutput(true); conn.setDoInput(true); // 获取URLConnection对象对应的输出流 out = new PrintWriter(conn.getOutputStream()); // 发送请求参数 out.print(param); // flush输出流的缓冲 out.flush(); // 定义BufferedReader输入流来读取URL的响应 in = new BufferedReader( new InputStreamReader(conn.getInputStream())); String line; while ((line = in.readLine()) != null) &#123; result += line; &#125; &#125; catch (Exception e) &#123; System.out.println(\"发送 POST 请求出现异常！\"+e); e.printStackTrace(); &#125; //使用finally块来关闭输出流、输入流 finally&#123; try&#123; if(out!=null)&#123; out.close(); &#125; if(in!=null)&#123; in.close(); &#125; &#125; catch(IOException ex)&#123; ex.printStackTrace(); &#125; &#125; return result; &#125; &#125; 测试结果： 1234567891011121314~/Sites/languageDiff/io » java Mainjava time: 1416ms-------------------------------------------------------~/Sites/languageDiff/io » java Mainjava time: 1472ms-------------------------------------------------------~/Sites/languageDiff/io » java Mainjava time: 1328ms-------------------------------------------------------~/Sites/languageDiff/io » java Mainjava time: 1348ms-------------------------------------------------------~/Sites/languageDiff/io » java Mainjava time: 1336ms Go1go version go1.10.3 darwin/amd64 123456789101112131415161718192021222324252627282930313233343536373839package mainimport ( \"fmt\" \"io/ioutil\" \"net/http\" \"strconv\" \"sync\" \"time\")func main() &#123; wg := sync.WaitGroup&#123;&#125; start := time.Now() for k := 0; k &lt; 2; k++ &#123; wg.Add(1) go func(k int) &#123; for i := 0; i &lt; 10; i++ &#123; HttpGet(\"http://2018.ip138.com/ic.asp?count=\" + strconv.Itoa(i*2+k)) &#125; wg.Done() &#125;(k) &#125; wg.Wait() fmt.Printf(\"cost time: %f\\n\", time.Now().Sub(start).Seconds())&#125;func HttpGet(url string) string &#123; resp, err := http.Get(url) if err != nil &#123; return err.Error() &#125; defer resp.Body.Close() body, err := ioutil.ReadAll(resp.Body) if err != nil &#123; return err.Error() &#125; return string(body)&#125; 测试结果： 1234567891011121314~/Workspaces/go » go run main.gocost time: 0.952737-------------------------------------------------------~/Workspaces/go » go run main.gocost time: 0.983901-------------------------------------------------------~/Workspaces/go » go run main.gocost time: 0.967799-------------------------------------------------------~/Workspaces/go » go run main.gocost time: 0.972302-------------------------------------------------------~/Workspaces/go » go run main.gocost time: 0.980509 JavaScript(NodeJS)12~/Sites » node -vv9.11.1 123456789101112131415161718192021222324252627282930var t1 = (new Date()).getTime(); var job = 0;for(var i=0; i&lt;20; i++)&#123; get(i); &#125; var t2 = (new Date()).getTime(); console.log(\"nodejs time：\" + (t2 - t1) + \"ms\"); function get(i)&#123;var http=require('http'); //get 请求外网 http.get('http://2018.ip138.com/ic.asp?count='+i,function(req,res)&#123; var html=''; req.on('data',function(data)&#123; html+=data; &#125;); req.on('end',function()&#123; job++ // console.info(html); if(job == 20)&#123; var t2 = (new Date()).getTime(); console.log(\"finished time：\" + (t2 - t1) + \"ms\"); &#125; &#125;); &#125;);&#125; 测试结果： 12345678910111213141516171819~/Sites/languageDiff/io » node main.jsnodejs time：25msfinished time：236ms-------------------------------------------------------~/Sites/languageDiff/io » node main.jsnodejs time：21msfinished time：220ms-------------------------------------------------------~/Sites/languageDiff/io » node main.jsnodejs time：22msfinished time：230ms-------------------------------------------------------~/Sites/languageDiff/io » node main.jsnodejs time：21msfinished time：227ms-------------------------------------------------------~/Sites/languageDiff/io » node main.jsnodejs time：20msfinished time：221ms Python12~/Sites » python -VPython 2.7.10 123456789101112131415161718import time,urllib2 def get(url): req = urllib2.Request(url) res_data = urllib2.urlopen(req) res = res_data.read() return res t = time.time() for i in xrange(0, 20): # print \"Get(\"+str(i)+\"):\" data = get(\"http://2018.ip138.com/ic.asp?count=\"+str(i)) # print data print 'Python time: %.02fs' % (time.time() - t) 测试结果： 1234567891011121314151617~/Sites/languageDiff/io » python main.pyPython time: 1.98s-------------------------------------------------------~/Sites/languageDiff/io » python main.pyPython time: 1.98s-------------------------------------------------------~/Sites/languageDiff/io » python main.pyPython time: 2.01s-------------------------------------------------------~/Sites/languageDiff/io » python main.pyPython time: 2.07s-------------------------------------------------------~/Sites/languageDiff/io » python main.pyPython time: 2.20s-------------------------------------------------------~/Sites/languageDiff/io » python main.pyPython time: 2.08s 目前这几种编程语言看来，排序如下： NodeJs 平均 0.23s Go 平均 0.97s Java 平均 1.38s PHP 平均 2.03s Python 平均 2.05s Ps: 如果你希望看到自己喜欢的语言也排进来，欢迎提供代码！","tags":[{"name":"PHP","slug":"PHP","permalink":"http://www.imsry.cn/tags/PHP/"},{"name":"Go","slug":"Go","permalink":"http://www.imsry.cn/tags/Go/"},{"name":"测试","slug":"测试","permalink":"http://www.imsry.cn/tags/测试/"},{"name":"性能","slug":"性能","permalink":"http://www.imsry.cn/tags/性能/"}]},{"title":"不同语言的基本性能测试","date":"2018-08-10T08:56:48.000Z","path":"posts/1b3229fb.html","text":"测试机器配置： MacBook Air (13-inch, Early 2014) 处理器：1.4 GHz Intel Core i5 内存：4 GB 1600 MHz DDR3 PHP123PHP 7.1.16 (cli) (built: Mar 31 2018 02:59:59) ( NTS )Copyright (c) 1997-2018 The PHP GroupZend Engine v3.1.0, Copyright (c) 1998-2018 Zend Technologies 123456789101112131415161718192021222324252627282930&lt;?php$t1 = microtime(true); for($i=0; $i&lt;10000000; $i++)&#123; aaa($i); &#125; $t2 = microtime(true); echo 'php time:' . ($t2 - $t1)*1000 . \"ms\\n\"; function aaa($i)&#123; $a = $i + 1; $b = 2.3; $s = \"abcdefkkbghisdfdfdsfds\"; if($a &gt; $b)&#123; ++$a; &#125;else&#123; $b = $b + 1; &#125; if($a == $b)&#123; $b = $b + 1; &#125; $c = $a * $b + $a / $b - pow($a, 2); $d = substr($s, 0, strpos($s, 'kkb')) . strval($c); &#125; ?&gt; 测试结果： 1234567891011121314151617~/Sites » php tes.phpphp time:8196.1958408356ms-------------------------------------------------------~/Sites » php tes.phpphp time:7649.4419574738ms-------------------------------------------------------~/Sites » php tes.phpphp time:7908.7510108948ms-------------------------------------------------------~/Sites » php tes.phpphp time:7708.6410522461ms-------------------------------------------------------~/Sites » php tes.phpphp time:7515.1500701904ms-------------------------------------------------------~/Sites » php tes.phpphp time:7468.3780670166ms Java123java version &quot;10.0.1&quot; 2018-04-17Java(TM) SE Runtime Environment 18.3 (build 10.0.1+10)Java HotSpot(TM) 64-Bit Server VM 18.3 (build 10.0.1+10, mixed mode) 123456789101112131415161718192021222324252627282930313233public class Main &#123; public static void main(String[] args) &#123; long t1 = System.currentTimeMillis(); for(int i=0; i&lt;10000000; i++)&#123; aaa((float)i); &#125; long t2 = System.currentTimeMillis(); System.out.println(\"java time: \" + String.valueOf(t2 - t1) + \"ms\"); &#125; static void aaa(float i) &#123; float a = i + 1; float b = 2.3f; String s = \"abcdefkkbghisdfdfdsfds\"; if(a &gt; b)&#123; ++a; &#125;else&#123; b = b + 1; &#125; if(a == b)&#123; b = b + 1; &#125; float c = (float)(a * b + a / b - Math.pow(a, 2)); String d = s.substring(0, s.indexOf(\"kkb\")) + String.valueOf(c); &#125;&#125; 测试结果： 1234567891011121314151617181920~/Sites » java Mainjava time: 1537ms-------------------------------------------------------~/Sites » java Mainjava time: 1497ms-------------------------------------------------------~/Sites » java Mainjava time: 1466ms-------------------------------------------------------~/Sites » java Mainjava time: 1610ms-------------------------------------------------------~/Sites » java Mainjava time: 1488ms-------------------------------------------------------~/Sites » java Mainjava time: 1503ms-------------------------------------------------------~/Sites » java Mainjava time: 1475ms Go1go version go1.10.3 darwin/amd64 1234567891011121314151617181920212223242526272829303132333435363738package mainimport ( \"fmt\" \"math\" \"strconv\" \"strings\" \"time\")func main() &#123; t1 := time.Now() for i := 0; i &lt; 10000000; i++ &#123; Aaa(float64(i)) &#125; t2 := time.Now() fmt.Printf(\"Go time: %f s\\n\", t2.Sub(t1).Seconds())&#125;func Aaa(i float64) &#123; var a float64 = i + 1 var b float64 = 2.3 s := \"abcdefkkbghisdfdfdsfds\" if a &gt; b &#123; a++ &#125; else &#123; b = b + 1 &#125; if a == b &#123; b = b + 1 &#125; c := a*b + a/b - math.Pow(a, 2) d := s[0:strings.Index(s, \"kkb\")] + strconv.FormatFloat(c, 'E', -1, 64) _ = d&#125; 测试结果： 12345678910111213141516~/Workspaces/GoLand/src/Aaa » go build main.go-------------------------------------------------------~/Workspaces/GoLand/src/Aaa » ./mainGo time: 4.083166 s-------------------------------------------------------~/Workspaces/GoLand/src/Aaa » ./mainGo time: 4.095651 s-------------------------------------------------------~/Workspaces/GoLand/src/Aaa » ./mainGo time: 4.154200 s-------------------------------------------------------~/Workspaces/GoLand/src/Aaa » ./mainGo time: 4.175203 s-------------------------------------------------------~/Workspaces/GoLand/src/Aaa » ./mainGo time: 4.111375 s Go并发版本12345678910111213141516171819202122232425262728293031323334353637383940414243444546package mainimport ( \"fmt\" \"math\" \"strconv\" \"strings\" \"sync\" \"time\")func main() &#123; wg := sync.WaitGroup&#123;&#125; t1 := time.Now() for k := 0; k &lt; 2; k++ &#123; wg.Add(1) go func() &#123; for i := 0; i &lt; 5000000; i++ &#123; Aaa(float64(i)) &#125; wg.Done() &#125;() &#125; wg.Wait() t2 := time.Now() fmt.Printf(\"Go time: %f s\\n\", t2.Sub(t1).Seconds())&#125;func Aaa(i float64) &#123; var a float64 = i + 1 var b float64 = 2.3 s := \"abcdefkkbghisdfdfdsfds\" if a &gt; b &#123; a++ &#125; else &#123; b = b + 1 &#125; if a == b &#123; b = b + 1 &#125; c := a*b + a/b - math.Pow(a, 2) _ = s[0:strings.Index(s, \"kkb\")] + strconv.FormatFloat(c, 'E', -1, 64)&#125; 测试结果： 12345678910111213141516~/Workspaces/GoLand/src/Aaa » go build main.go-------------------------------------------------------~/Workspaces/GoLand/src/Aaa » ./mainGo time: 2.326077 s-------------------------------------------------------~/Workspaces/GoLand/src/Aaa » ./mainGo time: 2.270769 s-------------------------------------------------------~/Workspaces/GoLand/src/Aaa » ./mainGo time: 2.277345 s-------------------------------------------------------~/Workspaces/GoLand/src/Aaa » ./mainGo time: 2.252540 s-------------------------------------------------------~/Workspaces/GoLand/src/Aaa » ./mainGo time: 2.255374 s JavaScript(NodeJS)12~/Sites » node -vv9.11.1 123456789101112131415161718192021222324252627282930var t1 = (new Date()).getTime(); for(var i=0; i&lt;10000000; i++)&#123; aaa(i); &#125; var t2 = (new Date()).getTime(); console.log(\"nodejs time：\" + (t2 - t1) + \"ms\"); function aaa(i)&#123; var a = i + 1; var b = 2.3; var s = \"abcdefkkbghisdfdfdsfds\"; if(a &gt; b)&#123; ++a; &#125;else&#123; b = b + 1; &#125; if(a == b)&#123; b = b + 1; &#125; var c = a * b + a / b - Math.pow(a, 2); var d = s.substring(0, s.indexOf(\"kkb\")) + c.toString(); &#125; 测试结果： 1234567891011121314151617~/Sites » node main.jsnodejs time：4898ms-------------------------------------------------------~/Sites » node main.jsnodejs time：5567ms-------------------------------------------------------~/Sites » node main.jsnodejs time：4846ms-------------------------------------------------------~/Sites » node main.jsnodejs time：4853ms-------------------------------------------------------~/Sites » node main.jsnodejs time：4955ms-------------------------------------------------------~/Sites » node main.jsnodejs time：5113ms Python12~/Sites » python -VPython 2.7.10 1234567891011121314151617181920212223242526import sys, time, math def aaa(i): a = i + 1 b = 2.3 s = \"abcdefkkbghisdfdfdsfds\" if a &gt; b: a = a + 1 else: b = b + 1 if a == b: b = b + 1 c = a * b +a / b - math.pow(a, 2) d = s[0: s.find(\"kkb\")] + str(c) t = time.time() for i in xrange(0, 10000000): aaa(i) print 'Python time: %.02f s' % (time.time() - t) 测试结果： 1234567891011121314~/Sites » python main.pyPython time: 20.34-------------------------------------------------------~/Sites » python main.pyPython time: 19.90-------------------------------------------------------~/Sites » python main.pyPython time: 20.07-------------------------------------------------------~/Sites » python main.pyPython time: 19.88-------------------------------------------------------~/Sites » python main.pyPython time: 22.89 目前这几种编程语言看来，排序如下： Java 平均 1.51s (稳居第一) Go 平均 3.94s (并发2.28s) NodeJs 平均 5.03s PHP 平均 7.65s Python 平均 20.62s (差距大应该是我对这语言不熟，密集运算应该有优化方案) Ps: 如果你希望看到自己喜欢的语言也排进来，欢迎提供代码！","tags":[{"name":"PHP","slug":"PHP","permalink":"http://www.imsry.cn/tags/PHP/"},{"name":"Go","slug":"Go","permalink":"http://www.imsry.cn/tags/Go/"},{"name":"测试","slug":"测试","permalink":"http://www.imsry.cn/tags/测试/"},{"name":"性能","slug":"性能","permalink":"http://www.imsry.cn/tags/性能/"}]},{"title":"Go语言中的切片(Slice)是引用类型还是值类型？","date":"2018-05-31T06:51:10.000Z","path":"posts/d83c494c.html","text":"在最近的学习和实践中，照着别人的代码敲，仅仅只是把别人写在方法内的片段直接拿出来用，结果却出人意料，所以很纳闷！ 示例代码： 12345678func CryptBlocks(dst, src []byte) &#123; // ...省略内容 for len(src) &gt; 0 &#123; encrypt(dst, src[:16]) //类似copy dst = dst[16:] src = src[16:] &#125;&#125; 这个分块处理切片数据的方法很巧妙，我第一次看见的时候（认定切片是传引用），认为这个方法错了，最终dst变成了空切片。 先看一个Slice的例子： 12345678910111213141516171819package mainimport( \"fmt\")func main () &#123; var slice []int slice = make([]int, 6) slice = []int&#123;0,1,2,3,4,5&#125; fmt.Println(\"Slice: \",slice) changeSlice(slice) fmt.Println(\"Changed Slice: \", slice) &#125;func changeSlice(s []int) &#123; s[2] = 100&#125; 输出： 12Slice: [0 1 2 3 4 5]Changed Slice: [0 1 100 3 4 5] 我们会发现，在方法changeSlice中对形参的修改即真实修改。如果这时我们将其定性为引用传值，为之过早！ 我们将代码稍微修改一下： 1234567891011121314151617181920package mainimport( \"fmt\")func main () &#123; var slice []int slice = make([]int, 6) slice = []int&#123;0,1,2,3,4,5&#125; fmt.Printf(\"SliceAddr: %p , Slice: %v\\r\\n\",&amp;slice, slice) changeSlice(slice) fmt.Printf(\"Changed SliceAddr: %p , Changed Slice: %v\\r\\n\", &amp;slice, slice) &#125;func changeSlice(s []int) &#123; fmt.Printf(\"In func's sliceAddr: %p\\r\\n\", s) s[2] = 100&#125; 输出： 123SliceAddr: 0xc82000e0a0 , Slice: [0 1 2 3 4 5]In func&apos;s sliceAddr: 0xc8200460c0Changed SliceAddr: 0xc82000e0a0 , Changed Slice: [0 1 100 3 4 5] 由此可见，在方法内的那个s（地址：0xc8200460c0）并非传入的那个slice（地址：0xc82000e0a0），但是为什么它的修改能影响到原来的数据呢？ 原因是Golang中的Slice类型在创建的时候，可以理解为：创建一个新的变量，存储数组中的一个片段的数据，虽然自己是一个新的变量，有自己的内存地址，但是内部的数据确实共享的以前的底层数据。 我们在做一个尝试： 12345678910111213141516171819202122232425package mainimport( \"fmt\")func main () &#123; var slice []int slice = make([]int, 7) slice = []int&#123;0,1,2,3,4,5,6&#125; fmt.Printf(\"Slice addr: %p\\r\\n\", &amp;slice) for i, v := range slice &#123; fmt.Printf(\"i: %d , v: %d , addr: %p\\r\\n\", i, v ,&amp;slice[i]) &#125; changeSlice(slice) &#125;func changeSlice(s []int) &#123; fmt.Printf(\"In func Slice addr: %p\\r\\n\", &amp;s) s[2] = 100 for i, v := range s &#123; fmt.Printf(\"i: %d , v: %d , addr: %p\\r\\n\", i, v ,&amp;s[i]) &#125;&#125; 输出： 12345678910111213141516Slice addr: 0xc82000e0a0i: 0 , v: 0 , addr: 0xc82003a140i: 1 , v: 1 , addr: 0xc82003a148i: 2 , v: 2 , addr: 0xc82003a150i: 3 , v: 3 , addr: 0xc82003a158i: 4 , v: 4 , addr: 0xc82003a160i: 5 , v: 5 , addr: 0xc82003a168i: 6 , v: 6 , addr: 0xc82003a170In func Slice addr: 0xc82000e0e0i: 0 , v: 0 , addr: 0xc82003a140i: 1 , v: 1 , addr: 0xc82003a148i: 2 , v: 100 , addr: 0xc82003a150i: 3 , v: 3 , addr: 0xc82003a158i: 4 , v: 4 , addr: 0xc82003a160i: 5 , v: 5 , addr: 0xc82003a168i: 6 , v: 6 , addr: 0xc82003a170 可以看出，切片内部存储是内容其实是同一块内存，被共享的数据，而切片自己却拥有自己的地址。 所以说，Golang的基本类型都是传值，还是没错的。 参考内容 Golang 切片与函数参数“陷阱”","tags":[{"name":"Golang","slug":"Golang","permalink":"http://www.imsry.cn/tags/Golang/"}]},{"title":"mysql中几种Log和打开方法","date":"2018-05-17T10:45:18.000Z","path":"posts/2e28f02f.html","text":"Mysql中常见的log有：错误日志log_error、慢查询日志slow_query_log、二进制日志bin_log和通用查询日志general_log 错误日志（error_log） 这个日志记载mysql服务器的启动和关闭以及运行过程中发生的故障或异常情况，如果你发现mysql无法正常启动，那么你首先应该查看这个日志。 配置： 1log_error = error.log 服务器上查询log位置：show variables like &#39;log_error&#39; 慢查询日志（slow_query_log） 为了改善数据库性能，需要减少慢查询SQL的使用次数，那么哪些SQL需要改善呢？通过这个日志可以更清楚如何去改善。 配置： 123slow_query_log = 1lone_query_time = 10slow_query_log_file = slow_query.log 二进制查询日志（bin_log） Mysql的binlog日志作用是用来记录mysql内部增删改查等对mysql数据库有更新的内容的记录（对数据库的改动），对数据库的查询select或show等不会被binlog日志记录;主要用于数据库的主从复制以及增量恢复。 配置： 1log_bin = mysql_bin.log 通用查询日志（general_log） 会记录mysql运行期间的所有sql语句 配置： 123log_output=[none|file|table|file,table] #通用查询日志输出格式general_log=[on|off] #是否启用通用查询日志general_log_file[=filename] #通用查询日志位置及名字","tags":[{"name":"mysql","slug":"mysql","permalink":"http://www.imsry.cn/tags/mysql/"}]},{"title":"skip-name-resolve可以解决远程连接mysql数据库时候的缓慢或超时","date":"2018-03-22T10:18:39.000Z","path":"posts/65123244.html","text":"咳咳，迁了新的机器，全新的机器但是环境还是跟以前一样，基本没变过什么配置。但是远程连接mysql却很慢，甚至10s超时都还没连上！！！ 当然，仅仅只是建立连接的时候，连接成功后一切操作都行如流水。 所以最快最简单的方法就是直接在数据库的配置文件my.cnf|my.ini中添加一行skip-name-resolve来解决。 其实mysql在用户登录建立连接的时候，会对客户端进行DNS反查，如果遇到服务器的DNS解析出现问题，那么就可能导致客户端迟迟连接不上。此方法可禁止mysql进行DNS反查从而解决了这个问题。","tags":[{"name":"mysql","slug":"mysql","permalink":"http://www.imsry.cn/tags/mysql/"}]},{"title":"Laravel5.5 发送邮件遇到Connection could not be established with host xxxxx","date":"2018-02-11T07:08:38.000Z","path":"posts/ac505287.html","text":"Laravel输出的错误页面如下图： 服务器：阿里云香港节点（B区） CentOS6.8 64bit lamp环境：PHP7.2.1 Laravel .env mail部分：12345678MAIL_DRIVER=smtpMAIL_HOST=hwsmtp.exmail.qq.comMAIL_PORT=465MAIL_USERNAME=noreply@0x4f5da2.cnMAIL_PASSWORD=XXXXXXXXMAIL_FROM_ADDRESS=noreply@0x4f5da2.cnMAIL_FROM_NAME=noreplyMAIL_ENCRYPTION=ssl 问题发生前景：本地测试完全正常，相同配置在服务器上就被抛出异常。 因为之前遇到过由于端口没有放行而造成无法建立连接的问题，在此问题上我也做了一样的尝试，在安全组配置里面对465端口进行放行（无论是出口还是入口）。但是结果表示并不是这个问题，而我在没有配置放行的情况下，telnet host:port 是通的。 经过大约两天的间接性排查和尝试，最终提交工单咨询阿里，他们给了我处理意见：尝试他们的Demo！ 尝试阿里云提供的Demo测试发件是没有问题的，这就令我很纳闷的，于是我去看该Demo是如何建立连接的。 通过一步一步的探索，发现该Demo也是同样使用了stream_socket_client方法来建立连接，那为什么它可以，Laravel内的却不行？说明不是该环境的问题！ 问题逐渐定位到了stream_socket_client这个方法上，查询PHP.NET来认识一下它。 1resource stream_socket_client ( string $remote_socket [, int &amp;$errno [, string &amp;$errstr [, float $timeout = ini_get(\"default_socket_timeout\") [, int $flags = STREAM_CLIENT_CONNECT [, resource $context ]]]]] ) 方法描述上，只有一个参数可能会不一样，就是最后那个$context，它是一个Resource，由stream_conntext_create方法创建并返回。 我注意到Laravel中使用的Swift_Mailer所引用的StreamBuffer类中，在stream_socket_client方法前面加上了@符号来屏蔽error，而在下面自己判断来抛出异常。 那么我果断将@符号去掉！ 真正的错误爆出来了！！！！ 12stream_socket_enable_crypto(): SSL operation failed with code 1. OpenSSL Error messages:error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed 乍眼一看，证书校验失败？？？？ 上面的废话只是简单描述我遇到这个问题是如何应对的解决方案来了！ 既然是走SSL协议(465端口)，且程序抛出错误为证书校验失败，那么就去直接搜索有关Laravel/SwitEmailer的证书校验问题。 在stackOverflow上找到两个相关的问题： localhost and “stream_socket_enable_crypto(): SSL operation failed with code 1” how to fix stream_socket_enable_crypto(): SSL operation failed with code 1 他们都提出了一个配置： 123456789// 在/config/mail.php中增加'stream' =&gt; [ 'ssl' =&gt; [ 'allow_self_signed' =&gt; true, 'verify_peer' =&gt; false, 'verify_peer_name' =&gt; false, ],], 然后测试，Bingo！！！ 当然，既然是SSL必然使用校验才是最安全的，但是我这里仅满足能够发件即可，至于如何进行证书校验，请移步：使用PHPMailer 中的报错解决 “Connection failed. Error #2: stream_socket_client(): SSL operation failed with code 1. OpenSSL Error messages:”","tags":[{"name":"Laravel","slug":"Laravel","permalink":"http://www.imsry.cn/tags/Laravel/"}]},{"title":"Apache设置目录的访问权限（用户名和密码）","date":"2018-02-01T06:58:17.000Z","path":"posts/b54dd86c.html","text":"最近重新搞了个阿里云香港ECS用来科学上网，另外使用LAMP一键安装包搭环境，搭建完成后开放云盾端口即可通过IP访问到web默认页，这默认页有些实用的小工具，如：探针、MyAdmin啥的。如图： 然后我想让这默认页只有我自己能看到，其他人最好不要看到，毕竟其他人看到也没啥用，最多给服务器施压而已，然后就想弄个如下图的效果： 下面来讲讲如何实现此效果的步骤，假设需要设置权限的目录(DIR)为”/data/www/default” 修改apache的配置文件（可以是httpd.conf，也可以是具体的vhost的单独配置文件）,内容如下： 123456&lt;Directory &quot;/data/www/default&quot;&gt; Options Indexes AllowOverride AuthConfig Order allow,deny Allow from all&lt;/Directory&gt; 在DIR下新增.htaccess文件，内容如下 1234AuthName &quot;sys&quot;AuthType BasicAuthUserFile /data/www/default/.htpasswdrequire user username 使用Apache的htpasswd创建.htpasswd文件 12/usr/local/apache/bin/htpasswd -c /data/www/default/.htpasswd username##这里会提示你输入两次密码## 完成上述步骤后，重启Apache即可","tags":[{"name":"Apache","slug":"Apache","permalink":"http://www.imsry.cn/tags/Apache/"}]},{"title":"解决Chrome更新到63后.dev/.app后缀域名强制HTTPS的问题","date":"2017-12-11T06:57:18.000Z","path":"posts/a508b207.html","text":"又是周一，上班的日子总是来的太快，来到公司的第一件事，打开IDE并更新代码库。看看上周做到哪里了，还有什么BUG是待修复的？ 然鹅，意想不到的事情就这么发生了，为什么本地环境访问不了？ localhost能访问，本地服务器没问题；其他的本地域名可以访问，Apache配置没动过应该不是这个问题；试了试公司项目的其他域名，都是同样的报错；然后我注意了一下URL，被加上了https协议，去掉s再回车没解决；换个浏览器，行了？？ 好吧，可能谷歌抽风了，我试了清空缓存和浏览历史，完全不行。后来发现问题没那么简单，网上也很难找到相关的结果，发现自己遇到了难题。 然后我发现了SegmentFault有人问了相同的问题，才在回答里面找到了答案： 原文地址：Chrome 63 now forces .dev domains to HTTPS 既然如此，强大的谷歌对自己拥有的顶级域名（.dev和.app）进行了合法干涉，那么我们也只能认怂了吧。 默默的把原来的.dev改成了.local后缀。 但是有强迫症的我有点不甘心，相信有很多人跟我一样，都是执着的没事干的人！不找出一个能在chrome上用.dev的后缀的方法，心里面还是稍微有那么一点难受的（^_-!） 在github上有一个工具：Fishdrowned的自签泛域名证书，MacOS用户可以使用我FORK过来的修改版(原作者已做兼容2018/01/02) 咱们可以自己在本地生成一个xxx.dev的域名证书来直接让TA支持https访问！！！！ 具体的使用方法在上面链接有介绍 服务器端如何配置支持https自行搜索，这里不做解释了。 最终实现.dev的https访问，如图：","tags":[{"name":"Chrome https","slug":"Chrome-https","permalink":"http://www.imsry.cn/tags/Chrome-https/"}]},{"title":"Pazzle on array_column","date":"2017-11-10T02:28:18.000Z","path":"posts/25a92a3d.html","text":"在PHP中内置的对数组操作的方法（函数）有一个叫做’array_column’的非常实用，它可以用作返回一个二维数组的指定列。 先介绍一下它！ 好比这样一个用法： 1234567891011121314151617181920$students = array( array( 'id'=&gt;1, 'name'=&gt;'Jerry' ), array( 'id'=&gt;3, 'name'=&gt;'Tom' ), array( 'id'=&gt;6, 'name'=&gt;'Lily' ), array( 'id'=&gt;11, 'name'=&gt;'Bob' ), );$student_names = array_column($students,'name');var_dump($student_names); 输出结果： 12345array (size=4) 0 =&gt; string 'Jerry' (length=5) 1 =&gt; string 'Tom' (length=3) 2 =&gt; string 'Lily' (length=4) 3 =&gt; string 'Bob' (length=3) 这样就得到了一个所有名字的数组，想必对于一个PHPER来说并不陌生。但是今天要讲的重点是array_column的另外一个用法，如果给它第三个参数，那么它将以第三个参数对应的数组中的值作为返回数组的键，用例如下： 12$studentID_name = array_column($students,'name','id');var_dump($studentID_name); 输出结果： 12345array (size=4) 1 =&gt; string &apos;Jerry&apos; (length=5) 3 =&gt; string &apos;Tom&apos; (length=3) 6 =&gt; string &apos;Lily&apos; (length=4) 11 =&gt; string &apos;Bob&apos; (length=3) 利用这样的数组，你可以直接使用id去访问此id对应的名字，$studentID_name[3] as Tom 如果student不仅仅包含id和name，假如还有其他如age,sex字段，你还想同时通过id得到这个’对象’的其他字段值，你不必定义多个类似$studentID_age/$studentID_sex的变量，只需要将array_column的第二个参数设置成NULL即可，如下： 12$studentID_student = array_column($students,NULL,'id');var_dump($studentID_student); 输出结果： 1234567891011121314151617array (size=4) 1 =&gt; array (size=2) 'id' =&gt; int 1 'name' =&gt; string 'Jerry' (length=5) 3 =&gt; array (size=2) 'id' =&gt; int 3 'name' =&gt; string 'Tom' (length=3) 6 =&gt; array (size=2) 'id' =&gt; int 6 'name' =&gt; string 'Lily' (length=4) 11 =&gt; array (size=2) 'id' =&gt; int 11 'name' =&gt; string 'Bob' (length=3) 它的介绍到这里就算完了，那么问题在哪里呢？ 在于第三个参数！！ 第三个参数指定的值必须是整型或字符串型，如果是其它类型(如浮点型等)，则不会如你所愿，即使float(10)和int(10)看着没啥区别？ 上栗子！ 123456789101112131415161718192021222324$students = array( array( 'id'=&gt;1, 'name'=&gt;'Jerry' ), array( 'id'=&gt;floatval(3), 'name'=&gt;'Tom' ), array( 'id'=&gt;6, 'name'=&gt;'Lily' ), array( 'id'=&gt;11, 'name'=&gt;'Bob' ), array( 'id'=&gt;floatval(30), 'name'=&gt;'Sam' ), );$studentID_student = array_column($students,NULL,'id');var_dump($studentID_student); 上面的栗子中，我将第二个数据的id换成了浮点型3，然后最后新增了一个数据，id为浮点型30。 理想中的结果应该是在上面介绍的结果中多了一个索引为30的Sam,嗯！我也是这样想的，但结果总是那么的’相似‘。 看结果： 123456789101112131415161718192021array (size=5) 1 =&gt; array (size=2) 'id' =&gt; int 1 'name' =&gt; string 'Jerry' (length=5) 2 =&gt; array (size=2) 'id' =&gt; float 3 'name' =&gt; string 'Tom' (length=3) 6 =&gt; array (size=2) 'id' =&gt; int 6 'name' =&gt; string 'Lily' (length=4) 11 =&gt; array (size=2) 'id' =&gt; int 11 'name' =&gt; string 'Bob' (length=3) 12 =&gt; array (size=2) 'id' =&gt; float 30 'name' =&gt; string 'Sam' (length=3) 从结果中来看，数量的确是5个了，但是索引不是我想要的呀喂！！ 原因就在于id不为int或string类型的时候，该条数据在新数组的索引会被赋值为当前最大索引加1，第二条数据id=float(3)，当前最大索引为1，那么它被设置键为1+1=2，最后新加的那条id为float(30)的Sam，在它之前的索引最大是11，那么它就应当为11+1=12了。 其实，一般情况下，我们不会遇到像float这样的类型作为ID，自己写的自然是Int型，从数据库读取的默认是String型。然鹅～我是读Excel获得的数据，它给了我float类型，在这样的弱类型语言里面，不仔细琢磨还真不容易发现会有这样的Bug存在！！！ PHP真的是最好的语言，也最容易犯错！！ 所以说，尽管它是弱类型语言，今后还是尽量自我约束，拿强类型规则来约束自己！","tags":[{"name":"php","slug":"php","permalink":"http://www.imsry.cn/tags/php/"}]},{"title":"完全源码编译LNMP环境","date":"2017-11-06T07:45:46.000Z","path":"posts/7db5313c.html","text":"环境： CentOS 7 (https://www.centos.org) 软件： nginx-1.13.6.tar.gz (http://nginx.org) php-5.6.31.tar.gz (http://php.net) mariadb-10.2.10.tar.gz (https://mariadb.org) 依赖软件： openssl-1.0.2m.tar.gz (https://www.openssl.org) pcre-8.39.tar.gz (http://www.pcre.org/) zlib-1.2.11.tar.gz (http://www.zlib.net/) cmake-3.10.0-rc4.tar.gz (https://cmake.org) 安装openssl1234567tar zxf openssl-1.0.2m.tar.gzcd openssl-1.0.2m./config --prefix=/usr/local/openssl --openssldir=/usr/local/openssl/confmake &amp;&amp; make install 安装pcre1234567tar zxf pcre-8.39.tar.gzcd pcre-8.39./configure --prefix==/usr/local/pcremake &amp;&amp; make install 安装zlib1234567tar zxf zlib-1.2.11.tar.gzcd zlib-1.2.11./configure --prefix=/usr/local/zlibmake &amp;&amp; make install 安装Nginx安装nginx必须先安装完上面的3个依赖软件(openssl/pcre和zlib) 我们需要nginx以非root身份运行，所以要新建用户和用户组 12groupadd wwwuserass -g www www 123##为虚拟主机新建目录（默认使用ngixn/html）mkdir -p /var/www/wwwroot/chmod -R 755 /var/www/wwwroot/ 12345678910111213141516171819202122232425262728tar zxf nginx-1.13.6.tar.gzcd nginx-1.13.6./configure \\--user=www \\--group=www \\--prefix=/usr/local/nginx \\--with-http_ssl_module \\--with-openssl=/root/Download/openssl-1.0.2m \\--with-pcre=/root/Download/pcre-8.39 \\--with-zlib=/root/Download/zlib-1.2.11 \\--with-http_stub_status_module \\--with-threadsmake &amp;&amp; make install##修改配置支持php-fpmvim /usr/local/nginx/conf/nginx.conf##在server段中增加location ~ .php$ &#123; root html; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params;&#125; 安装PHP1234567tar zxf php-5.6.31.tar.gzcd php-5.6.31./configure --prefix=/usr/local/php --with-config-file-path=/etc/php --enable-fpm --enable-pcntl --enable-mysqlnd --enable-opcache --enable-sockets --enable-sysvmsg --enable-sysvsem --enable-sysvshm --enable-shmop --enable-zip --enable-soap --enable-xml --enable-mbstring --disable-rpath --disable-debug --disable-fileinfo --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-pcre-regex --with-iconv --with-zlib --with-mcrypt --with-gd --with-openssl --with-mhash --with-xmlrpc --with-curl --with-imap-sslmake &amp;&amp; make install 安装Mysql(MariaDB)（待续。。。） 开放80端口由于centos7默认使用firewall，且没有对外开放80端口，所以这步也是必要的 12firewall-cmd --zone=public --add-port=80/tcp --permanentfirewall-cmd --reload 启动服务启动php-fpm: /usr/local/php/sbin/php-fpm 启动nginx: /usr/local/nginx/sbin/nginx 安装过程中遇到的missing部分 libmcrypt libedit re2c","tags":[{"name":"Linux","slug":"Linux","permalink":"http://www.imsry.cn/tags/Linux/"}]},{"title":"【干货】本地git对应多个远程仓库","date":"2017-07-24T02:18:41.000Z","path":"posts/ab967d99.html","text":"当Githuber发现GitOSChina能发布项目演示，想把自己的项目也同步到OSChina上去时，同时维护两个本地仓库或者remote显得太过麻烦 提要 首先，为本地git仓库添加远程仓库，我们使用命令：git remote add origin [url]，这样一来，本地仓库就对应有了一个远程仓库的地址，包括push和fetch源，如下图所示： 但是，我们如何才能做到既能将本地git仓库PUSH到Github，也能够PUSH到OSChina上呢？ 可能有以下方式是你想到的： 本地创建两个仓库，一一对应（你不嫌麻烦的话的确可行） 添加多个远程库，即git remote add [another-origin](那每次都要PUSH两次咯？) 其实，git的一个远程库本来就可以配置成多个地址，即一个origin拥有多个url。 敲黑板了（实现） 前提条件是，我们已经为本地仓库添加了一个origin远程库（没有添加的自行添加，方法前面说了）。我们现在为本地库继续添加url地址：https://git.oschina.net/anthony_box/hitools.git 这个命令是：git remote set-url --add origin [url]（url替换成如上地址） 擦黑板了（原理） 其实该条命令执行就是在git项目的config文件里的[remote &quot;origin&quot;]配置新增一条记录，我们打开config文件看看，输入git config -e（文件路径:[repo]/.git/config）： 所以说，执行git remote set-url -add origin和编辑config文件，一码子事。","tags":[{"name":"git","slug":"git","permalink":"http://www.imsry.cn/tags/git/"}]},{"title":"神奇的空格符","date":"2017-07-20T02:25:44.000Z","path":"posts/ece045fd.html","text":"当我通过表单提交带空格的数据并保存到数据库，然后通过再次渲染出的页面修改该数据，意想不到的事情发生了，再也不同通过这个值检索到这条数据了。 首先，我们先写一个PHP的测试文件： 12345678910111213&lt;?phpif(isset($_POST[&apos;model&apos;]))&#123; echo $_POST[&apos;model&apos;]; echo &quot;&lt;br&gt;&quot;; echo str_replace(&apos; &apos;,&apos;&amp;nbsp;&apos;,$_POST[&apos;model&apos;]); echo &quot;&lt;br&gt;&quot;; echo urlencode($_POST[&apos;model&apos;]);&#125;?&gt;&lt;form method=&apos;post&apos;&gt;&lt;input name=&apos;model&apos; value=&apos;&apos; /&gt;&lt;button type=&apos;submit&apos;&gt;ttttt&lt;/button&gt;&lt;/form&gt; 可以看到，这里面有个表单，提交到自己这个页面，然后由PHP获取到POST过来的参数model，第一行直接输出它的值，第二行输出防SQL注入对空格的转化后的值，第三行输出encode之后的值（为什么？我们最后说TA的用途^_^）。 我们现在试着输入并提交Sumsang S8： 由此可见，后台获取到的是一个Sumsang+空格+S8，第二行跟上面一样（显示一样，源码不一样），第三行空格变成加号是urlencode后的转义，那么看下源码： 当然，很多情况下，为了防止SQL注入，我们会将空格转化成&amp;nbsp;存库，然后取数据的时候在逆回来。 紧接着，我们模拟数据的修改，基本过程是：从数据库取出这条数据–&gt;填充到input标签的value属性中（没有做逆处理）–&gt;渲染页面，渲染的页面源码如下： 12345678910&lt;html&gt; &lt;head&gt; &lt;/head&gt; &lt;body&gt; &lt;form method=&quot;post&quot;&gt; &lt;input name=&quot;model&quot; value=&quot;Sumsang&amp;nbsp;S8&quot;&gt; &lt;button type=&quot;submit&quot;&gt;ttttt&lt;/button&gt; &lt;/form&gt; &lt;/body&gt;&lt;/html&gt; 看到源码中的value是有&amp;nbsp;的，那么界面显示是这样的： 这样的情况，跟之前输入的Sumsang S8看似没有什么不同，但是如果我们直接提交这个默认值，看看后台接收到的是什么结果： 第一、二行输出效果跟原先一样，是一个Sumsang+空格+S8，但是第二行出现了Sumsang+%C2%A0+S8，我们再来看一下渲染出来的源码： 其实第一、二行的输出是Sumsang+&amp;nbsp;+S8，在网页中显示&amp;nbsp;就是一个空格，但是，这真的是源码嘛？ 我点击显示网页源码看看究竟： 第一行和第二行都是Sumsang+空格+S8，你会发现，第二行的空格应该被替换成&amp;nbsp;，而这里却没有被替换。 现在知道为什么我们要在第三行输出一个urlencode后的值了吧？ 两次提交的时，输入框里面显示的看起来是同一个东西，其实他们不一样呢！通过urlencode就能很明显的看出来了。那么，这样的不一样会造成什么后果呢？ 亲身经历啊！不是没事瞎折腾。 第二次存库时，存进去的不是Sumsang&amp;nbsp;S8，而是Sumsang S8，你会觉得没问题是吧，检索的时候搜索Sumsang S8不就出来了吗？ 你不信自己试试，怎么也搜索不到！！！！！查不出来这条数据了！！！！ 因为此空格非彼空格啊！ 想必发现这个神奇事件的人，应该不会很多。","tags":[{"name":"怪谈","slug":"怪谈","permalink":"http://www.imsry.cn/tags/怪谈/"}]},{"title":"毕业了","date":"2017-07-13T06:41:43.000Z","path":"posts/aa3d43ae.html","text":"转眼间，青春不再年华 其实，很早就要写这样一篇文章的，只是一直都不知道如何表达，即使现在也还是一样。 毕业，经历也不止那么一两次了，从来都没有感觉到有什么特别。人们总说，离别是伤感的，因为知道以后的相逢是微乎其微的，因为不知道的，太多了。我从来都没有想到，竟然在我即将离开校园的那一天，舍友一个个从宿舍离开的那一天，我热泪盈眶，竟说不出话来。一想到平日里我们朝夕相处，如今却落得个你南我北他中原。 正式步入社会，成为万千就业者中的一员，也就是说，我们不得不考虑和选择更多的事情。入京工作已过半年之久，以前从未想过会来京都工作，我永远都会记得每一次面试当面试官问我想去哪个城市工作时，我的回答只强调了一个重点，那就是“除了北京”。原因很简单，离家太远和空气环境差，我更愿意去上海、深圳、成都甚至是长沙。但最终我实习和工作的地方，就是北京。Orz… 既然来了，便也学会适应并努力完善自我，尽管生存环境不尽人意。相信自己能够在这个不曾向往的地方体现自我价值，创造人生价值。 两年，或许是个新开始 是的，不管怎么样，我决定至少认真的对待这两年，其实两年对于一个刚刚毕业的菜鸟是很重要的一个过渡期，这意味着今后的路将怎么走，应当展望一个什么样的未来，找到自己所处的位置和自己将要达到的下一个高度。我希望两年后，我会是一个全新的我，完全从现在的自己蜕变而出，所及之处无遗憾，稳而渐入佳境。 总有那么一个时刻，你背负着Newbie的称号。","tags":[{"name":"essay","slug":"essay","permalink":"http://www.imsry.cn/tags/essay/"}]},{"title":"The Problems When Python2.6 to 2.7 on CentOS6.5","date":"2017-04-24T08:41:20.000Z","path":"posts/91af55e9.html","text":"当Python从2.6升级到2.7后，pip找不到了？ 对的，基本上都能遇到这个问题。我很暴力的直接去下载一个pip然后用Python去安装它。 1python setup.py install 却被告知ImportError: No module named setuptools，想通过yum直接给安装，却出现下图所示： 没办法，去下载一个setuptools的包自己来装吧(我试过了下载setuptools-35.0.1.zip，这个不适用)。所以下面的这个亲测有效： 12wget https://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg --no-check-certificatesh setuptools-0.6c11-py2.7.egg 如果你也遇到了下图：(什么都别说，执行一下yum -y install zlib*，然后按步骤来) 但是，如果你发现还是一样：请重新编译安装Python，在这之前，修改一下Modules/Setup.dist文件，去掉#zlib zlibmodule.c -I$(prefix)/include -L$(exec_prefix)/lib -lz的注释。 重新编译安装完之后再sh setuptools-0.6c11-py2.7.egg就没问题了。 然后进入pip目录完成pip的安装python setup.py install 搞定了。整个解题思路还是根据报错，一个一个的去检查和解决。 参考:zipimport.ZipImportError: can’t decompress data; zlib not available 解决办法","tags":[{"name":"-Python2.7","slug":"Python2-7","permalink":"http://www.imsry.cn/tags/Python2-7/"}]},{"title":"array_walk中的$this报错","date":"2017-04-14T08:46:59.000Z","path":"posts/82527d05.html","text":"Fatal Error:Using $this when not in object context on line 54 今天在完成一个小功能开发并提交SVN后，收到前端的求助，说是更新了我的代码后页面打不开了。很着急啊，我这里都是测试成功才提交版本的。现在只能麻溜的跑过查看了。 首先，出现的情况是空白页面（对，没有任何输出）。报错肯定没打开，帮他打开E_ALL后就看到了今天的重点报错提示了。说是在54行有个$this不在对象环境中？ 然后我去看了，那个$this出现在array_walk方法的function中，从语句上来看是完全没有问题的，在类的方法里面用$this肯定没毛病啊，可是为什么他那里就报错呢？ 我突然想起来，如果要在array_walk里面使用外面的变量的时候需要使用use方法。所以改进一下: 1234$user_id = $this-&gt;user-&gt;id;array_walk($arr,function(&amp;$v) use($user_id) &#123; $v[&apos;user_id&apos;]=$user_id;&#125;); 这样就没毛病了。看来这个array_walk还挺调皮啊，不得不说这个方法的使用还真有许多需要注意的地方呢。 通过查资料，得知这个$this在PHP版本低于5.4的情况下是会出现问题的。高版本的不会出现。 参考：Using $this when not in object context error within array_walk","tags":[]},{"title":"PHP时区默认为Europe/zurich且修改php.ini无效的困惑","date":"2017-03-21T09:03:57.000Z","path":"posts/b9f89962.html","text":"为何我的date(“Y/m/d H:i:s”)相差了7个小时？ 环境：MacOS X EI Capitan / PHP5.6.25 今天在校验Crontab的计划执行时，利用PHP输出执行时间却发现输出的时间和当地事件相差了7个小时，对！是7不是8，并不是默认的UTC，呵呵了～ 好吧，一贯思路，我去把php.ini中的date.timezone修改成PRC。嗯，肯定正常了吧。 要能正常我也不会写本文了^_~! 不论是修改成PRC还是Asia/Shanghai又或者UTC，全都未然。 apache输出phpinfo()，查看date区域它的Default Timezone还是没变。 在控制台查看php -i | grep zone也还是同样没变 核对加载的php.ini文件是否正确并且配置信息格式是否正确 控制台使用php -a交互模式，调用ini_get(&#39;date.timezone&#39;)，检查配置的INI是否生效 全都没有任何问题啊！！！为什么结果却出乎意料呢？？百度，谷歌我都问遍了，大家没人出现我这样的情况啊。正当我发愁的时候，小伙伴过来给我支招了。 他说：配置文件改好了吗？服务器重启了吗？修改的配置文件的路径是正确的吗？ 我说：Yes，对呀，没问题，好奇怪啊！(正在期待他给出我没想到的情况)，突然他说，你看看是不是其他地方也设置了这个值。 我一脸肯定地告诉他其他的INI都是扩展配置（其实内心并不是很确定），虽然扩展配置的INI文件特别多，一个一个查特别麻烦，但为了解决问题不能放过任何一个可能性啊。 打住，我可没有一个一个文件的去查！一条命令拯救了我：find /usr/local/php5/ -name &quot;*.ini&quot; -print | xargs grep &quot;Europe&quot;，解释：在PHP5根目录中查找所有的INI文件，并输出文件内容包含’Europe’的文件名+所在行。 那啥不负有心人啊，看结果看结果！！ 果然这不是一个扩展配置INI，屏蔽掉它的配置！ 验证通过！！！原来就是这个文件搞的鬼。这个文件是为MacOS适配PHP5的作者弄的，并非扩展配置。或许我没仔细看他的说明吧，怪我咯。哈哈哈～","tags":[{"name":"php困惑","slug":"php困惑","permalink":"http://www.imsry.cn/tags/php困惑/"}]},{"title":"php上传进度之uploadprogress","date":"2017-02-07T03:29:13.000Z","path":"posts/f0dc176.html","text":"我的学习是项目驱动，这次遇到的需求是上传进度条。 注意：此方法仅在Apache下运行PHP时有效，如果您采用FastCGI方式(如：Nginx+fpm)，这个不适用！ 通过查PHP手册，了解到PHP版本5.4+有一个新特性uploadprogress，也可以说是新扩展吧！ 12当 session.upload_progress.enabled INI 选项开启时，PHP 能够在每一个文件上传时监测上传进度。 这个信息对上传请求自身并没有什么帮助，但在文件上传时应用可以发送一个POST请求到终端（例如通过XHR）来检查这个状态当一个上传在处理中，同时POST一个与INI中设置的session.upload_progress.name同名变量时，上传进度可以在$_SESSION中获得。 当PHP检测到这种POST请求时，它会在$_SESSION中添加一组数据, 索引是 session.upload_progress.prefix 与 session.upload_progress.name连接在一起的值。 将这个扩展启用，需要开启PHP.INI支持： session.upload_progress.enabled = On session.upload_progress.cleanup = On session.upload_progress.prefix = &quot;upload_progress_&quot; session.upload_progress.name = &quot;PHP_SESSION_UPLOAD_PROGRESS&quot; session.upload_progress.freq = &quot;1%&quot; session.upload_progress.min_freq = &quot;1&quot; 当然，我按照官方的示例操作了N久，就是读不到此类session的值。一开始以为是公司框架的问题，后来自己在本地单独写文件来测试，结果还是一样！ 在网上查找各种此类问题的解决办法，虽说有相同提问的，但是解答问题的人根本就没找到根本的原因。其实很简单：上传的文件Size太小 如果在本地测试，上传文件就相当于复制粘贴一个文件到磁盘的另一个地方，一般来说小于50M就是秒传了，因为我这里是SSD硬盘，所以会更快。所以本次测试一定要选一个大一点文件来进行，起码100M是要的。 好的，大文件上传也是要注意的，因为PHP默认限制的upload_max_filesize为2M，post_max_size为8M；所以尽可能设置大一点，我测试文件900M左右，就给这两项都设置为1024M(可能我疯了^_-)。 然后就是写测试程序了，代码就不贴了，讲讲思路： 测试页： 创建表单，添加session.upload_progress.prefix字段，value=KEY的值； 添加file域； 提交表单，并带上KEY对上传进度接口进行轮询，直到进度达100%。 处理文件上传部分： 主要是接收上传文件，然后将$_FILE中的文件保存到本地文件； 获得上传进度部分： 需要打开session支持session_start()，然后通过ini_get(&quot;session.upload_progress.prefix&quot;)和KEY获取$_SEESION，在通过bytes_processed和content_length的比值x100%获取传输进度； 最后讲一下前面提到的为何PHP以FastCGI模式运行的时候这个扩展不适用： PHP以FastCGI模式运行的时候，仅且仅当数据传送完毕后，PHP才获取到数据，此时文件已经发送完毕，所以相关的session这时候才开始创建，而默认情况下，这个session在文件传送完毕又会自动销毁，所以这个根本没有任何意义。 如果想要在以FastCGI模式下使用PHP的uploadprogress是不可能的了，在Nginx下可以选择使用NGINX Upload Progress Module来达到这个需求。 参考： 基于session.upload_progress 的文件上传进度显示 PHP:Session 上传进度 Does session upload progress work with nginx and php-fpm?","tags":[{"name":"php上传进度","slug":"php上传进度","permalink":"http://www.imsry.cn/tags/php上传进度/"}]},{"title":"Learning-Markdown","date":"2017-01-19T08:57:03.000Z","path":"posts/bb4e3702.html","text":"MarkDown的学习 这里面就是一些简单的MarkDown语法，提供给我自己看一下，刚开始还是需要不断练习来接受这种语法，必然能够在码字的过程中体验乐趣！ 下面开始啦： 引用 这里就是引用 一个&gt;符号就是引用 文字两个 * 包围是粗体 一个 \\ 包围是斜体* 列表一个* 是无序列表 第一行内容 第二行内容 第三行内容 序号加.是 有序列表 有序列表1 有序列表2 有序列表3 表格|表格 |名字 |值 | |------|:-----:|---:| |测试|Anthony|$30| |测试|Anthony|$30| 表格 名字 值 测试 Anthony $30 测试 Anthony $30 图片与超链接超链接：[点我跳转吧](http://www.imsry.cn) 图片： ![一张图片](http://img.cm-soft.cn/2017011975502me.png) 超链接：点我跳转吧 图片： 代码测试代码可以用三个`或者直接缩进一个tab 123456789101112int main(int argc, const char * argv[]) &#123; int n; double capital,deposit; printf(&quot;please input n and capital:&quot;); scanf(&quot;%d,%lf&quot;,&amp;n,&amp;capital); printf(&quot;n:%d and capital:%lf\\n&quot;,n,capital); if(n&gt;=0&amp;&amp;capital&gt;=0)&#123; deposit = capital+capital*n*rate; &#125; printf(&quot;%lf&quot;,deposit); return 0;&#125;","tags":[{"name":"essay","slug":"essay","permalink":"http://www.imsry.cn/tags/essay/"},{"name":"MarkDown","slug":"MarkDown","permalink":"http://www.imsry.cn/tags/MarkDown/"}]},{"title":"Hi! Github Pages","date":"2017-01-19T07:41:23.000Z","path":"posts/c956a8c9.html","text":"时间 事件 2017/01/17 考虑到服务器5个月后到期，无法提供一个月65元的费用（因为性价比），寻求新的方式 2017/01/18 快速学习Hexo与Github Pages，初步学习如此方式的博客 2017/01/19 配置Hexo和域名解析，完成以前的文章的迁移（图片还没找到合适的方法），imsry.cn域名正式使用！ 感谢大家的支持与厚爱！ 注：dshui.wang暂时并存一段时间，以免部分朋友找不到入口。请大家记住新的地址（www.imsry.cn –对不起.cn/抱歉.cn/我是抱歉.cn）","tags":[{"name":"essay","slug":"essay","permalink":"http://www.imsry.cn/tags/essay/"}]},{"title":"我是如何将mac OS X(10.11.6)的PHP版本升级到5.6.29的","date":"2017-01-16T10:52:38.000Z","path":"posts/8ca39648.html","text":"由于项目和学习的需要，本机曾经升级到了5.5.38已经不够折腾了，所以时候升级一波5.6了（没必要到7的时候，我是不会去升级的）。首先直接去搜索引擎找便捷的方法呗，直接就选中了一款来自“简书”的文章，因为它就简单的一条命令：1curl -s http://php-osx.liip.ch/install.sh | bash -s 5.6 看到这个地址，我心里就放心了！因为上一个版本也是liip的。我首先看了一下这个install.sh的内容，确定没有什么危险，里面其实就是检测一下设备的系统版本和cpu类型是否可以升级。环境检测没问题就去下载了一个叫做“packager.tgz”的压缩包，然后解压，运行里面的pythony脚本。12#TYPE = 5.6-10.10sudo packager.py install $TYPE-frontenddev 看到了sudo哦，嘻嘻，自己下载那个packager.tgz看看python代码。好，打开packager.py，找到脚本入口:c = Cli()c.run()嗯，好！ 看不懂了。。。管他呢 直接运行吧。。。然而结果是，install.sh运行没啥问题，到了python脚本的时候，要下载一个更新包，就一直不动了。12downloading https://s3-eu-west-1.amazonaws.com/php-osx.liip.ch/install/5.6-10.10-frontenddev-latest.datdownloading https://s3-eu-west-1.amazonaws.com/php-osx.liip.ch/install/5.6-10.10/frontenddev/5.6-10.10-frontenddev-5.6.29-20170114-210819.tar.bz2 第一行是获取最新的更新包url，第二行是下载并保存这个更新包。然而我却傻傻的等了一下午！！！！！一个下午，喝了两杯水，改了一个BUG，上了两次厕所！ 等不了了，control+c终止脚本运行，重新运行试一下，结果还是一样。所以我直接去浏览器打开这个URL，发现真的龟速啊！机智的我直接用迅雷下好了，但是不知道这个包怎么用呀，里面除了包含编译好的php一整套，还有别的，我也不知是干嘛的和该怎么用，不行，不能自己覆盖，想看一下python脚本都执行了些什么，自己手动操作吧，但是打开python代码文件的之后，跑来跑去，给绕晕了。最终，我选择在它下载这个更新文件的时候，替换成直接使用我本地下好的文件。（不得不说，我还是挺会想办法的） 12345678910111213def __fetchIndividual(self, url): try: print &quot;downloading %s&quot; % url filename, headers = urllib.urlretrieve(url) print &quot;filename: %s&quot; % filename self.__filename = filename self.__file = tarfile.open(self.__filename, &apos;r&apos;) self.__file.errorlevel = 2 return True except IOError: return False except tarfile.ReadError: return False 果断修改成： 123456789101112131415161718def __fetchIndividual(self, url): try: print &quot;downloading %s&quot; % url # 修改开始 if url.find(&apos;5.6-10.10-frontenddev-5.6.29-20170114-210819.tar.bz2&apos;): filename = &quot;/usr/local/packager/tmp/5.6-10.10-frontenddev-5.6.29-20170114-210819.tar.bz2&quot; else: filename, headers = urllib.urlretrieve(url) print &quot;filename: %s&quot; % filename # 修改结束 self.__filename = filename self.__file = tarfile.open(self.__filename, &apos;r&apos;) self.__file.errorlevel = 2 return True except IOError: return False except tarfile.ReadError: return False 那一串字符其实就是要下载的文件的名字，这样他就不会去网上下载了直接用本地的。好！ 然后自己手动执行这个python脚本1sudo /usr/local/packager/packager.py install 5.6-10.10-frontenddev 没毛病，自己乖乖的执行完了。。。最终：/usr/local/php5/bin/php -v输出：PHP 5.6.29 (cli) (built: Jan 14 2017 21:05:20)Copyright (c) 1997-2016 The PHP GroupZend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies with Zend OPcache v7.0.6-dev, Copyright (c) 1999-2016, by Zend Technologies with Xdebug v2.2.5, Copyright (c) 2002-2014, by Derick Rethans没毛病！ 感谢https://php-osx.liip.ch/提供的一切！ 参考：【简书】- mac下更新自带的PHP版本到5.6或7.0","tags":[{"name":"php","slug":"php","permalink":"http://www.imsry.cn/tags/php/"},{"name":"macosx","slug":"macosx","permalink":"http://www.imsry.cn/tags/macosx/"}]},{"title":"2017年的开篇，居然是这个！","date":"2016-12-31T16:13:27.000Z","path":"posts/5fc11633.html","text":"今天一天其实可以说，相～当～累！ 因为去了一趟八达岭长城，徒步北长城让我精疲力竭。回来已经晚上9点了，收拾收拾东西，洗漱完。坐着等2017的到来。然后就干了这么一件事： 然后产生的结果是： 对于这个，2017年1月1日 00时00分01秒，我露出了无奈的笑容～","tags":[]},{"title":"JetBrains家的IDEA真不便宜","date":"2016-12-21T03:40:36.000Z","path":"posts/d8424cb6.html","text":"先贴出来正版购买链接！ JetBrains公司的那些IDE真的是非常的好用，No.1的水准！一直都非常喜欢这家的产品，也难怪价格会稍微贵那么不止一点点了！IntelliJ IDEA专为Java打造，当然还有为PHP打造的PHPStorm，为javascript打造的WebStorm，为Python打造的PyCharm等等。不过今天不是来吹嘘JetBrains家的产品的，我是来吐槽自己买不起的事实。[/摊手] 我不提供注册码，我也不提供破解激活，今天发出来的是ServerLicense激活。没错，激活的时候输入一个网址就可以激活了。以前就一直用的那谁的方法，在这里要谢谢他：传送门在激活的界面输入：http://idea.fantwo.com/ 如下图，点击Activate即可！","tags":[]},{"title":"初探MongoDB安全之RBAC（基于角色的访问控制）","date":"2016-11-04T11:37:07.000Z","path":"posts/432477cb.html","text":"写在开头的一段话：我是一名忠实的SQL玩家，虽说MySQL并没有达到精通的级别，但在日常使用中还是会经常出现“这个表要是NoSQL的话就好办多了”的想法。所以说，我认为无论是站在关系型数据库还是非关系性数据库的立场上，二者并不是相对立的，而且我觉得应该用“相辅相成”来形容二者的关系。 通过在《MongoDB 教程|菜鸟教程》轻量级的了解了一下MongoDB的基础知识，我在自己电脑上安装并使用了这款NoSQL软件。很明显地，读别人的教程只能是迅速的、简单的和容易理解的。也正是这样，我发现了其中有一块并没有提及！那就是并没有说要登录数据库啊。 简单的使用： 启动MongoDB服务： Anthony-MacBook-Air:~ anthony$ mongod --dbpath ~/mongodata/ 2016-11-04T16:48:15.170+0800 I CONTROL [initandlisten] MongoDB starting : pid=1191 port=27017 dbpath=/Users/anthony/mongodata/ 64-bit host=Anthony-MacBook-Air.local 2016-11-04T16:48:15.171+0800 I CONTROL [initandlisten] db version v3.2.8 ... 2016-11-04T16:48:15.825+0800 I NETWORK [HostnameCanonicalizationWorker] Starting hostname canonicalization worker 2016-11-04T16:48:15.826+0800 I NETWORK [initandlisten] waiting for connections on port 27017 连接数据库： Anthony-MacBook-Air:~ anthony$ mongo MongoDB shell version: 3.2.8 connecting to: test Server has startup warnings: 2016-11-04T16:48:15.820+0800 I CONTROL [initandlisten] 2016-11-04T16:48:15.820+0800 I CONTROL [initandlisten] ** WARNING: soft rlimits too low. Number of files is 256, should be at least 1000 > 这样就算连接上了，而且可以进行任何操作，没有限制。实际上在开发测试也没必要纠结安全登录问题，但是如果是正式环境，那也不能放松啊！ Authorization安全（Security）中的一种，用户授权机制 Role-Based Access Control（RBAC)MongoDB使用基于角色的访问控制(RBAC)来对一个MongoDB进行管理，用户可以被授予一个或多个角色（也可以说是策略组）来确保用户对资源的访问权限。 启用授权策略： MongoDB默认是不开启授权机制的，所以我们在启动服务的时候，可以加上–auth参数来明确告诉它开启授权策略，也可以在配置文件中配置。不过一旦这样启动了，连接数据库就必须进行用户验证了，如果之前没有添加用户的话，可想而知。 角色（策略组）： 一个角色代表对某个资源上指定操作的权限. 每个权限可以是角色中明确指定的、从另外角色继承的，也可以二者都是。 用户和角色： 你可以在添加用户的时候对其进行角色（策略或权限）分配，也可以对已经存在的用户更新角色。 用户将拥有被分配角色的所有权限，当然，用户可以被分配多个角色。尽管这个用户仅在一个数据库中被创建，但只要Role中分配了其他数据库的权限，该用户也可以夸库访问。 内置角色和自定义角色： MongoDB提供了一些内置的角色来实现一套系统的通用权限策略，当内置角色无法满足实际需要的时候，我们可以自定义独特的角色。 开启用户授权控制(Enable Auth) 概述： 当开启用户授权控制的时候，表示用户需要进行认证自己的身份才能够根据自己所拥有的权限进行数据库访问。 用户管理员： 使用用户授权控制，你必须确保’admin’数据库中有’userAdmin’或’userAdminAnyDatabase’二者之一角色的用户，该用户可以管理用户和角色，如：创建用户，授予或撤销用户的角色，创建或修改通用角色。 如果你在创建用户之前就开启了授权控制，那么系统会提供一个本地例外，允许你在’admin’数据库中创建一个用户管理员，一旦你创建了用户管理员，你必须使用该用户验证授权来创建你所需要的其他用户。 步骤： 接下来将介绍如何在授权控制和非授权控制模式下的MongoDB数据库中首次添加一个用户管理员。 1. #### 非授权模式启动MongoDB服务端: mongod --port 27017 --dbpath ~/mongodata 2. #### 连接MongoDB实例： mongo --port 27017 3. #### 创建用户管理员： 在'admin'数据库中创建角色为“userAdminAnyDatabase”的用户“anthony”： use admin db.createUser( { user: \"anthony\", pwd: \"passwd\", roles: [ { role: \"userAdminAnyDatabase\", db: \"admin\" } ] } ) 4. #### 以授权模式重启MongoDB服务端： 命令行启动直接带上--auth参数即可，如果是使用的配置文件的形式，设置'security.authorization'。 mongod --auth --port 27017 --dbpath ~/mongodata 现在，连接到服务端的客户需要进行授权才能执行角色权限内的操作。 5. #### 连接服务端并使用用户管理员(&apos;anthony&apos;)进行授权验证： 两种方式，连接时指定或在连接后使用db.auth()方法验证 直接带上验证参数： mongo --port 27017 -u anthony -p --authenticationDatabase 'admin' 连接后再进行身份认证： Anthony-MacBook-Air:~ anthony$ mongo --port 27017 MongoDB shell version: 3.2.8 connecting to: test ... > use admin switched to db admin > db.auth('anthony','passwd') 1 > 6. #### 添加你所需要的附加用户： 当你使用用户管理员身份验证之后，你可以使用db.createUser()方法创建用户并给其分配角色。 用户管理员（本文中的'anthony'）只能够进行用户的管理和角色分配，如果进行其他的操作的话就会报错。 下面的例子将创建一个用户，他拥有两个不同数据库的不同权限： use test db.createUser( { user: \"user01\", pwd: \"01\", roles: [ { role: \"readWrite\", db: \"test\" }, { role: \"read\", db: \"local\" } ] } ) 7. #### 连接服务端并使用'user01'进行授权验证： mongo --port 27017 -u user01 -p --authenticationDatabase 'test' 这样，使用user01连接数据库后，就可以对&apos;test&apos;库进行读和写操作，也可以切换到&apos;local&apos;库，但权限为‘只读’ 用户与角色的管理(Manage Users and Roles)这一块的内容，我们改日再聊。或者自己先阅读官方文档","tags":[{"name":"MongoDB","slug":"MongoDB","permalink":"http://www.imsry.cn/tags/MongoDB/"},{"name":"授权","slug":"授权","permalink":"http://www.imsry.cn/tags/授权/"},{"name":"数据库","slug":"数据库","permalink":"http://www.imsry.cn/tags/数据库/"}]},{"title":"实现寻找两个字符串的最大公子串的方法","date":"2016-10-27T07:32:50.000Z","path":"posts/28c3b503.html","text":"昨天在做某兔的校招笔试题的时候遇到的题目，就这一个编程题，然而当时却没有拿下，把它和字符串匹配中的子串包含给弄混了，哎！废话少说，上代码！ 123456789101112131415161718192021222324252627282930&lt;?phpfunction MaxSubCommonStr($str1,$str2)&#123; $a = str_split($str1); //字符串分割成数组 $b = str_split($str2); $len1 = strlen($str1); //字符串的长度 $len2 = strlen($str2); $maxlen = 0; //最大计数器 for($i=0;$i&lt;$len1;$i++)&#123; for($j=0;$j&lt;$len2;$j++)&#123; if($a[$i] == $b[$j])&#123; //找到第一个相等的字符 $as = $i; //拷贝字符串1的起点 $bs = $j; //拷贝字符串2的起点 $count = 1; //有一个相等的字符了 while ($as + 1 &lt; $len1 &amp;&amp; $bs + 1 &lt; $len2 &amp;&amp; $a[++$as] == $b[++$bs]) $count++; //往后比较，每匹配一个计数+1，直到其中一个查完或者出现不相等 if($count &gt; $maxlen)&#123; //当本次计数长度大于最大记录时 $maxlen = $count; //更新最大计数长度 $start1 = $i; //更新本次比较的字符串1起点 $start2 = $j; //更新本次比较的字符串2起点 &#125; &#125; &#125; &#125; return substr($str1,$start1,$maxlen); //直接返回字符串1，从$start1起点往后$maxlen最大匹配长度个数的子串&#125;$str1 = &apos;abcdefgabc&apos;;$str2 = &apos;defghijabc&apos;;echo MaxSubCommonStr($str1,$str2);?&gt; 没什么含金量，只是写出来练练手，思路照搬过来的。","tags":[{"name":"php","slug":"php","permalink":"http://www.imsry.cn/tags/php/"},{"name":"子串","slug":"子串","permalink":"http://www.imsry.cn/tags/子串/"}]},{"title":"[合集]面试中遇到的那些提问","date":"2016-10-24T07:37:46.000Z","path":"posts/1b5103be.html","text":"参加了好几家公司的面试了，一直也没来得及将这些问题整理一下，今天正好不想到处跑了，所以先在这里写下这一篇文章，以后会不定期更新。 非技术篇： 先来一个自我介绍吧（废话！ =_=!） 用3个词组评价你自己 说一说你一生中感到最有成就感的一件事 说一说你曾经遇到过的最沮丧的一件事 说说你的优缺点 说说你的父母都是做什么的？ 你有多少个兄弟姐妹？ 你为什么选择来参加我们公司的招聘 你对加班的看法和出差的看法，以及你对加班和出差的最大忍耐极限 你觉得你在哪一方面比较优秀？ 别人都是怎么评价你的？ 在同一个Team中，当别人的意见和自己的意见冲突的时候，你会怎么办？ 拿一个你最熟悉的项目来讲讲，它的架构、设计、遇到的问题以及是如何解决的 你对我们的开发团队有什么期望吗？ 最后，你有什么想要问我的？… 语言篇： 非得让我比较：PHP和Java的区别和优缺点（PHP是面向对象+面向过程的弱类型语言，Java是纯面向对象的强类型语言）Java:平台可移植性（平台无关性），多用于企业级开发，无论是桌面端、APP还是Web都可以使用Java进行开发；PHP:后起之秀，融合了Java、Perl、C等语言的各种优点，在互联网领域有很高的专注度总体相比：Java具有绝对优势，但是在Web领域，PHP完胜Java，我是一个PHPer，但也学过JavaEE，就我所知，Java的ssh三大框架配置复杂，学习和使用起来相当恶心，相比之下我觉得ThinkPHP、Yaf、Yii、Ci等框架甩Java的ssh框架两到三公里(^_^无心和Javaer打架) PHP中数组的数据结构是什么样子的？ PHP中操作数组的函数你知道哪些？ PHP的魔术函数（方法）你知道哪些？get/set什么时候，怎么调用？ 了解JVM吗？垃圾回收机制？ JavaScript代码阅读：问输出结果 (function(){ var a=b=5; })(); alert(b); //弹出框显示数字5，因为b没有var修饰，属于全局变量。 外部引用CSS，link标签和@import的区别… 数据库篇： MySQL中如何实现查询结果为两个字段的组合，如[name-age]使用CONCAT_WS()方法，如 SELECT CONCAT_WS(‘-‘,name,age) from user; MySQL数据库存储引擎有哪些以及它们的区别。 你对锁机制了解吗？ 你所用过的NoSQL有哪些？什么情况下需要用NoSQL。 豆瓣中，有演员，有电影，一个演员可能参演多部电影，一部电影由多个演员参与。要求：设计表结构，查询指定演员所参演的所有电影中，分数排名第二的那部电影的名称。 解答：演员和电影之间是多对多关系，所以除了演员表和电影表，还需要一个关系表，总共3个表： /*演员表 `douban_actors` */ CREATE TABLE `douban_actors` ( `id` int(11) unsigned NOT NULL AUTO_INCREMENT, `name` varchar(10) NOT NULL DEFAULT '', PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=1 DEFAULT CHARSET=utf8; INSERT INTO `douban_actors` (`id`, `name`) VALUES (1, '演员A'), (2, '演员B'), (3, '演员C'), (4, '演员D'); /*电影表 `douban_movies` */ CREATE TABLE `douban_movies` ( `id` int(11) unsigned NOT NULL AUTO_INCREMENT, `name` varchar(20) NOT NULL DEFAULT '', `score` double NOT NULL, PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=1 DEFAULT CHARSET=utf8; INSERT INTO `douban_movies` (`id`, `name`, `score`) VALUES (1, '电影A', 2), (2, '电影B', 4),(3, '电影C', 5.3),(4, '电影D', 6.5),(5, '电影E', 4.1),(6, '电影F', 2.2),(7, '电影G', 4.4); /*关系表 `douban_acttomv` */ CREATE TABLE `douban_acttomv` ( `id` int(11) unsigned NOT NULL AUTO_INCREMENT, `aid` int(10) unsigned NOT NULL, `mid` int(10) unsigned NOT NULL, PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=1 DEFAULT CHARSET=utf8; INSERT INTO `douban_acttomv` (`id`, `aid`, `mid`) VALUES (1, 1, 1),(2, 1, 6),(3, 1, 2),(4, 1, 4),(5, 1, 5),(6, 2, 1),(7, 2, 3),(8, 2, 4),(9, 2, 5),(10, 3, 2),(11, 3, 3),(12, 3, 5),(13, 3, 7),(14, 4, 1),(15, 4, 4),(16, 4, 6); 查询语句： select * from `douban_movies` m left join `douban_acttomv` t on t.mid = m.id left join `douban_actors` a on a.id = t.aid where a.name = \"演员A\" order by m.score desc limit 1,1; … 算法篇： 各种排序算法的不同情况的时间复杂度：(图片源自网络) 写一个二叉树的层序遍历（递归和队列的使用）&lt;?phpclass BTree{public $_data = null;public $_left = null;public $_right = null;public function __construct($data){$this-&gt;_data = $data; }}$root = new BTree(1);$root-&gt;_left = new BTree(2);$root-&gt;_right = new BTree(3);$root-&gt;_left-&gt;_left = new BTree(4);$root-&gt;_left-&gt;_right = new BTree(5);$root-&gt;_right-&gt;_left = new BTree(6);$root-&gt;_right-&gt;_right = new BTree(7); function cengxu($root,&amp;$stack){ echo $root-&gt;_data.” “; if($root-&gt;_left != null){ array_push($stack,$root-&gt;_left); } if($root-&gt;_right != null){ array_push($stack,$root-&gt;_right); } $to = array_shift($stack); if($to) cengxu($to,$stack);}$arr = array();cengxu($root,$arr);… 计算机原理篇： 冯· 诺依曼体系结构中，计算机由哪几部分组成？（输入设备、输出设备、存储器、运算器、控制器）… 网络与安全篇： 计算机网络OSI七层模型 VS TCP/IP四层模型：[caption id=”attachment_532” align=”aligncenter” width=”300”] OSI七层 VS TCP/IP四层模型[/caption] TCP/IP协议簇（TCP传输控制协议、UDP用户数据包协议、IP网际协议、ICMP因特网消息控制协议、DHCP动态主机配置协议）：TCP连接3次握手，断开4次握手；TCP面向连接传输，UDP则相反；TCP进行可靠传输，UDP传输不可靠，可靠手段（顺序编号、确认机制ACK、超时重传）； 安全起见，数据传输中往往需要进行加密，你会怎么做？ 数据接口的调用，如何验证调用者的身份是否合法。 微信中的接收消息与事件，可能由于网络问题会进行最多3次的重传，问：如何对消息排重… Linux篇： 输出当前正在执行的进程个数（ps -ef | wc -l） 考察ps、wc和管道 查看Linux内核版本：uname -a、cat /proc/version查看Linux系统版本：lsb_release -a、cat /etc/redhat-release、cat /etc/issue 给你一台服务器，你如何找到它的web目录、php的配置文件。…","tags":[{"name":"提问","slug":"提问","permalink":"http://www.imsry.cn/tags/提问/"},{"name":"面试","slug":"面试","permalink":"http://www.imsry.cn/tags/面试/"}]},{"title":"PHP常用算法的方法实现(冒泡、选择、插入、快排、二分查找)","date":"2016-10-24T05:19:03.000Z","path":"posts/eecfc875.html","text":"以前说起写算法，基本上都是拿C语言来写，因为用C可以更清楚的理解各种排序算法和数据结构。今天遍换成使用PHP语言来写几个常用的算法。这次要写的算法包括： 冒泡排序 插入排序 选择排序（直接） 快速排序 二分查找 冒泡：&lt;?php $arr = array(4,3,5,6,8,0,10,15,11); echo implode(&apos; &apos;,$arr); //冒泡排序 最坏 平均O(N^2) 最好O(N) function BubbleSort($arr){ $length = count($arr); if($length &lt;= 1){ return $arr; } for($i=0;$i&lt;$length;$i++){ for($j=0;$j&lt;$length-$i-1;$j++){ if($arr[$j] &gt; $arr[$j+1]){ $tmp = $arr[$j]; $arr[$j] = $arr[$j+1]; $arr[$j+1] = $tmp; } } } return $arr; } echo &quot;\\nBubbleSort:\\n&quot;; echo implode(&apos; &apos;,BubbleSort($arr)).&quot;\\n&quot;; ?&gt; 插入：12345678910111213141516171819202122&lt;?phpheader(&quot;Content-type:text/html;charset=utf-8&quot;);$arr = array(4,3,5,6,8,0,10,15,11);echo implode(&apos; &apos;,$arr);//插入排序 最坏情况下O(N^2) 最好情况下O(N)function InsertSort($arr)&#123; $length = count($arr); if($length &lt;= 1)&#123; return $arr; &#125; for($i=1;$i&lt;$length;$i++)&#123; $now = $arr[$i]; $j = $i-1; while ($now &lt; $arr[$j] &amp;&amp; $j &gt;= 0) &#123; $arr[$j] = $arr[$j--]; &#125; $arr[++$j] = $now; &#125; return $arr;&#125;echo &quot;\\nInsertSort:\\n&quot;;echo implode(&apos; &apos;,InsertSort($arr)).&quot;\\n&quot;; 直接选择：123456789101112131415161718192021222324252627&lt;?phpheader(&quot;Content-type:text/html;charset=utf-8&quot;);$arr = array(4,3,5,6,8,0,10,15,11);echo implode(&apos; &apos;,$arr);//选择排序 最坏 最好 平均都是O(N^2)function SelectSort($arr)&#123; $length = count($arr); if($length &lt;= 1)&#123; return $arr; &#125; for($i=0;$i&lt;$length;$i++)&#123; $min = $i; for($j=$i+1;$j&lt;$length;$j++)&#123; if($arr[$min]&gt;$arr[$j])&#123; $min = $j; &#125; &#125; if($min != $i)&#123; $tmp = $arr[$min]; $arr[$min] = $arr[$i]; $arr[$i] = $tmp; &#125; &#125; return $arr;&#125;echo &quot;\\nSelectSort:\\n&quot;;echo implode(&apos; &apos;,SelectSort($arr)).&quot;\\n&quot;; 快排:12345678910111213141516171819202122232425262728&lt;?phpheader(&quot;Content-type:text/html;charset=utf-8&quot;);$arr = array(4,3,5,6,8,0,10,15,11);echo implode(&apos; &apos;,$arr);//快速排序 最好 平均O(NlgN) 最坏O(N^2)function QuickSort($arr)&#123; $length = count($arr); if($length &lt;= 1)&#123; return $arr; &#125; $middle = $arr[0]; $leftArray = array(); $rightArray = array(); for($i=1;$i&lt;$length;$i++)&#123; if($arr[$i]&lt;$middle)&#123; array_push($leftArray,$arr[$i]); // $leftArray[] = $arr[$i]; &#125;else&#123; array_push($rightArray,$arr[$i]); // $rightArray[] = $arr[$i]; &#125; &#125; $leftArray = QuickSort($leftArray); $rightArray = QuickSort($rightArray); return array_merge($leftArray,array($middle),$rightArray);&#125;echo &quot;\\nQuickSort:\\n&quot;;echo implode(&apos; &apos;,QuickSort($arr)).&quot;\\n&quot;; 还有一个，排好序的数组，进行查找key的位置： 二分查找：123456789101112131415161718192021&lt;?phpheader(&quot;Content-type:text/html;charset=utf-8&quot;);$arr = array(0,1,2,3,4,5,6,7,8,9,10);echo implode(&apos; &apos;,$arr);//二分查找 function BinarySearch($arr,$low,$hight,$key)&#123; while ($low &lt;= $hight) &#123; $mid = intval(($low+$hight)/2); if($key == $arr[$mid])&#123; return $mid; &#125;else if($key &lt; $arr[$mid])&#123; $hight = $mid - 1; &#125;else&#123; $low = $mid + 1; &#125; &#125; return -1;&#125;$key = 4;echo &quot;\\nBinarySearch:&#123;$key&#125;\\n&quot;;echo BinarySearch($arr,0,count($arr)-1,$key).&quot;\\n&quot;;","tags":[{"name":"php","slug":"php","permalink":"http://www.imsry.cn/tags/php/"},{"name":"排序算法","slug":"排序算法","permalink":"http://www.imsry.cn/tags/排序算法/"}]},{"title":"一种较好的实现PHP异步发送邮件的实现","date":"2016-09-11T13:02:45.000Z","path":"posts/101ef104.html","text":"前些天在写我的TR-System（社团招新管理系统）的时候，用到了邮箱验证用户注册，也就是注册成功后，需要访问收到的邮件中的URL进行用户激活。这个事件发生在用户提交注册请求之后，系统需要立即发送一封邮件用于激活，但是系统在调用PHPMailer的时候需要进行SMTP连接邮箱系统（用的腾讯企业邮），往往在这个时候会出现等待的情况。如果让用户来承担这个等待时间，体验也太差了！，没见过哪个系统上注册个用户，还需要慢慢等待系统告诉我到底有没有注册成功。一开始在写的时候，直接在POST请求中处理，写入数据库后就调用sendEmail方法，情况是这样的：1.提交注册 --&gt; 2.写入数据库 --&gt; 3.发送Email --&gt; 4.注册成功。这样在用户看来是有一个漫长的等待的。实际上应该为：1.提交注册 --&gt; 2.写入数据库 --&gt; 3.注册成功。 ||||||||||||||||||--&gt;发送Email这样的才是一个拥有良好用户体验的系统 ^_^ 。若是在Java等环境下，咱们可以很好利用多线程，分出来一个任务让另一个线程去完成。但是！PHP这个单线程环境下，没有new Thread来搞这个事情啊。 不过，换一个角度，线程不行的，我就给个新进程呗。当然不是在当前进程创建新进程。 咱们重新写一个文件，sendEmail.php $input = file_get_contents(\"php://input\"); $data = json_decode($input,true); $signature = $data['signature']; unset($data['signature']); ksort($data); $sign = sha1(implode($data)); if($sign == $signature){ SendMail($data['address'],$data['title'], $data['message'], $data['fromname']); } 通过代码可以看到，主要发送邮件的还是SendMail()方法，上面是做了一个验证算法的，这样是为了避免这个接口被他人恶意调用，当然，这只是很low的一个算法。 假如调用这个接口的URI为http://localhost/sendEmail.php 咱们在系统中写两个方法： //异步调用方法 function SendMail_Sock($address, $title, $message, $fromname = '滴水网') { $post_url = 'http://localhost/sendEmail.php'; $arr=array( 'address'=>$address, 'title'=>$title, 'message'=>$message, 'fromname'=>$fromname, ); ksort($arr); $arrstr = implode($arr); $arrstr = sha1($arrstr); $arr['signature'] = $arrstr; return sock_post($post_url,$arr); } //fsockopen模拟POST请求到指定url function sock_post($url,$data=array()){ // $query = http_build_query($data); $query = json_encode($data); $info = parse_url($url); $fp = fsockopen($info[\"host\"], 80, $errno, $errstr, 8); $head = \"POST \".$info['path'].\"?\".$info[\"query\"].\" HTTP/1.0\\r\\n\"; $head .= \"Host: \".$info['host'].\"\\r\\n\"; $head .= \"Referer: http://\".$info['host'].$info['path'].\"\\r\\n\"; $head .= \"Content-type: application/x-www-form-urlencoded\\r\\n\"; $head .= \"Content-Length: \".strlen(trim($query)).\"\\r\\n\"; $head .= \"\\r\\n\"; $head .= trim($query); $write = fputs($fp, $head); return $write; //只要fsockopen()成功打开，就返回成功，这里发送数据后并不需要接收反馈，所以无需等待 } 以后在需要异步发送邮件的时候直接使用SendMail_Sock()方法就行了。但是这样也有不利之处，那就是到底有没有发送成功，只有用户自己知道 【悲哀】。","tags":[{"name":"php","slug":"php","permalink":"http://www.imsry.cn/tags/php/"},{"name":"email","slug":"email","permalink":"http://www.imsry.cn/tags/email/"},{"name":"异步发送","slug":"异步发送","permalink":"http://www.imsry.cn/tags/异步发送/"}]},{"title":"通用笔试-PHP测试编程题[2题]","date":"2016-09-02T01:53:21.000Z","path":"posts/673af3cd.html","text":"水仙花数题目描述：春天是鲜花的季节，水仙花就是其中最迷人的代表，数学上有个水仙花数，他是这样定义的： “水仙花数”是指一个三位数，它的各位数字的立方和等于其本身，比如：153=1^3+5^3+3^3。 现在要求输出所有在m和n范围内的水仙花数。 输入输入数据有多组，每组占一行，包括两个整数m和n（100&lt;=m&lt;=n&lt;=999）。 输出对于每个测试实例，要求输出所有在给定范围内的水仙花数，就是说，输出的水仙花数必须大于等于m,并且小于等于n，如果有多个，则要求从小到大排列在一行内输出，之间用一个空格隔开; 如果给定的范围内不存在水仙花数，则输出no; 每个测试实例的输出占一行。 样例输入100 120 300 380 样例输出no 370 371 1234567891011121314151617181920212223242526272829303132&lt;?phpecho &quot;Please Input\\n&quot;;$in = &apos;&apos;;while($in != &quot;\\n&quot;)&#123; $first = false; // $stdin = fopen(&quot;php://stdin&quot;,&apos;r&apos;); // $in = fgets($stdin); $in = fgets(STDIN);//使用标准输入 $args[] = explode(&apos; &apos;,trim($in));&#125;// fclose($stdin);array_pop($args);foreach ($args as $item) &#123; if($item[0] &lt;100 || $item[1]&gt;999 || $item[0]&gt;=$item[1]) &#123; echo &quot;输入参数不合法！\\n&quot;; exit(0); &#125; $start = $item[0]; $end = $item[1]; $res = array(); while($start &lt;= $end)&#123; $a = floor($start/100); $b = floor(($start-$a*100)/10); $c = $start%10; if($start == ($a*$a*$a+$b*$b*$b+$c*$c*$c))&#123; $res[] = $start; &#125; $start += 1; &#125; echo empty($res)?&quot;No\\n&quot;:implode(&apos; &apos;,$res).&quot;\\n&quot;;&#125;?&gt; 第二题： 求数列的和题目描述：数列的定义如下： 数列的第一项为n，以后各项为前一项的平方根，求数列的前m项的和。 输入输入数据有多组，每组占一行，由两个整数n（n&lt;10000）和m(m&lt;1000)组成，n和m的含义如前所述。输出对于每组输入数据，输出该数列的和，每个测试实例占一行，要求精度保留2位小数。 样例输入81 4 2 2 样例输出94.73 3.41 之前为了赶火车，现在到宿舍整理好了重新写了下面的代码 1234567891011121314151617181920212223242526272829&lt;?phpecho &apos;Please Input 2 Intger:&apos;;$in = &apos; &apos;;while($in != &quot;\\n&quot;)&#123; $first = false; $stdin = fopen(&quot;php://stdin&quot;,&apos;r&apos;); $in = fgets($stdin); $args[] = explode(&apos; &apos;,trim($in));&#125;fclose($stdin);array_pop($args);foreach($args as $item)&#123; $n = $item[0]; $m = $item[1]; if($n &gt;=10000 || $m &gt;= 1000)&#123; echo &apos;Input error!&apos;; exit(0); &#125; $sum = 0; $pre = $n; while($m&gt;=1)&#123; $sum += $pre; $pre = round(sqrt($pre),2); $m--; &#125; echo $sum.&quot;\\n&quot;;&#125;?&gt; 整个思路很简单，所以这里的代码就[an]没有注释[/an]","tags":[{"name":"测试","slug":"测试","permalink":"http://www.imsry.cn/tags/测试/"},{"name":"笔试","slug":"笔试","permalink":"http://www.imsry.cn/tags/笔试/"},{"name":"编程","slug":"编程","permalink":"http://www.imsry.cn/tags/编程/"}]},{"title":"You have new mail - Mac OS","date":"2016-08-31T07:49:10.000Z","path":"posts/413689f.html","text":"奇了怪了，莫名其妙！平时打开终端都没怎么注意，今天发现打开终端的时候，除了常规的上次登录提示，居然有一句“You have new mail”紧接着在下面出现了。平时都不用自带的邮件.app的 打开邮件，却没有啥。好的，本着好奇的心理，开始摸索。 要知道，在Linux下是有mail命令的，试着在Mac下输入看看有没有：我试着输入一下 mail -help Last login: Wed Aug 31 15:28:02 on ttys002You have mail.Anthony-MacBook-Air:~ anthony$ mail -helpmail: illegal option – hUsage: mail [-EiInv] [-s subject] [-c cc-addr] [-b bcc-addr] [-F] to-addr … mail [-EHiInNv] [-F] -f [name] mail [-EHiInNv] [-F] [-u user] mail -e [-f name] mail -HAnthony-MacBook-Air:~ anthony$没有-h这个参数，但是出现了英文的帮助，没啥用嘛！大致看起来就是收发邮件的咯？直接输入mail看看： Anthony-MacBook-Air:~ anthony$ mailMail version 8.1 6/6/93. Type ? for help.“/var/mail/anthony”: 2 messages 2 unread&gt;U 1 MAILER-DAEMON@Anthon Sun Aug 21 18:16 74/2642 “Undelivered Mail Retu” U 2 MAILER-DAEMON@Anthon Sun Aug 21 18:17 76/2662 “Undelivered Mail Retu”?成了交互模式了，那我就顺势回车按下去，看看有啥结果： Message 1:From MAILER-DAEMON Sun Aug 21 18:16:31 2016X-Original-To: anthony@Anthony-MacBook-Air.localDelivered-To: anthony@Anthony-MacBook-Air.localDate: Sun, 21 Aug 2016 18:16:31 +0800 (CST)From: MAILER-DAEMON@Anthony-MacBook-Air.local (Mail Delivery System)Subject: Undelivered Mail Returned to SenderTo: anthony@Anthony-MacBook-Air.localAuto-Submitted: auto-repliedMIME-Version: 1.0Content-Type: multipart/report; report-type=delivery-status; boundary=”714DB172D2C6.1471774591/Anthony-MacBook-Air.local” This is a MIME-encapsulated message. –714DB172D2C6.1471774591/Anthony-MacBook-Air.localContent-Description: NotificationContent-Type: text/plain; charset=us-ascii This is the mail system at host Anthony-MacBook-Air.local. I’m sorry to have to inform you that your message could notbe delivered to one or more recipients. It’s attached below.:“邮件退回” ？ 开什么玩笑！继续还是交互模式！！ 继续回车一直把上面的信息看完，我发现，的确不是系统自己抽风搞这样一出戏的。那2封邮件都看了，是我之前在写一个有关于站点通知发送Email给我的PHP脚本时的测试邮件。当时第一次在本地测试的时候没有填写SMTP服务器，脚本肯定是默认调用本地的服务器，但是我本地没有，所以造成了邮件发送失败的提醒。这个不会在系统内的邮件.app提示也就说的通了，因为这个属于系统内核的通知，也就自然只有在终端才会有通知表现了。既然不是什么系统Bug，那自然也就不需要我去担心了。读完这2个信息，在重新打开终端就不会出现这样的提示了！[an]哈哈[/an]","tags":[{"name":"Mac","slug":"Mac","permalink":"http://www.imsry.cn/tags/Mac/"},{"name":"mail","slug":"mail","permalink":"http://www.imsry.cn/tags/mail/"},{"name":"Terminal","slug":"Terminal","permalink":"http://www.imsry.cn/tags/Terminal/"},{"name":"终端","slug":"终端","permalink":"http://www.imsry.cn/tags/终端/"}]},{"title":"[修复]wordpress WP_Image_Editor_Imagick 指令注入漏洞","date":"2016-07-28T08:15:00.000Z","path":"posts/539cda52.html","text":"漏洞描述：该修复方案为临时修复方案，可能存在兼容性风险，为了防止WP_Image_Editor_Imagick扩展的指令注入风险，将wordpress的默认图片处理库优先顺序改为GD优先，用户可在/wp-includes/media.php的_wp_image_editor_choose()函数中看到被修改的部分云盾不提供自动修复，咱们自己来修复吧。根据提示，我们打开media.php 找到相关函数的内容： $implementations = apply_filters( ‘wp_image_editors’, array( ‘WP_Image_Editor_Imagick’, ‘WP_Image_Editor_GD’ ) );做如下顺序调整： $implementations = apply_filters( ‘wp_image_editors’, array( ‘WP_Image_Editor_GD’, ‘WP_Image_Editor_Imagick’ ) );正如上面的描述所说，临时方案嘛。Wordpress官方不做处理的话，你每次升级了程序，都会出现这样的报错，每次都得自己去修改。不过如果不在乎这个提示的话，不理也行！附当时的图片一张","tags":[{"name":"WordPress","slug":"WordPress","permalink":"http://www.imsry.cn/tags/WordPress/"},{"name":"云盾","slug":"云盾","permalink":"http://www.imsry.cn/tags/云盾/"},{"name":"修复","slug":"修复","permalink":"http://www.imsry.cn/tags/修复/"},{"name":"漏洞","slug":"漏洞","permalink":"http://www.imsry.cn/tags/漏洞/"}]},{"title":"已知单链表，写一算法将其倒置","date":"2016-07-22T17:26:03.000Z","path":"posts/2da191b.html","text":"题目：已知单链表H，写一算法将其倒置。即实现如图2.22的操作。(a)为倒置前，(b)为倒置后。依次取原链表中的每个结点，将其作为第一个结点插入到新链表中去，指针p用来指向当前结点，p为空时结束。 参考来源：线性表的链式存储和运算—单链表应用举例 实际操练：下面是根据这个思想所写出来的测试代码： // // main.c // NodeTest // // Created by anthony on 16/7/23. // Copyright © 2016年 Anthony. All rights reserved. // #include #include \"stdlib.h\" typedef struct node{ int data; struct node *next; }Node,*Linklist; /* * 初始化（创建）一个链表 * @Return Linklist */ Linklist link_create(){ Linklist L; if((L = malloc(sizeof(Node))) == NULL){ //申请节点空间失败 printf(\"ERROR!\"); return NULL; } L->next = NULL; return L; } /* * 销毁链表 */ void link_clear(Linklist L){ Linklist p = L; while (L->next != NULL) { //逐个判断，释放空间 p = L->next; L->next = p->next; free(p); p = NULL; } } /* * 链表的打印（顺序输出） */ void link_print(Linklist L){ Linklist p = L->next; while (p!=NULL) { printf(\"%d\\n\",p->data); p = p->next; } } /* * 在链表前面插入一个数 */ void link_insert_before(Linklist L,int x){ Linklist q; q = malloc(sizeof(Node)); //申请节点 q->data = x; //赋值数据 q->next = L->next; //将新节点的Next指向第一个节点 L->next=q; //将头节点的Next只想新的节点 } /* * 在链表后面插入一个数 */ void link_insert_after(Linklist L,int x){ Linklist p,q; p = L->next; while (p->next != NULL) { //遍历找到最后一个节点给p p = p->next; } q = malloc(sizeof(Node)); //申请节点 q->data = x; q->next = p->next; //将新节点q的Next指向最后一个节点p的Next 即：NULL p->next = q; //将原本最后一个节点p的Next指向新节点q } /* * 该算法只是对链表中顺序扫描一边即完成了倒置，所以时间性能为O(n)。 */ void link_reverse(Linklist L){ Linklist p,q; p = L->next; L->next = NULL; //将原链表置空 while (p) { //从头开始遍历链表 q = p; //临时保存当前节点p为q p = p->next; //p指向下一个节点 q->next = L->next; //当前节点的Next指向表尾 即：NULL L->next = q; //将当前节点往L链表的头部插入，因为每次都是往开头插入，这样最后的节点就变成了头结点了 } } int main(int argc, const char * argv[]) { //创建空链表 Linklist link = link_create(); //往头部插数据 link_insert_before(link, 2); link_insert_before(link, 5); link_insert_before(link, 9); link_insert_before(link, 20); //往尾部插数据 link_insert_after(link, 22); link_print(link); //打印 link_reverse(link); //逆序 link_print(link); //打印 link_clear(link); //清空 return 0; }","tags":[{"name":"倒置","slug":"倒置","permalink":"http://www.imsry.cn/tags/倒置/"},{"name":"数据结构","slug":"数据结构","permalink":"http://www.imsry.cn/tags/数据结构/"},{"name":"链表","slug":"链表","permalink":"http://www.imsry.cn/tags/链表/"}]},{"title":"nginx+php-fpm环境下的mysqld痛不欲生","date":"2016-05-21T16:57:47.000Z","path":"posts/86e6b4be.html","text":"问题背景今天突然发现自己的服务器又出现了Mysql服务器的崩溃，重启一下便恢复了。但是！下午2点的时候重启的，晚上回来一看，数据库又挂了！！！十分恼火啊！再重启一下，什么？直接启动不了啦！发生报错： [root@iZ28l1ca1vhZ ~]# service mysqld start Starting MySQL.The server quit without updating PID file (/usr/local/mysql/data/iZ28l1ca1vhZ.pid). [FAILED] [root@iZ28l1ca1vhZ ~]# service mysqld restart 排查过程查看mysqld的日志： 160521 11:06:36 InnoDB: Mutexes and rw_locks use GCC atomic builtins 160521 11:06:36 InnoDB: Compressed tables use zlib 1.2.3 160521 11:06:36 InnoDB: Initializing buffer pool, size = 128.0M InnoDB: mmap(137363456 bytes) failed; errno 12 160521 11:06:36 InnoDB: Completed initialization of buffer pool 160521 11:06:36 InnoDB: Fatal error: cannot allocate memory for the buffer pool 160521 11:06:36 [ERROR] Plugin 'InnoDB' init function returned error. 160521 11:06:36 [ERROR] Plugin 'InnoDB' registration as a STORAGE ENGINE failed. 160521 11:06:36 [ERROR] Unknown/unsupported storage engine: InnoDB 160521 11:06:36 [ERROR] Aborting 160521 11:06:36 [Note] /usr/local/mysql/bin/mysqld: Shutdown complete 160521 11:06:37 mysqld_safe mysqld from pid file /usr/local/mysql/data/iZ28l1ca1vhZ.pid ended #到这里，11点钟的时候，数据库服务器挂掉了，我在下面手动重启了一下 160521 14:09:53 mysqld_safe Starting mysqld daemon with databases from /usr/local/mysql/data 160521 14:09:53 [Note] /usr/local/mysql/bin/mysqld (mysqld 5.5.49-log) starting as process 7082 ... 160521 14:09:53 [Note] Plugin 'FEDERATED' is disabled. 160521 14:09:53 InnoDB: The InnoDB memory heap is disabled 160521 14:09:53 InnoDB: Mutexes and rw_locks use GCC atomic builtins 160521 14:09:53 InnoDB: Compressed tables use zlib 1.2.3 160521 14:09:53 InnoDB: Initializing buffer pool, size = 128.0M 160521 14:09:53 InnoDB: Completed initialization of buffer pool 160521 14:09:53 InnoDB: highest supported file format is Barracuda. InnoDB: The log sequence number in ibdata files does not match InnoDB: the log sequence number in the ib_logfiles! 160521 14:09:53 InnoDB: Database was not shut down normally! InnoDB: Starting crash recovery. InnoDB: Reading tablespace information from the .ibd files... InnoDB: Restoring possible half-written data pages from the doublewrite InnoDB: buffer... InnoDB: Last MySQL binlog file position 0 66125264, file name ./mysql-bin.000006 160521 14:09:54 InnoDB: Waiting for the background threads to start 160521 14:09:55 InnoDB: 5.5.49 started; log sequence number 112243593 160521 14:09:56 [Note] Recovering after a crash using mysql-bin 160521 14:09:57 [Note] Starting crash recovery... 160521 14:09:57 [Note] Crash recovery finished. 160521 14:09:57 [Note] Server hostname (bind-address): '0.0.0.0'; port: 3306 160521 14:09:57 [Note] - '0.0.0.0' resolves to '0.0.0.0'; 160521 14:09:57 [Note] Server socket created on IP: '0.0.0.0'. 160521 14:09:57 [Note] Event Scheduler: Loaded 0 events 160521 14:09:57 [Note] /usr/local/mysql/bin/mysqld: ready for connections. Version: '5.5.49-log' socket: '/tmp/mysql.sock' port: 3306 Source distribution 160521 15:44:06 [Warning] IP address '121.40.144.113' could not be resolved: Name or service not known #到这里为止，上面显示启动是成功的，而且在15点44分的时候还有一条警告，说明是正常运行的，但是下面到了18点49分，开始有日志显示了 160521 18:49:27 mysqld_safe Number of processes running now: 0 160521 18:49:27 mysqld_safe mysqld restarted 160521 18:49:27 [Note] /usr/local/mysql/bin/mysqld (mysqld 5.5.49-log) starting as process 8329 ... 160521 18:49:28 [Note] Plugin 'FEDERATED' is disabled. 160521 18:49:28 InnoDB: The InnoDB memory heap is disabled 160521 18:49:28 InnoDB: Mutexes and rw_locks use GCC atomic builtins 160521 18:49:28 InnoDB: Compressed tables use zlib 1.2.3 160521 18:49:28 InnoDB: Initializing buffer pool, size = 128.0M InnoDB: mmap(137363456 bytes) failed; errno 12 160521 18:49:28 InnoDB: Completed initialization of buffer pool 160521 18:49:28 InnoDB: Fatal error: cannot allocate memory for the buffer pool 160521 18:49:28 [ERROR] Plugin 'InnoDB' init function returned error. 160521 18:49:28 [ERROR] Plugin 'InnoDB' registration as a STORAGE ENGINE failed. 160521 18:49:28 [ERROR] Unknown/unsupported storage engine: InnoDB 160521 18:49:28 [ERROR] Aborting 160521 18:49:28 [Note] /usr/local/mysql/bin/mysqld: Shutdown complete 160521 18:49:28 mysqld_safe mysqld from pid file /usr/local/mysql/data/iZ28l1ca1vhZ.pid ended #从上面的日志可以看出来，[ERROR]报错中 都是InnoDB的，上面有个Fatal error，说内存无法分配，由于my.cnf中没有给出InnoDB的缓冲池大小，默认是128M的，但是这在我的1GB小内存的服务器完全可以带动啊 #不管了，你说不够，我手动设置你少吃点内存把，修改了my.cnf中的InnoDB_buffer_pool_size = 16M。然后重启mysqld 160521 23:30:24 mysqld_safe Starting mysqld daemon with databases from /usr/local/mysql/data 160521 23:30:24 [Note] /usr/local/mysql/bin/mysqld (mysqld 5.5.49-log) starting as process 10146 ... 160521 23:30:24 [Note] Plugin 'FEDERATED' is disabled. 160521 23:30:24 InnoDB: The InnoDB memory heap is disabled 160521 23:30:24 InnoDB: Mutexes and rw_locks use GCC atomic builtins 160521 23:30:24 InnoDB: Compressed tables use zlib 1.2.3 160521 23:30:24 InnoDB: Initializing buffer pool, size = 16.0M 160521 23:30:24 InnoDB: Completed initialization of buffer pool 160521 23:30:24 InnoDB: highest supported file format is Barracuda. InnoDB: Log scan progressed past the checkpoint lsn 112315178 160521 23:30:24 InnoDB: Database was not shut down normally! InnoDB: Starting crash recovery. InnoDB: Reading tablespace information from the .ibd files... InnoDB: Restoring possible half-written data pages from the doublewrite InnoDB: buffer... InnoDB: Doing recovery: scanned up to log sequence number 112323325 160521 23:30:25 InnoDB: Starting an apply batch of log records to the database... InnoDB: Progress in percents: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 InnoDB: Apply batch completed InnoDB: Last MySQL binlog file position 0 127786, file name ./mysql-bin.000007 160521 23:30:25 InnoDB: Waiting for the background threads to start 160521 23:30:26 InnoDB: 5.5.49 started; log sequence number 112323325 160521 23:30:26 [Note] Recovering after a crash using mysql-bin 160521 23:30:26 [Note] Starting crash recovery... 160521 23:30:26 [Note] Crash recovery finished. 160521 23:30:27 [Note] Server hostname (bind-address): '0.0.0.0'; port: 3306 160521 23:30:27 [Note] - '0.0.0.0' resolves to '0.0.0.0'; 160521 23:30:27 [Note] Server socket created on IP: '0.0.0.0'. 160521 23:30:27 [Note] Event Scheduler: Loaded 0 events 160521 23:30:27 [Note] /usr/local/mysql/bin/mysqld: ready for connections. Version: '5.5.49-log' socket: '/tmp/mysql.sock' port: 3306 Source distribution #铛铛！启动成功了 但是，这并不能说服我对内存大小的好奇心！ 进一步探究好的，我们看下内存的使用情况： [root@iZ28l1ca1vhZ ~]# free -m total used free shared buffers cached Mem: 994 927 67 0 2 19 -/+ buffers/cache: 904 89 Swap: 0 0 0 什么鬼！ 剩余的才67M了？我的内存都被谁吃了呢？ [root@iZ28l1ca1vhZ ~]# top top - 23:42:33 up 113 days, 23:49, 1 user, load average: 0.03, 0.05, 0.00 Tasks: 110 total, 1 running, 109 sleeping, 0 stopped, 0 zombie Cpu(s): 0.0%us, 0.0%sy, 0.0%ni, 99.7%id, 0.3%wa, 0.0%hi, 0.0%si, 0.0%st Mem: 1018508k total, 949960k used, 68548k free, 2616k buffers Swap: 0k total, 0k used, 0k free, 17124k cached PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND 1 root 20 0 19232 528 236 S 0.0 0.1 0:04.87 init 2 root 20 0 0 0 0 S 0.0 0.0 0:00.08 kthreadd 3 root RT 0 0 0 0 S 0.0 0.0 0:00.00 migration/0 4 root 20 0 0 0 0 S 0.0 0.0 0:15.29 ksoftirqd/0 5 root RT 0 0 0 0 S 0.0 0.0 0:00.00 stopper/0 6 root RT 0 0 0 0 S 0.0 0.0 0:12.18 watchdog/0 7 root 20 0 0 0 0 S 0.0 0.0 8:25.89 events/0 8 root 20 0 0 0 0 S 0.0 0.0 0:00.00 events/0 9 root 20 0 0 0 0 S 0.0 0.0 0:00.00 events_long/0 10 root 20 0 0 0 0 S 0.0 0.0 0:00.00 events_power_ef 11 root 20 0 0 0 0 S 0.0 0.0 0:00.00 cgroup 12 root 20 0 0 0 0 S 0.0 0.0 0:00.21 khelper 13 root 20 0 0 0 0 S 0.0 0.0 0:00.00 netns 14 root 20 0 0 0 0 S 0.0 0.0 0:00.00 async/mgr 15 root 20 0 0 0 0 S 0.0 0.0 0:00.00 pm 16 root 20 0 0 0 0 S 0.0 0.0 0:00.00 xenwatch 17 root 20 0 0 0 0 S 0.0 0.0 0:00.02 xenbus 18 root 20 0 0 0 0 S 0.0 0.0 0:29.34 sync_supers 19 root 20 0 0 0 0 S 0.0 0.0 0:30.05 bdi-default 20 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kintegrityd/0 21 root 20 0 0 0 0 S 0.0 0.0 0:19.20 kblockd/0 22 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kacpid 23 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kacpi_notify 24 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kacpi_hotplug 25 root 20 0 0 0 0 S 0.0 0.0 0:00.00 ata_aux 26 root 20 0 0 0 0 S 0.0 0.0 0:00.00 ata_sff/0 27 root 20 0 0 0 0 S 0.0 0.0 0:00.00 ksuspend_usbd 28 root 20 0 0 0 0 S 0.0 0.0 0:00.00 khubd 29 root 20 0 0 0 0 S 0.0 0.0 0:00.04 kseriod 30 root 20 0 0 0 0 S 0.0 0.0 0:00.00 md/0 31 root 20 0 0 0 0 S 0.0 0.0 0:00.00 md_misc/0 32 root 20 0 0 0 0 S 0.0 0.0 0:00.00 linkwatch 33 root 20 0 0 0 0 S 0.0 0.0 0:01.93 khungtaskd 34 root 20 0 0 0 0 S 0.0 0.0 0:08.05 kswapd0 35 root 25 5 0 0 0 S 0.0 0.0 0:00.00 ksmd 36 root 39 19 0 0 0 S 0.0 0.0 0:33.08 khugepaged 37 root 20 0 0 0 0 S 0.0 0.0 0:00.00 aio/0 38 root 20 0 0 0 0 S 0.0 0.0 0:00.00 crypto/0 45 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kthrotld/0 47 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kpsmoused 48 root 20 0 0 0 0 S 0.0 0.0 0:00.00 usbhid_resumer 49 root 20 0 0 0 0 S 0.0 0.0 0:00.00 deferwq 81 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kdmremove 82 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kstriped 182 root 20 0 0 0 0 S 0.0 0.0 0:00.00 scsi_eh_0 183 root 20 0 0 0 0 S 0.0 0.0 0:00.00 scsi_eh_1 244 root 20 0 0 0 0 S 0.0 0.0 0:50.93 jbd2/xvda1-8 245 root 20 0 0 0 0 S 0.0 0.0 0:00.00 ext4-dio-unwrit 337 root 16 -4 10668 436 0 S 0.0 0.0 0:00.12 udevd 636 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kauditd 901 root 20 0 245m 4892 388 S 0.0 0.5 0:21.33 rsyslogd 962 root 20 0 463m 1520 828 S 0.0 0.1 82:14.67 AliYunDunUpdate 1014 ntp 20 0 26596 848 352 S 0.0 0.1 0:45.91 ntpd 1046 root 20 0 114m 896 296 S 0.0 0.1 0:35.16 crond 1080 root 20 0 31620 68 0 S 0.0 0.0 0:00.00 gshelld 1099 root 20 0 4064 72 4 S 0.0 0.0 0:00.00 mingetty 1101 root 20 0 4064 76 4 S 0.0 0.0 0:00.00 mingetty 1103 root 20 0 4064 72 4 S 0.0 0.0 0:00.00 mingetty 1105 root 20 0 4064 72 4 S 0.0 0.0 0:00.00 mingetty 1109 root 20 0 4064 72 4 S 0.0 0.0 0:00.00 mingetty 1176 root 20 0 243m 6372 1572 S 0.0 0.6 230:19.97 AliYunDun 5070 nscd 20 0 615m 1064 576 S 0.0 0.1 1:10.26 nscd 5563 nginx 20 0 364m 33m 1520 S 0.0 3.4 3:08.90 php-fpm 5615 nginx 20 0 330m 11m 1936 S 0.0 1.1 0:04.03 php-fpm 最后面的两个php-fpm让我起了疑心！ pstree -p 看了一下 php-fpm的进程，居然有35个子进程！！ Mem: 1018508k total, 949960k used, 68548k free, 2616k buffers 这里显示只有68548k 是 free（空闲）的，好！我重启了一下fpm，看看接下来的内存使用情况： [root@iZ28l1ca1vhZ ~]# top top - 23:43:51 up 113 days, 23:50, 1 user, load average: 0.06, 0.05, 0.00 Tasks: 81 total, 1 running, 80 sleeping, 0 stopped, 0 zombie Cpu(s): 0.3%us, 0.0%sy, 0.0%ni, 99.7%id, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st Mem: 1018508k total, 170960k used, 847548k free, 7864k buffers Swap: 0k total, 0k used, 0k free, 39568k cached PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND 962 root 20 0 463m 1520 828 S 0.3 0.1 82:14.72 AliYunDunUpdate 1176 root 20 0 243m 6372 1572 S 0.3 0.6 230:20.09 AliYunDun 1 root 20 0 19232 544 252 S 0.0 0.1 0:04.87 init 2 root 20 0 0 0 0 S 0.0 0.0 0:00.08 kthreadd 3 root RT 0 0 0 0 S 0.0 0.0 0:00.00 migration/0 4 root 20 0 0 0 0 S 0.0 0.0 0:15.29 ksoftirqd/0 5 root RT 0 0 0 0 S 0.0 0.0 0:00.00 stopper/0 6 root RT 0 0 0 0 S 0.0 0.0 0:12.18 watchdog/0 7 root 20 0 0 0 0 S 0.0 0.0 8:25.89 events/0 8 root 20 0 0 0 0 S 0.0 0.0 0:00.00 events/0 9 root 20 0 0 0 0 S 0.0 0.0 0:00.00 events_long/0 10 root 20 0 0 0 0 S 0.0 0.0 0:00.00 events_power_ef 11 root 20 0 0 0 0 S 0.0 0.0 0:00.00 cgroup 12 root 20 0 0 0 0 S 0.0 0.0 0:00.21 khelper 13 root 20 0 0 0 0 S 0.0 0.0 0:00.00 netns 14 root 20 0 0 0 0 S 0.0 0.0 0:00.00 async/mgr 15 root 20 0 0 0 0 S 0.0 0.0 0:00.00 pm 16 root 20 0 0 0 0 S 0.0 0.0 0:00.00 xenwatch 17 root 20 0 0 0 0 S 0.0 0.0 0:00.02 xenbus 18 root 20 0 0 0 0 S 0.0 0.0 0:29.34 sync_supers 19 root 20 0 0 0 0 S 0.0 0.0 0:30.05 bdi-default 20 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kintegrityd/0 21 root 20 0 0 0 0 S 0.0 0.0 0:19.21 kblockd/0 22 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kacpid 23 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kacpi_notify 24 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kacpi_hotplug 25 root 20 0 0 0 0 S 0.0 0.0 0:00.00 ata_aux 26 root 20 0 0 0 0 S 0.0 0.0 0:00.00 ata_sff/0 27 root 20 0 0 0 0 S 0.0 0.0 0:00.00 ksuspend_usbd 28 root 20 0 0 0 0 S 0.0 0.0 0:00.00 khubd 29 root 20 0 0 0 0 S 0.0 0.0 0:00.04 kseriod 30 root 20 0 0 0 0 S 0.0 0.0 0:00.00 md/0 31 root 20 0 0 0 0 S 0.0 0.0 0:00.00 md_misc/0 32 root 20 0 0 0 0 S 0.0 0.0 0:00.00 linkwatch 33 root 20 0 0 0 0 S 0.0 0.0 0:01.93 khungtaskd 34 root 20 0 0 0 0 S 0.0 0.0 0:08.05 kswapd0 35 root 25 5 0 0 0 S 0.0 0.0 0:00.00 ksmd 36 root 39 19 0 0 0 S 0.0 0.0 0:33.08 khugepaged 37 root 20 0 0 0 0 S 0.0 0.0 0:00.00 aio/0 38 root 20 0 0 0 0 S 0.0 0.0 0:00.00 crypto/0 45 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kthrotld/0 47 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kpsmoused 48 root 20 0 0 0 0 S 0.0 0.0 0:00.00 usbhid_resumer 49 root 20 0 0 0 0 S 0.0 0.0 0:00.00 deferwq 81 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kdmremove 82 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kstriped 182 root 20 0 0 0 0 S 0.0 0.0 0:00.00 scsi_eh_0 183 root 20 0 0 0 0 S 0.0 0.0 0:00.00 scsi_eh_1 244 root 20 0 0 0 0 S 0.0 0.0 0:50.93 jbd2/xvda1-8 245 root 20 0 0 0 0 S 0.0 0.0 0:00.00 ext4-dio-unwrit 337 root 16 -4 10668 436 0 S 0.0 0.0 0:00.12 udevd 636 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kauditd 901 root 20 0 245m 4892 388 S 0.0 0.5 0:21.33 rsyslogd 1014 ntp 20 0 26596 848 352 S 0.0 0.1 0:45.92 ntpd 1046 root 20 0 114m 904 304 S 0.0 0.1 0:35.16 crond 1080 root 20 0 31620 68 0 S 0.0 0.0 0:00.00 gshelld 1099 root 20 0 4064 72 4 S 0.0 0.0 0:00.00 mingetty 1101 root 20 0 4064 76 4 S 0.0 0.0 0:00.00 mingetty 1103 root 20 0 4064 72 4 S 0.0 0.0 0:00.00 mingetty 1105 root 20 0 4064 72 4 S 0.0 0.0 0:00.00 mingetty 1109 root 20 0 4064 72 4 S 0.0 0.0 0:00.00 mingetty 5070 nscd 20 0 615m 1068 580 S 0.0 0.1 1:10.26 nscd 5990 root 20 0 66232 820 112 S 0.0 0.1 0:08.71 sshd 9811 root 20 0 98.1m 2048 1028 S 0.0 0.2 0:00.09 sshd 9813 root 20 0 105m 1552 1116 S 0.0 0.2 0:00.01 bash [root@iZ28l1ca1vhZ ~]# free -m total used free shared buffers cached Mem: 994 166 828 0 7 38 -/+ buffers/cache: 120 874 Swap: 0 0 0 有没有！ 瞬间变成了 847548k 的空闲内存！！！真的是fpm在吃我的小内存，把mysqld逼的跳楼了！！ 那么怎么限制fpm这个贪婪的进程呢？ 看看它的配置文件吧：/etc/php-fpm.d/www.conf pm.max_children = 50 ;静态方式下开启的php-fpm进程数量 pm = dynamic ;这里是动态方式，静态是static pm.start_servers = 5 ;动态方式下的起始php-fpm进程数量 pm.min_spare_servers = 5 ;动态方式下的最小php-fpm进程数量 pm.max_spare_servers = 35 ;动态方式下的最大php-fpm进程数量 天呐！ 默认的启动就是5个，最大可达35个！按照一个进程至少3M的内存，35个*3=105M，呵呵，别看才105M，你要知道PHP这玩意儿，在执行完成之后，多少有内存泄漏的问题，这也是为啥一开始只要3M左右，运行一段时间之后，就飙到了20M~30M去了，一个进程就算25M，我的小内存服务器1GB，也就够它跑40个，何况还要运行其他的程序呢！这也是为啥mysqld会跳楼了，根本活不下去了！ ## 优化配置 那么我现在把它修改一下： pm.start_servers = 4 pm.min_spare_servers = 3 pm.max_spare_servers = 5 这下应该好多了吧！看看使用情况： [root@iZ28l1ca1vhZ ~]# free -m total used free shared buffers cached Mem: 994 213 780 0 12 47 -/+ buffers/cache: 153 841 Swap: 0 0 0 [root@iZ28l1ca1vhZ ~]# service php-fpm restart Stopping php-fpm: [ OK ] Starting php-fpm: [ OK ] [root@iZ28l1ca1vhZ ~]# free -m total used free shared buffers cached Mem: 994 198 796 0 13 60 -/+ buffers/cache: 124 870 ap: 0 0 0 因为没多久前重启了一次FPM，所以现在看来差距不大，但是和之前的剩余几十兆相比，差距啊！ 我让服务器运行了一段时间，再看看结果： [root@iZ28l1ca1vhZ ~]# free -m total used free shared buffers cached Mem: 994 417 577 0 22 112 -/+ buffers/cache: 281 712 Swap: 0 0 0 情况还算不错！ 第二天早上起来，继续观察内存使用情况： [root@iZ28l1ca1vhZ ~]# free -m total used free shared buffers cachedMem: 994 715 279 0 132 182-/+ buffers/cache: 400 594Swap: 0 0 0 [root@iZ28l1ca1vhZ ~]# toptop - 11:50:06 up 114 days, 11:56, 1 user, load average: 0.02, 0.01, 0.00Tasks: 81 total, 1 running, 80 sleeping, 0 stopped, 0 zombieCpu(s): 0.0%us, 0.3%sy, 0.0%ni, 99.7%id, 0.0%wa, 0.0%hi, 0.0%si, 0.0%stMem: 1018508k total, 735616k used, 282892k free, 136052k buffersSwap: 0k total, 0k used, 0k free, 187264k cached…看样子还是有点吃内存啊！ 先不重启，看看再过一段时间后的情况吧。 压力测试通过Atool.ORG在线工具来进行一个简单的压力测试，放上去大概30～50个url地址，让它每隔8秒刷一次PV来模拟用户访问 最终结果发现，fpm进程维持在3～10个之间，最大不会超过10个，而且内存的剩余大小200M左右变动。说明这次的优化还是有那么一点点的效果！ 总结：mysql经常宕机是因为php-fpm进程数量太大，吃了太多的内存而造成的，通过合理的限制fpm的进程数量可以有效的缓解服务器压力，当然了，这样的后果就是php的并发量有所减小，当相对来说，牺牲一点php的进程数来维持mysql的正常运作还是值得的！对于低配的服务器，合理分配各个程序所占内存容量（简称优化），会更加有效的发挥服务器的最大价值！ 下面是我参考的相关资料：php-fpm mysqld优化配置 解决502 bad getway ,wordpress数据库连接错误【汇总】PHP-FPM 配置优化","tags":[{"name":"mysqld","slug":"mysqld","permalink":"http://www.imsry.cn/tags/mysqld/"},{"name":"Nginx","slug":"Nginx","permalink":"http://www.imsry.cn/tags/Nginx/"},{"name":"php-fpm","slug":"php-fpm","permalink":"http://www.imsry.cn/tags/php-fpm/"}]},{"title":"js判断两个块元素的相交与否","date":"2016-05-05T04:27:51.000Z","path":"posts/fc8b3868.html","text":"之前在做阿里笔试的时候，其中就有那么一个题，要求你用js写一个函数，用来判断两个Div是否相交，当时在那个上面并没有很快的写出来，结果时间到了。回头好好又想想，还是把他写一下，就算是最笨的方法，也得实现。提醒，这里讨论的都没有考虑到浏览器的兼容性差异，对于盒子模型不同的需要注意改写代码。 1、笨拙的边界判定法首先，我先写一个简单的html页面，里面有两个div块，如下代码 测试Div重叠实验 body { margin: 0; padding: 0; } div { opacity: 0.8; } #div1 { position: relative; top: 50px; left: 200px; width: 100px; height: 150px; background-color: #0A87DD; } #div2 { position: relative; top:30px; left: 100px; width:350px; height:200px; background-color: #00A000; } 效果如下： 思路：要判定两个元素是否重叠，一种笨拙的方法就是，获取到元素的4个边界的位置或者说坐标距离（上、下、左、右），然后对其进行判断。假设第一个块为Div1，第二个是Div2，用len(1,2)数组保存边界距离，如： var len1 = new Array(),len2 = new Array(); len1[0] = div1.offsetLeft; //左边界 len1[1] = div1.offsetTop; //上边界 len1[2] = div1.offsetWidth+len1[0]; //右边界 len1[3] = div1.offsetHeight+len1[1]; //下边界 len2[0] = div2.offsetLeft; len2[1] = div2.offsetTop; len2[2] = div2.offsetWidth+len2[0]; len2[3] = div2.offsetHeight+len2[1]; 然后对其进行判断，原则是：一个元素的左(右)边界在另一个元素的左右边界之间且它的上(下)边界在另一个元素的上下边界之间。那么写成代码的形式就是： if(( (len1[0]>=len2[0] && len1[0]=len2[0] && len1[2]=len2[1] && len1[3]=len2[1] && len1[3] 通过测试发现，这样的做法只能满足第一个元素至少有一个角(顶点)在第二个元素内，如果将两个元素的命名变量一替换，则不满足条件了。不过暂时性的解决办法还是有的，我们声明一个函数： function check(div1,div2){ var len1 = new Array(),len2 = new Array(); len1[0] = div1.offsetLeft; //左边界 len1[1] = div1.offsetTop; //上边界 len1[2] = div1.offsetWidth+len1[0]; //右边界 len1[3] = div1.offsetHeight+len1[1]; //下边界 len2[0] = div2.offsetLeft; len2[1] = div2.offsetTop; len2[2] = div2.offsetWidth+len2[0]; len2[3] = div2.offsetHeight+len2[1]; if(((len1[0]>=len2[0]&&len1[0]=len2[0]&&len1[2]=len2[1]&&len1[3]=len2[1]&&len1[3] 那么真正的判定就应该是： if(check(div1,div2) || check(div2,div1)){ alert(\"元素有重叠\"); }else{ alert(\"元素没有重叠\"); } 这样就保证了，只要有满足任意一个元素的一个顶点(角)在另一个元素的内部，则两元素是相交（有重合）的。 当然，这只是最笨拙的方法了！ ## 2、元素中心判定法 应该是小学的时候就学过的几何问题吧？像正方形、长方形、圆，都可以通过中心点来判定在一个平面上的相交与否，当然，圆和圆跟另外两个类似，但是圆跟方形却不能用相同的方法，因为万一圆和方形的角相切呢？ 下面我们还是来文字解释一下吧： ### 1.获取元素中心点坐标 学习几何数学的时候，都是告诉你各个点坐标，然后求各种数据，如： 已知一个方形的四个顶点坐标分别为(0,0) (0,4) (4,0) (4,4)，那么这个方形长4宽4，中心点为( (4-0)/2 , (4-0)/2 ) => (2,2)。 扯一下小知识，自己也复习一下。 在用JavaScript获取元素的中心点，其实更简单，元素的左偏移(上偏移)+元素的宽(高)的一半，就是元素中心点的横坐标(纵坐标)。 ### 2.相交(交集)判定 两个元素的中心坐标的横(纵)坐标之差小于两元素的宽度(长度)之和的一半，横纵坐标值都满足的话，则元素是相交的。(注意：差取绝对值!) ### 3.代码实现 var div1 = document.getElementById('div1'); var div2 = document.getElementById('div2'); function check2(div1,div2){ //说明数组结构：Array(宽,高,x坐标,y坐标) var cPos1 = new Array(div1.offsetWidth,div1.offsetHeight,div1.offsetLeft+div1.offsetWidth/2,div1.offsetTop+div1.offsetHeight/2); var cPos2 = new Array(div2.offsetWidth,div2.offsetHeight,div2.offsetLeft+div2.offsetWidth/2,div2.offsetTop+div2.offsetHeight/2); if( Math.abs(cPos1[2]-cPos2[2]) < (cPos1[0]+cPos2[0])/2 && Math.abs(cPos1[3]-cPos2[3]) < (cPos1[1]+cPos2[1])/2 ){ alert(\"有重叠部分\"); }else{ alert(\"无重叠部分\"); } } check2(div1,div2); 我相信肯定有比这个更好的算法，如果你恰巧知道，在下面留言评论区告诉我吧!","tags":[{"name":"js","slug":"js","permalink":"http://www.imsry.cn/tags/js/"}]},{"title":"C(C++)、Java、PHP区别函数参数传递","date":"2016-04-16T06:15:15.000Z","path":"posts/1d328250.html","text":"这篇文章，我专门测试了一下C、Java、PHP三种编程语言中对于函数（方法）参数传递的问题 一、C/C++篇首先说明一下，这里仅在C语言下测试，C++类似，只不过在C++中多了一个传引用(&amp;)，其性质还是指针，传递过程中可以看作是使用别名。看代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758//// main.c// TestOfVlaue//// Created by anthony on 16/4/16.// Copyright © 2016年 Anthony. All rights reserved.//#include &lt;stdio.h&gt;//C语言测试void prt1(int v) &#123; printf(\"方法内执行后的结果：%d\\n\",v);&#125;void prt2(int v[],short int len) &#123; for (int i=0; i&lt;len; i++) &#123; printf(\"a[%d]:%d\\n\",i,v[i]); &#125;&#125;void ch1(int v) &#123; //按值传递 ++v; prt1(v);&#125;void ch2(int *v) &#123; //按地址(指针)传递 ++(*v); prt1(*v);&#125;//void ch3(int &amp;v) &#123; //引用传递 C里面木有&amp;（引用）C++中可用，底层还是指针// ++v;// prt1(*v);//&#125;void ch4(int v[],short int len) &#123; //改变数组的值 for (int i=0; i&lt;len; i++) &#123; v[i]++; &#125;&#125;void test1(int v) &#123; //测试整型变量 printf(\"测试单个值：类型：int,值为：%d\\n\",v); ch1(v); printf(\"执行ch1()的结果：%d\\n\",v); ch2(&amp;v); printf(\"执行ch2()的结果：%d\\n\\n\",v);&#125;void test2(int v[],short int len) &#123; //测试整型数组 printf(\"测试数组：类型：int,值为：\\n\"); prt2(v, len); ch4(v,len); printf(\"方法内执行后的结果：\\n\"); prt2(v, len); printf(\"\\n\");&#125;int main(int argc, const char * argv[]) &#123; int a = 10; int b[] = &#123;1,2,3&#125;; test1(a); //测试变量a++ test2(b, 3); //测试数组b各元素++ test1(b[0]); //测试数组b[0]++ return 0;&#125; 运行结果： 12345678910111213141516171819202122测试单个值：类型：int,值为：10方法内执行后的结果：11执行ch1()的结果：10方法内执行后的结果：11执行ch2()的结果：11测试数组：类型：int,值为：a[0]:1a[1]:2a[2]:3方法内执行后的结果：a[0]:2a[1]:3a[2]:4测试单个值：类型：int,值为：2方法内执行后的结果：3执行ch1()的结果：2方法内执行后的结果：3执行ch2()的结果：3Program ended with exit code: 0 从结果中看，ch1(int v)中采用传值，可以理解为将a的值赋值给v，然后改变了v的值，所以函数体内v值的改变不会影响到a的值；ch2(int v)中采用传指针，实际上是传递了变量a的地址，在函数体内 (v) 就是取地址上的值，即a变量所在内存上的值:10，执行++(*v)，实际上就是改变了a变量所在内存上的值，变成了:11，这就是真正的改变变量的值；ch3(int &amp;v)是传引用，在执行过程中，新定义了一个v变量，它指向与a变量相同的地址，v既是a。所以v的改变，即a的改变。（这里我没有执行，因为我是在c环境下测试，c中没有传引用，传引用是C++才有的。） 二、Java篇一说到Java，不得不谈的就是Java的“指针”问题，在Java中，没有指针，因为Java一切皆“引用”，所以在理解上会有些与c和c++相冲突吧。不多说，先看代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960package testofvalue;/** * * @author Anthony &lt;york_mail@qq.com&gt; */public class TestOfValue &#123; /** * @param args the command line arguments */ public static void main(String[] args) &#123; int a = 10, b[] = &#123;1,2,3&#125;; A obj = new A(\"Hello\"); ch1(a); System.out.println(a); System.out.println(\"原数组:\"); prt2(b); ch2(b); System.out.println(\"改变后的数组:\"); prt2(b); ch1(b[1]); //测试数组中的一个值 System.out.println(\"改变b[1]后的数组:\"); prt2(b); ch3(obj); System.out.println(obj.value); ch4(obj.value); System.out.println(obj.value); &#125; public static void ch1(int v) &#123; ++v; &#125; public static void ch2(int v[]) &#123; System.out.println(\"原数组:\"); prt2(v); for(int i=0;i&lt;v.length;i++)&#123; v[i]++; &#125; System.out.println(\"改变后的数组:\"); prt2(v); &#125; public static void ch3(A a) &#123; a.value += \" World!\"; &#125; public static void ch4(String str) &#123; str += \" String!\"; &#125; public static void prt2(int v[]) &#123; for(int i=0;i&lt;v.length;i++)&#123; System.out.println(\"v[\"+i+\"]:\"+v[i]); &#125; &#125;&#125;class A &#123; public String value; A(String value) &#123; this.value = value; &#125;&#125; 代码中，另外定义了一个类：A，用来测试对象的相关传递；其中我分别按照顺序测试了整型、整型数组、自定义对象的函数传递。结果： 12345678910111213141516run:10原数组:v[0]:1v[1]:2v[2]:3改变后的数组:v[0]:2v[1]:3v[2]:4改变b[1]后的数组:v[0]:2v[1]:3v[2]:4Hello World!Hello World! 第一个ch1(a)，没有改变a的值，所以它是一个传值。（传值调用）第二个ch2(b)，b是一个数组{1,2,3}，改变后变成了{2,3,4}，说明ch2(b)在传递的时候，是将b的(首)地址给传入了（传引用）。第三个ch1(b[1])，这里传入了b数组的第二个数，结果数组的值并没有变化，所以说明它还是一个传值调用。第四个ch3(obj)，obj是A的一个对象，在函数中改变了对象的属性：value 的值，结果可以看到，obj.value的确被修改了，所以说，ch3()也就是传递的obj这个对象的引用。第五个ch4(obj.value)，将对象的属性值作为参数来传递，并不能改变对象的属性值，是个按值传递。注意：上面所说的传值和引用只是为了方便理解。其实JAVA都是传值，只不过在以对象作为参数的时候，这个是值是对象的一个引用，在方法内部其实是对象的另一个引用，他们指向同一个对象（存储区域），可以通过这个引用改变对象的属性，但是无法对原引用进行修改。 三、PHP篇PHP是一种弱类型的语言变量的使用中不用指定类型，它会自我识别成目标类型，那么我们来看一下它在函数传递中又是怎么样的呢。先看代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&lt;?php/** * Created by PhpStorm. * User: anthony * Date: 16/1/20 * Time: 上午11:46 */header(\"Content-type:text/html;charset=utf-8\");function ch1($v) &#123; //按值传递 $v++;&#125;function ch2(&amp;$v) &#123; //传引用 $v++;&#125;function ch3($ov) &#123; //传对象的值 $ov = \" Changed! ch3\";&#125;function ch4($o) &#123; //传对象 $o-&gt;value = \" Changed! ch4\";&#125;function ch5($v) &#123; //改变数组 for($i=0;$i&lt;sizeof($v);$i++)&#123; $v[$i]++; &#125;&#125;function ch6(&amp;$v) &#123; //改变数组 传引用 for($i=0;$i&lt;sizeof($v);$i++)&#123; $v[$i]+=10; &#125;&#125;$a = 10;$arr = Array(1,2,3);echo \"\\$a=\".$a.\"\";ch1($a);echo \"ch1(): \".$a.\"\";ch2($a);echo \"ch2(): \".$a.\"\";echo \"创建对象:\";$obj = new A();ch3($obj-&gt;value);echo \"ch3(): \";echo $obj-&gt;value.\"\";ch4($obj);echo \"ch4(): \";echo $obj-&gt;value.\"\";print_r($arr);echo \"\";ch5($arr);print_r($arr);echo \"\";ch6($arr);print_r($arr);echo \"\";class A &#123; public $value = \"I'm A's value\"; public function __construct() &#123; echo $this-&gt;value.\"\"; &#125;&#125; 代码的最下面我申明了一个类：A，用来测试类在函数传递中的效果。结果： 123456789$a=10ch1(): 10ch2(): 11创建对象:I'm A's valuech3(): I'm A's valuech4(): Changed! ch4Array ( [0] =&gt; 1 [1] =&gt; 2 [2] =&gt; 3 ) Array ( [0] =&gt; 1 [1] =&gt; 2 [2] =&gt; 3 ) Array ( [0] =&gt; 11 [1] =&gt; 12 [2] =&gt; 13 ) 说明：ch1($v)按值传递，不会造成变量的改动；ch2(&amp;$v)传引用，跟c一样，类似别名。ch3($ov)用来测试对象的字符串属性，一开始$obj-&gt;value=”I’m A’s value”，执行了之后还是一样，不会改变；ch4($o)直接传入一个$obj对象，在函数体中修改了对象的属性值value，可以看到最终$obj-&gt;value被修改成了”Changed! ch4”，说明在对象的传递中，是传递的对象的引用。ch5($v)测试改变数组的值，失败了！这里跟C和Java都不一样！在数组传递过程中，它相当于Copy了一份一模一样的数组，这不会造成原数组的改变，所以如果要改变原数组的值，这就不能像C和Java那样理解和使用了。来看ch6()的使用。ch6(&amp;$v) 可以看到，我们加上一个传引用(&amp;)符号，这样就可以达到修改数组的值的效果了。 总结：通过上面三种语言的比较，我们可以看到： c和c++都有传值和传指针，但c++比c多一个传引用； PHP具有传值、传引用和传指针，例子中没使用指针，这里简单说明一下，$b=&amp;$a，则$b就是$a的别名，二者就是同一个。 PHP中数组的调用跟C/C++和Java不一样，后者都是传入变量的首地址，相当于传引用(c中叫指针)，PHP相当于传值； Java中所有基本类型都是传值调用，对象则是传引用，如果要修改对象的值，那必须以对象作为参数传递。 如果上述有何不妥或者您有任何新的想法，欢迎指正和提议！ 代码压缩包：归档 (因站点迁移，链接失效)","tags":[{"name":"php","slug":"php","permalink":"http://www.imsry.cn/tags/php/"},{"name":"C","slug":"C","permalink":"http://www.imsry.cn/tags/C/"},{"name":"Java","slug":"Java","permalink":"http://www.imsry.cn/tags/Java/"},{"name":"方法","slug":"方法","permalink":"http://www.imsry.cn/tags/方法/"}]},{"title":"《XML实用教程》课后实验1-7章文件","date":"2016-04-11T05:06:42.000Z","path":"posts/c5989a68.html","text":"由于我使用的是MacOS，所以编码均采用UTF-8，书上均是gb2312的。 第一章：使用Altova XMLSpy 2010软件编写XML文档实验指导1-1.xml 第二章：创建通讯录的XML文档tongxun.xml 第三章：3-1：使用内部DTD编写动物园内动物信息的XML文档实验 3-1.xml 3-2：结合已知外部DTD创建XML文档3-2.dtd3-2.xml 第四章：4-1：根据Schema文件创建XML文档4-1.xsd4-1.xml 4-2：根据描述创建Schema文件实验 4-2.xsd 第五章：编写XSL样式表5-6.xsl5-6.xml 第六章：统计XML文档中某元素的子元素个数注意，html文件只在ie下能够执行ActiveX控件，需要手动确认执行。6-1.html6-1.xml 第七章：使用数据岛显示XML文档中的内容7-1.htm employee.xml 第八章：由于第八章是个系统，大家自己敲代码吧，综合性比较强，不要想着能Copy一份就完事儿了。","tags":[{"name":"XML","slug":"XML","permalink":"http://www.imsry.cn/tags/XML/"},{"name":"实验","slug":"实验","permalink":"http://www.imsry.cn/tags/实验/"}]},{"title":"CentOS 6下更新PHP版本到5.5后与Nginx发生的小事情","date":"2016-01-28T16:32:33.000Z","path":"posts/4490487e.html","text":"今天在写API的时候用到了php中新版本的jsonencode()方法，在5.4以后支持了不对中文进行Unicode编码，而我在服务器上的php版本还停留在yum源包自带的5.3版本，只有升级来满足需要了。首先，找了一些关于升级PHP的文章，各不相同，我还是坚持简单、易操作的方法，使用yum来更新。当然，yum update php 是完全不能解决的，因为它告诉我5.3是最新的版本了。不能怪它，因为没人告诉它今年是哪一年了^^!这个不行，肯定要换一个源包了。。不过首先是要卸载已经安装的php。在这之前，先看看当前安装的PHP有哪些依赖包吧： yum list installed | grep php结果如下：[root@iZ28l1ca1vhZ scuec]# yum list installed | grep phpphp.x86_64 5.3.3-46.el6_6 @updatesphp-bcmath.x86_64 5.3.3-46.el6_6 @updatesphp-cli.x86_64 5.3.3-46.el6_6 @updatesphp-common.x86_64 5.3.3-46.el6_6 @updatesphp-fpm.x86_64 5.3.3-46.el6_6 @updatesphp-gd.x86_64 5.3.3-46.el6_6 @updatesphp-imap.x86_64 5.3.3-46.el6_6 @updatesphp-ldap.x86_64 5.3.3-46.el6_6 @updatesphp-mbstring.x86_64 5.3.3-46.el6_6 @updatesphp-mcrypt.x86_64 5.3.3-4.el6 @epelphp-mysql.x86_64 5.3.3-46.el6_6 @updatesphp-odbc.x86_64 5.3.3-46.el6_6 @updatesphp-pdo.x86_64 5.3.3-46.el6_6 @updatesphp-pear.noarch 1:1.9.4-4.el6 @basephp-xml.x86_64 5.3.3-46.el6_6 @updatesphp-xmlrpc.x86_64 5.3.3-46.el6_6 @updates上面这些本来有的，安装新版本后还是加上去比较好办，对！接着卸载php吧 yum remove php*刷刷的卸完了。。。。然后执行下面的指令来添加源包列表 rpm -Uvh http://mirror.webtatic.com/yum/el6/latest.rpm这是我在网上找到的，但是提示找不到主机，后来，将mirror更改成repo居然行了。所以是： rpm -Uvh http://repo.webtatic.com/yum/el6/latest.rpm完成之后开始安装新的php5.5，上面那些依赖都装上吧，所以指令就成了： yum install -y php55w.x86_64 php55w-cli.x86_64 php55w-common.x86_64 php55w-gd.x86_64 php55w-ldap.x86_64 php55w-mbstring.x86_64 php55w-mcrypt.x86_64 php55w-mysql.x86_64 php55w-pdo.x86_64 php55w-fpm php55w-bcmath php55w-imap php55w-odbc php55w-pear php55w-xml php55w-xmlrpc总之全装上去，哈哈@——@装完之后重启nginx和php-fpm就好了。 service nginx restartservice php-fpm restart这时候，我发现整个服务器是上的站点都打不开了，全部都是404报错。还以为这点点操作能把我站点给删了呢，检查站点目录，权限，nginx配置。统统没问题！ 问题肯定出在php上面！！所以百度了一下有关nginx上php升级后的404问题，看了一些废网页之后很着急，遍来了个搜索‘php-fpm 404’ 找到了这篇‘nginx php-fpm 404 错误 ’，他提到了php-fpm中user和group不匹配导致的404错误，我马上去查看php-fpm的配置文件一查清楚，对！就是这个问题，新装的php-fpm默认配置中user和group都是apache,但是我这是直接使用Nginx做的服务器。我想，Apache用户应该就不用这么麻烦了。。。修改user和group为nginx用户之后，一切恢复正常！","tags":[]},{"title":"Debian中搭建VPN(PPTP协议)实战，实现VPN上网","date":"2015-11-30T05:46:34.000Z","path":"posts/a363805e.html","text":"首先讲一讲为什么会突然想到弄一下VPN呢？这是因为在我的学校，校园网的认证采用的是VPN(L2TP协议)，既然这样，我是不是可以通过学校的虚机来自建一个认证系统来实现上网呢？抱着这种疑问，开始做一些事情吧。 另外提一下，PPTP, L2TP/IPSec 和 OpenVPN这三种协议里，PPTP比较容易配置，所以我采用了这种方法。 1、所需工具和资源说到底，还是离不开一台校内的机器，而且能够上网并拥有独立IP（看上去很难有这个），多亏有师生这层美妙的关系，对！一台虚机就这样有了。软件方面的东西直接在虚机上下载就行了。 本次实战的机器是Debian系统，软件源包使用apt-get，本地电脑Macbook（自带ssh连接端） 2、具体步骤首先连接上远程计算机，通过命令行进行安装： 1、安装PPTP，服务端VPN软件：# apt-get install -y pptpd 2、编辑/etc/pptpd.conf ：去掉localip 和 remoteip两行的注释，并修改相应的IP local 192.168.121.1 #这里设置服务器IP 相当于网关 需要避免与本地一样 remoteip 192.168.121.11-30 #这里设置客户端可分配资源 是IP段 3、编辑/etc/ppp/options.pptpd ： name pptpd refuse-pap refuse-chap refuse-mschap require-mschap-v2 require-mppe-128 ms-dns 8.8.8.8 ms-dns 8.8.4.4 proxyarp lock nobsdcomp novj novjccomp nologfd 其中 ms-dns 可以修改成你自己想要的DNS服务器地址 4、修改文件 /etc/ppp/chap-secrets，第一列是用户名，第二列是服务器名（默认写 pptpd 即可，如果在 pptpd-options 文件中更改过的话，注意这里保持和文件中的name行一致），第三列是密码，第四列是 IP 限制（不做限制写 * 即可）如创建一个名为vpnuser，密码为123123，不限制登录IP的VPN账号： # Secrets for authentication using CHAP # client server secret IP addresses vpnuser pptpd 123123 * 然后我们就需要重启PPTP服务：/etc/init.d/pptpd restart 重启完毕之后，应该就可以连接上了，但是可能无法通过它来上网，我们还需要进行以下配置： 6、修改文件 /etc/sysctl.conf，去掉这一行 #net.ipv4.ip_forward=1 的#号，开启ipv4 forward，然后运行命令： sysctl –p 如果这样还是不能上网，可能是防火墙的问题了，执行命令： iptables -t nat -A POSTROUTING -s 192.168.121.1/24 -o eth0 -j MASQUERADE 为防止重启机器后iptables丢失，先运行 sudo iptables-save > /etc/iptables-rules 然后修改 /etc/network/interfaces 文件，找到 eth0 那一节，在对 eth0 的设置最末尾加上下面这句： pre-up iptables-restore < /etc/iptables-rules 这样当网卡 eth0 被加载启动的时候就会自动载入我们预先用 iptables-save 保存下的配置。 PPTP 服务需要使用 1723(tcp) 端口和 gre 协议，因此确保防火墙设置允许这两者通行。 通过输入命令：netstat -antl 查看是否打开了协议端口，如果出现1723端口的行就说明一切正常了： Proto Recv-Q Send-Q Local Address Foreign Address State tcp 0 0 0.0.0.0:21 0.0.0.0:* LISTEN tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN tcp 0 0 127.0.0.1:25 0.0.0.0:* LISTEN tcp 0 0 0.0.0.0:1723 0.0.0.0:* LISTEN tcp 0 0 xxx.xxx.xxx.xxx:22 xxx.xxx.xxx.xxx:51910 ESTABLISHED tcp 0 0 xxx.xxx.xxx.xxx:22 xxx.xxx.xxx.xxx:53934 ESTABLISHED tcp 0 0 xxx.xxx.xxx.xxx:1723 xxx.xxx.xxx.xxx:61101 ESTABLISHED","tags":[]},{"title":" CENTOS 6.0 iptables 开放端口80 3306 22端口","date":"2015-11-11T13:13:01.000Z","path":"posts/2e6f46f8.html","text":"#/sbin/iptables -I INPUT -p tcp –dport 80 -j ACCEPT #/sbin/iptables -I INPUT -p tcp –dport 22 -j ACCEPT #/sbin/iptables -I INPUT -p tcp –dport 3306 -j ACCEPT然后保存： #/etc/rc.d/init.d/iptables save 查看打开的端口： /etc/init.d/iptables status 补充说明： #关闭防火墙 /etc/init.d/iptables stop service iptables stop # 停止服务 #查看防火墙信息 /etc/init.d/iptables status #开放端口:8080 /sbin/iptables -I INPUT -p tcp –dport 8080 -j ACCEPT #重启防火墙以便改动生效:(或者直接重启系统) /etc/init.d/iptables restart #将更改进行保存 /etc/rc.d/init.d/iptables save 另外直接在/etc/sysconfig/iptables中增加一行： -A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 8080 -j ACCEPT #永久关闭防火墙chkconfig –level 35 iptables off #此方法源自网络，未实验，安全考虑拒绝使用此方法 文章出处：CENTOS 6.0 iptables 开放端口80 3306 22端口","tags":[]},{"title":"GlassFish配置数据库连接池","date":"2015-11-08T06:31:38.000Z","path":"posts/88376848.html","text":"1、首先启动glassfish服务器，在地址栏中输入http://localhost:4848/,进入服务器的配置界面,如下: 2、在Common Tasks下选择Resources的JDBC，可以看到JDBC资源(JDBC Resources)和Connection Pools(连接池)，在Connection Pools(连接池)中点击New按钮，建立一个连接池jdbc_new，如下： 配置基本信息，如下： Next后的第二步： Finish之后进入刚刚配置的jdbc_new选择附加配置,如图配置相关数据： 3、配置完成之后，回到之前的General中测试Ping: 注意：如果此时出现javax.resource.ResourceException: Class name is wrong orclasspath is not set for : com.mysql.jdbc.jdbc2.optional.MysqlDataSource这个错误时候，是因为没有把mysql驱动包mysql-connector-java-5.1.20-bin.jar放入glassfish安装目录domains\\domain1\\lib\\ext下； 解决方法：把mysql驱动包mysql-connector-java-5.1.20-bin.jar放入glassfish安装目录domains\\domain1\\lib\\ext下并重新启动glassfish服务器就可以了。 4、创建连接池成功之后，点击JDBC Resources，在JDBC资源的配置界面中，Pool Name(连接池名称)就会出现刚配置成功的连接池jdbc_new,其配置界面如下： 5、在配置界面的JNDI Name中配置JNDI的名字为jdbc/test(这个名字可以自己取).至此，连接池和数据源都以配置完成。相关配置到这里就完成了，我们还需要做一个事情，那就是，测试。 6、测试连接数据库是否成功：我们在Jave Web 项目中新建一个jsp页面来测试，代码如下： &lt;%– Document : jdbc_test Created on : 2015-11-8, 13:24:37 Author : 刘经济 &#x79;&#x6f;&#114;&#107;&#95;&#x6d;&#97;&#105;&#108;&#64;&#113;&#113;&#46;&#x63;&#x6f;&#109;–%&gt;&lt;%@page contentType=”text/html” pageEncoding=”UTF-8”%&gt;&lt;%@ page import=”javax.naming.“ %&gt;&lt;%@ page import=”javax.sql.“ %&gt;&lt;%@ page import=”java.sql.*” %&gt; 测试GlassFish配置的Mysql数据库连接池 下面是测试结果：&lt;% Connection conn = null; Statement stmt = null; ResultSet rs = null; ResultSetMetaData md = null; try { Context initCtx = new InitialContext(); DataSource ds = (DataSource) initCtx.lookup(&quot;jdbc/test&quot;); if (ds != null) { out.println(&quot;已经获得DataSource连接 “); out.println(“资源ID: “ + ds.toString() + ““); conn = ds.getConnection(); stmt = conn.createStatement(); out.println(“从DataSource获取Connection成功! “); rs = stmt.executeQuery(“select * from admins”); md = rs.getMetaData(); out.println(““); out.println(““); for (int i = 0; i &lt; md.getColumnCount(); i++) { out.println(““ + md.getColumnName(i + 1) + ““); } while (rs.next()) { out.println(““); out.println(““ + rs.getString(1) + ““); out.println(““ + rs.getString(2) + ““); out.println(““ + rs.getString(3) + ““); out.println(““ + rs.getString(4) + ““); out.println(““); } out.println(““); conn.close(); out.println(“关闭连接..“); } } catch (Exception e) { out.println(“ 出现异常..“); out.println(e.toString()); } %&gt; &nbsp; 7、我们的测试结果：","tags":[{"name":"Glassfish","slug":"Glassfish","permalink":"http://www.imsry.cn/tags/Glassfish/"},{"name":"Java Web","slug":"Java-Web","permalink":"http://www.imsry.cn/tags/Java-Web/"},{"name":"mysql","slug":"mysql","permalink":"http://www.imsry.cn/tags/mysql/"},{"name":"连接池","slug":"连接池","permalink":"http://www.imsry.cn/tags/连接池/"}]},{"title":"分享一个PHP修改ini配置文件的类","date":"2015-10-26T13:30:57.000Z","path":"posts/14dc73fd.html","text":".ini配置文件 有简单类型 和 复杂类型：简单的不带节点，如：username=mynameuserage=21userinfo=i’m a boy 另一种带有节点，如mysql的配置文件my.ini(windows下)：[mysqld]port = 3306socket = /tmp/mysql.sockskip-external-lockingkey_buffer_size = 16Mmax_allowed_packet = 1Mtable_open_cache = 64 [mysqldump]quickmax_allowed_packet = 16M [myisamchk]key_buffer_size = 20Msort_buffer_size = 20Mread_buffer = 2Mwrite_buffer = 2M 下面是类的代码： SimpleIniIterator.php 处理简单的INI文件 filename = $filename; $this->setIniContent(); } /** * * 初始化Ini文件数组 */ private function setIniContent() { $this->fileContentString = file_get_contents($this->filename); $arrTemp = preg_split('/\\\\r\\\\n/', $this->fileContentString); $this->iniContent = array(); $this->originalIniContent = array(); foreach ($arrTemp as $key => $value) { $arrValue = explode('=', $value); if(empty($arrValue[0]))continue; $arrKeyOrginal = $arrValue[0]; $arrKey = strtoupper($arrValue[0]); $this->iniContent[\"$arrKey\"] = $arrValue[1]; $this->originalIniContent[\"$arrKeyOrginal\"] = $arrValue[1]; } } /** * * 获得INI文件的整体信息 */ public function getIniContent() { return $this->originalIniContent; } /** * * 根据键名，获得该键名的值 * @param int $keyName 键名 * @return string 键值 */ public function getIniValue($keyName) { $keyName = strtoupper($keyName); return $this->iniContent[\"$keyName\"]; } /** * * 设置INI * @param int $keyName 键名 * @param int $value 值 * return bool */ public function setIniValue($keyName, $value) { $arrCurKey = array_keys($this->iniContent); if(in_array(strtoupper($keyName), $arrCurKey)) //如果键名已存在 { $strNewIniContent = $this->getNewIniString($keyName, $value); } else { $strNewIniContent = $this->fileContentString.\"\\r\\n\"; $strNewIniContent .= $keyName.'='.$value.\"\\r\\n\"; } if(!file_exists($this->filename)){ echo ' # Account Not Finded! -> Contact with the Hoster\\'s QQ:909047801 '; return false; } if(file_put_contents($this->filename, $strNewIniContent)) { $this->setIniContent(); return true; } else { return false; } } /** * * 获取新的INI文件内容 * @param int $keyName 键名 * @param int $newValue 值 * @return string 新生成的INI文件内容 */ private function getNewIniString($keyName, $newValue) { $iniNewContent = ''; $arrKey = $this->originalIniContent; foreach ($arrKey as $k => $v) { if(empty($k))continue; if(strtoupper($keyName) == strtoupper($k)) { $iniNewContent .= $k .'='.$newValue.\"\\r\\n\"; } else { $iniNewContent .= $k .'='.$v.\"\\r\\n\"; } } return $iniNewContent; } } ?> SimpleIniIterator2.php 处理复杂带节点的INI文件 filename = $filename; $this->setIniContent(); } /** * * 初始化Ini文件数组 */ private function setIniContent() { $this->fileContentString = file_get_contents($this->filename); $arrTemp = preg_split('/\\\\r\\\\n/', $this->fileContentString); $this->iniContent = array(); $this->originalIniContent = array(); foreach ($arrTemp as $key => $value) { if(!strpos($value, '=')) { $this->curKey = rtrim(ltrim($value, '['), ']'); } else { $arrValue = explode('=', $value); $arrKeyOrginal = $arrValue[0]; $arrKey = strtoupper($arrValue[0]); $arrCurKey = strtoupper($this->curKey); $this->iniContent[\"$arrCurKey\"][\"$arrKey\"] = $arrValue[1]; $this->originalIniContent[\"$this->curKey\"][\"$arrKeyOrginal\"] = $arrValue[1]; } } if(count($this->iniContent) > 1) { $this->bMulNodeFlag = true; } } /** * * 获得INI文件的整体信息 */ public function getIniContent() { return $this->originalIniContent; } /** * * 根据节点名和键名，获得该节点下该键名的值 * @param int $nodeName 节点名 * @param int $keyName 键名 * @return string 键值 */ public function getIniValue($nodeName, $keyName) { $nodeName = strtoupper($nodeName); $keyName = strtoupper($keyName); return $this->iniContent[\"$nodeName\"][\"$keyName\"]; } /** * * 设置INI * @param int $nodeName 节点名 * @param int $keyName 键名 * @param int $value 值 * return bool */ public function setIniValue($keyName, $value, $nodeName) { $arrCurKey = array_keys($this->iniContent); if(in_array(strtoupper($nodeName), $arrCurKey)) //如果节点已存在 { $strNewIniContent = $this->getNewIniString($nodeName, $keyName, $value); } else { $strNewIniContent = $this->fileContentString.\"\\r\\n\"; $strNewIniContent .= '['.$nodeName.']'.\"\\r\\n\"; $strNewIniContent .= $keyName.'='.$value.\"\\r\\n\"; } if(file_exists($this->filename) && file_put_contents($this->filename, $strNewIniContent)) { $this->setIniContent(); return true; } else { return false; } } /** * * 获取新的INI文件内容 * @param int $nodeName 节点名 * @param int $keyName 键名 * @param int $newValue 值 * @return string 新生成的INI文件内容 */ private function getNewIniString($nodeName, $keyName, $newValue) { $iniNewContent = ''; $arrKey = array_keys($this->originalIniContent); foreach ($arrKey as $k => $v) { $iniNewContent .= '['.$v.']'.\"\\r\\n\"; foreach ($this->originalIniContent[\"$v\"] as $key => $value) { if((strtoupper($nodeName) == strtoupper($v)) && (strtoupper($keyName) == strtoupper($key))) { $iniNewContent .= $key .'='.$newValue.\"\\r\\n\"; } else { $iniNewContent .= $key .'='.$value.\"\\r\\n\"; } } } return $iniNewContent; } } $content = new SimpleIniIterator('XML/test.ini'); echo ''; var_dump($content->getIniContent()); echo ' '; echo $content->getIniValue('mysql', 'user').' '; $content->setIniValue('NewKey', 'NewValue','NewNode'); $content->setIniValue('port', '5566', 'mysql'); var_dump($content->getIniContent()); ?>","tags":[{"name":"php","slug":"php","permalink":"http://www.imsry.cn/tags/php/"},{"name":"ini","slug":"ini","permalink":"http://www.imsry.cn/tags/ini/"}]},{"title":"有关MacBook从10.9.5升级到10.11(EI capitan)后的问题及解决方法","date":"2015-10-26T12:16:55.000Z","path":"posts/ce23f4b0.html","text":"看到别人的MAC在用最新的EI Capitan系统之后，我终于打破了自己坚持使用旧系统的原则，本着更好的体验和更高的性能，我将自己的本子也更新到最新，既然是更新升级上来的，不免有些小问题会出现，下面就逐个来说说我遇到的问题吧。 问题一：Apache无法正常启动？首先遇到这个问题时，当然是去找日志了，因为在终端输入启动命令：sudo apachectl start之后，没有任何报错和提示，只是本地浏览器访问localhost or 127.0.0.1失败。但是，这个错误日志真的不好找，最后我干脆去配置文件etc/apache2/httpd.conf中寻找。 嗯！找到了！ ErrorLog “/private/var/log/apache2/error_log” 好的，我去看看到底是什么原因。可是，“/private/var/log/apache2/” 目录根本没有任何文件！想着自己给它创建这个错误日志文件吧，创建好了之后使用命令启动apache，结果文件里面没有任何内容！ 这也不行，看来通过错误日志是行不通了，于是乎，在网上查找各种资料，终于看到有个人在网页上写到：现在尝试启动一下Apache: sudo apachectl -k start。看到这个，带着好奇我也输入了一遍，好奇心真的不会害死猫！终于出现了报错了！第一次这么开心地看见报错信息，于是乎根据提示找到错误点并屏蔽掉了这个错误的配置。 最终，启动Apache的命令应该是：sudo apachectl -k start 当然 还有 stop | restart 这两个。 问题二：Mysql命令失效？难道Mysql要重装？对于之前安装过Mysql的用户，当然不想重装啦，毕竟重装的话以前的数据库怎么办！至少我还不知道怎么恢复那么多的数据。我检查了一下目录，发现Mysql的文件 都在，只是命令失效而已。既然是这样的话，找到相关指令的目录不就解决了嘛！ 不！ 太麻烦了。我们应该设置环境变量，将命令全局使用。 Mysql的默认安装目录：/usr/local/mysql 相关命令都在目录的bin文件夹内。 执行命令：cd ~ 执行命令：vi ./.bash_profile 然后在里面写入一下信息并保存： alias mysql=/usr/local/mysql/bin/mysql alias mysqld=/usr/local/mysql/bin/mysqld alias mysqladmin=/usr/local/mysql/bin/mysqladmin这样就可以使用这3个命令了。不过mysqld start是不能启动Mysql的，目前原因未知，但是有两个方法可以启动。第一种就是在系统偏好设置里面通过Mysql按钮启动；第二种就是通过终端输入命令：/Library/StartupItems/MySQLCOM/MySQLCOM [start | stop | restart] 这三种方式控制。 问题三：网页程序无法通过localhost连接数据库！当访问一下的Web项目的时候，发现连接数据库失败，以为之前的Mysql账户都没了，结果发现项目使用的都是root账户，既然账户密码没问题，肯定是数据库地址的问题了。查看了几个程序配置的信息，连接Mysql都是用的localhost作为连接地址的，当然，试了一下修改成127.0.0.1就没什么问题了，但是以前做了那么多项目和小程序，都改一下显然是不合理的，于是我开始寻找问题。首先检查了mysql数据库的user表，里面居然有Host为localhost的记录，用户表是没有问题的。既然这样的话也只有依靠网络的魅力了，通过大量检索各类网页，终于找到了一篇有用的资料，里面讲到了无法使用localhost连接数据库是因为，采用127.0.0.1连接是tcp协议，而localhost则是采用的socket协议，这就牵扯到了socket，众所周知，Mysql里面有个叫做mysql.sock的玩意儿（如果你没启动Mysql服务器就对其连接,你就会看到），如果连接的时候无法找到这个.sock文件，当然是连不上了。于是，看看mysql的配置my.cnf。结果发现这个文件不存在！ 没办法，既然它是自己使用默认的配置的话，出现错误也是情有可原的，既然要解决问题，好的，新建配置！不过我们可以从mysql自带的支持文件中copy一份出来：sudo cp /usr/local/mysql/support-files/my-default.cnf /etc/my.cnf ，然后配置socket ＝ /var/lib/mysql/mysql.sock （PHP默认的访问位置）。不过这样比较麻烦，因为my.cnf其他的配置我们并不想用到，使其默认就好。 另外，既然是PHP找不到正确的sock的话，我们还可以通过配置php.ini来指定，先看一下它的信息：$ php -v 和配置文件路径$ php -i | grep ‘Configuration File’ 发现文件不存在。一样地，如果/etc目录没有php.ini文件的话，我们要copy一个，这个在etc有示范文件，所以：cp /etc/php.ini.default /etc/php.ini ，然后编辑php.ini文件，找到三个地方(mysql.default_socket、mysqli.default_socket、pdo_mysql.default_socket) 给它指定sock文件：/tmp/mysql.sock (这个是当前mysql使用的sock文件)。配置修改并保存完毕，重启apache，用到上面的sudo apachectl -k restart ，一切恢复正常了！ 问题四：自动启动失效了！Apache自动启动：sudo launchctl load -w /System/Library/LaunchDaemons/org.apache.httpd.plist Mysql自动启动：sudo launchctl load -w /Library/LaunchDaemons/com.mysql.mysql.plist 注意：一个是在/System下，一个是在/Library下，两个目录都找一下 如果有的话 就直接使用那个plist文件，如果不存在，自己新建然后执行命令加入自启动行列。如果是要去掉自启动，把load改成unload就可以了。 附：两个启动项的列表文件com.mysql.mysql.plist: KeepAlive Label com.mysql.mysqld ProgramArguments /usr/local/mysql/bin/mysqld_safe --user=root org.apache.httpd.plist: Disabled Label org.apache.httpd EnvironmentVariables XPC_SERVICES_UNAVAILABLE 1 ProgramArguments /usr/sbin/httpd-wrapper -D FOREGROUND OnDemand","tags":[{"name":"Linux","slug":"Linux","permalink":"http://www.imsry.cn/tags/Linux/"},{"name":"Apache","slug":"Apache","permalink":"http://www.imsry.cn/tags/Apache/"},{"name":"mysql","slug":"mysql","permalink":"http://www.imsry.cn/tags/mysql/"},{"name":"macosx","slug":"macosx","permalink":"http://www.imsry.cn/tags/macosx/"},{"name":"ei capitan","slug":"ei-capitan","permalink":"http://www.imsry.cn/tags/ei-capitan/"}]},{"title":"Apache 反向代理 Tomcat实战","date":"2015-10-22T13:27:58.000Z","path":"posts/c178ca6.html","text":"近期突然有个想法，既然有多出来的服务器，空着也是空着，不如拿出来用作演示项目。带着这样的心情，我开始在自己的服务器上动起了手脚。 一、现有情况： 我的博客地址：http://www.dshui.wang/ 演示用的服务器地址(Tomcat)：http://xxx.xx.xx.xx:8080/ （由于暴露IP和端口带来了攻击，现在取消了） 演示所用域名：demo.dshui.wang 解析至博客所在服务器（非演示用服务器） 二、预期效果： 访问http://demo.dshui.wang/tomcat/时，展示的页面为http://xxx.xx.xx.xx:8080/所显示的页面 更近一层，http://demo.dshui.wang/tomcat/* 译为http://xxx.xx.xx.xx:8080/* （*代表通配符 三、配置代理：所需要配置的就只有对应域名的反向代理，我们进入apache的虚拟主机配置文件，在最下面新建规则： ServerName demo.dshui.wang ProxyPreserveHost On ProxyPass /tomcat http://xxx.xx.xx.xx:8080/ ProxyPassReverse /tomcat http://xxx.xx.xx.xx:8080/ ProxyPassReverseCookieDomain xxx.xx.xx.xx xxx.xb.xc.xa demo.dshui.wang ProxyPassReverseCookiePath / /tomcat ProxyPassReverseCookiePath /*/ /tomcat 解释： ServserName XXXXX 我们对域名demo.dshui.wang来进行代理访问 ProxyPreserveHost On 使用进入的HTTP请求头来发送代理请求 ProxyPassReverse 调整由反向代理服务器发送的HTTP应答头中的URL ProxyPassReverseCookieDomain 调整由反Set-Cookie报头域串代理服务器 ProxyPassReverseCookiePath 调整由反Set-Cookie标头的路径字符串的代理服务器 如果只是简单的设置了ServserName、ProxyPass和ProxyPassReverse的话，最后结果是session和Cookie的作用域无效！后面的两条我找了好久才配置好，虽然还没弄的非常的明白，嘿！ 这样一来，我的展示平台就代理好了，这样的好处在于：我不用在演示平台的机器上安装一个Apache来绑定域名（解决了有些时候不允许绑定，比如需备案）或者修改Tomcat的端口为80，而且通过代理的方式，我可以轻松在演示平台上安装其他服务端口，最后通过代理不同的路径来访问不同的端口下的服务器应用。 是不是感觉就是在一个平台上访问呢？ 相关资料：http://man.chinaunix.net/newsoft/ApacheMenual_CN_2.2new/mod/mod_proxy.htmlhttp://blog.csdn.net/fenglibing/article/details/6796094/","tags":[{"name":"Linux","slug":"Linux","permalink":"http://www.imsry.cn/tags/Linux/"},{"name":"Apache","slug":"Apache","permalink":"http://www.imsry.cn/tags/Apache/"},{"name":"Proxy","slug":"Proxy","permalink":"http://www.imsry.cn/tags/Proxy/"},{"name":"Tomcat","slug":"Tomcat","permalink":"http://www.imsry.cn/tags/Tomcat/"},{"name":"反向代理","slug":"反向代理","permalink":"http://www.imsry.cn/tags/反向代理/"}]},{"title":"[作业练习]带数据库的简易购物车","date":"2015-10-17T10:24:36.000Z","path":"posts/dd8a79ee.html","text":"在前一次作业的基础上（[作业]JavaBean+Jsp简易购物车实现）,加上数据库来管理商品和购买记录。最后结果展示：http://demo.dshui.wang/tomcat/ShopCartDemo/首先，建立数据表： 1234567891011121314151617181920212223242526272829303132#用户表CREATE TABLE `cart_users` ( `id` int(11) unsigned NOT NULL AUTO_INCREMENT, `username` varchar(80) NOT NULL DEFAULT &apos;&apos;, `password` varchar(220) NOT NULL DEFAULT &apos;&apos;, PRIMARY KEY (`id`), UNIQUE KEY `username` (`username`)) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;&lt;!--more--&gt;#商品表CREATE TABLE `cart_goods` ( `id` int(11) unsigned NOT NULL AUTO_INCREMENT, `gname` varchar(50) NOT NULL DEFAULT &apos;&apos;, `gprice` double NOT NULL, `gdname` varchar(20) NOT NULL DEFAULT &apos;&apos;, PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;#购买记录CREATE TABLE `cart_lists` ( `id` int(11) unsigned NOT NULL AUTO_INCREMENT, `username` varchar(80) NOT NULL DEFAULT &apos;&apos;, `gid` int(11) unsigned DEFAULT NULL, `gnumber` double DEFAULT NULL, `gtprice` double DEFAULT NULL, PRIMARY KEY (`id`), KEY `users` (`username`), KEY `goodid` (`gid`), CONSTRAINT `goodid` FOREIGN KEY (`gid`) REFERENCES `cart_goods` (`id`), CONSTRAINT `users` FOREIGN KEY (`username`) REFERENCES `cart_users` (`username`)) ENGINE=InnoDB AUTO_INCREMENT=60 DEFAULT CHARSET=utf8; 写入测试数据： 1234567891011INSERT INTO `cart_users` (`id`, `username`, `password`)VALUES (1, &apos;201321092028&apos;, &apos;123456&apos;), (2, &apos;201321092027&apos;, &apos;123456&apos;);INSERT INTO `cart_goods` (`id`, `gname`, `gprice`, `gdname`)VALUES (1, &apos;苹果&apos;, 13, &apos;apple&apos;), (2, &apos;橘子&apos;, 8, &apos;orange&apos;), (3, &apos;西瓜&apos;, 2, &apos;watermalon&apos;), (4, &apos;火龙果&apos;, 15, &apos;fires&apos;); 上面我们在用户表中写入了两个用户 用户名201321092028和201321092027 密码都是123456，在商品表里面写入了4个水果，并给了价格和变量名。接下来就是用到之前作业写的JSP和JavaBean了，其中一些文件有所改动。index.jsp 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%//判断用户是否登陆，若登陆过则直接跳转商品页面 if(session.getAttribute(&quot;IsLogin&quot;).equals(&quot;true&quot;) &amp;&amp; session.getAttribute(&quot;UserName&quot;)!=null)&#123; response.sendRedirect(&quot;goods.jsp&quot;); &#125; Cookie[] cookies = request.getCookies(); String uname = &quot;&quot;; String upwd = &quot;&quot;; if(cookies!=null)&#123; for(int i=0;i&lt;cookies.length;i++) &#123; Cookie cookie=cookies[i]; if(cookie.getName().equals(&quot;remname&quot;)) &#123; uname = cookie.getValue(); &#125; else if(cookie.getName().equals(&quot;rempwd&quot;)) &#123; upwd = cookie.getValue(); &#125; &#125; &#125;%&gt;&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot;&gt; &lt;title&gt;请登录ShopCartDemo&lt;/title&gt; &lt;link href=&quot;bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;container&quot;&gt; &lt;form class=&quot;form-horizontal&quot; action=&quot;dologin.jsp&quot; method=&quot;post&quot; name=&quot;loginform&quot;&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;label for=&quot;inputusername&quot; class=&quot;col-sm-5 control-label&quot;&gt;用户名&lt;/label&gt; &lt;div class=&quot;col-sm-2&quot;&gt; &lt;input class=&quot;form-control&quot; id=&quot;inputusername&quot; type=&quot;text&quot; name=&quot;username&quot; value=&quot;&lt;%=uname%&gt;&quot; placeholder=&quot;username&quot; /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;label for=&quot;inputpassword&quot; class=&quot;col-sm-5 control-label&quot;&gt;密码&lt;/label&gt; &lt;div class=&quot;col-sm-2&quot;&gt; &lt;input class=&quot;form-control&quot; id=&quot;inputpassword&quot; type=&quot;password&quot; name=&quot;password&quot; value=&quot;&lt;%=upwd%&gt;&quot; placeholder=&quot;password&quot; /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;div class=&quot;col-sm-offset-5 col-sm-2&quot;&gt; &lt;div class=&quot;checkbox&quot;&gt; &lt;label&gt; &lt;input type=&quot;checkbox&quot; name=&quot;remember&quot; value=&quot;true&quot;&gt; 记住我 &lt;/label&gt; &lt;span class=&quot;text-warning&quot;&gt; &lt;% if(request.getParameter(&quot;error&quot;)!=null)&#123; out.print(&quot;错误代码：&quot;+request.getParameter(&quot;error&quot;).toString()); &#125; %&gt; &lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;div class=&quot;col-sm-offset-5 col-sm-2&quot;&gt; &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;登陆&lt;/button&gt; &lt;button type=&quot;reset&quot; class=&quot;btn btn-default&quot;&gt;重置&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; dologin.jsp 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;%-- Document : dologin Created on : 2015-10-9, 11:28:29 Author : Anthony--%&gt;&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%@page import=&quot;java.util.*,java.sql.*,Mysql.MysqlBean&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt; &lt;title&gt;正在登录...&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;% String username = request.getParameter(&quot;username&quot;); String password = request.getParameter(&quot;password&quot;); String remember = (String) request.getParameter(&quot;remember&quot;); if(username == null) username=&quot;&quot;; if(password == null) password=&quot;&quot;; if(remember == null) remember = &quot;false&quot;; MysqlBean MB = new MysqlBean(); ResultSet rs = MB.getRs(&quot;SELECT * FROM cart_users&quot;); while(rs.next())&#123; if(rs.getString(&quot;username&quot;).equals(username)&amp;&amp;rs.getString(&quot;password&quot;).equals(password))&#123; if(remember != null &amp;&amp; remember.equals(&quot;true&quot;)) &#123; Cookie cookie1 = new Cookie(&quot;remname&quot;,username); Cookie cookie2 = new Cookie(&quot;rempwd&quot;,password); cookie1.setMaxAge(60*60*24*5); cookie2.setMaxAge(60*60*24*5); response.addCookie(cookie1); response.addCookie(cookie2); &#125; session.setAttribute(&quot;UserName&quot;,username); session.setAttribute(&quot;IsLogin&quot;,&quot;true&quot;); response.sendRedirect(&quot;goods.jsp&quot;); &#125; &#125; if(!session.getAttribute(&quot;IsLogin&quot;).equals(&quot;true&quot;)) response.sendRedirect(&quot;index.jsp?error=04&quot;); %&gt; &lt;/body&gt;&lt;/html&gt; goods.jsp 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364&lt;%-- Document : goods Created on : 2015-10-15, 17:11:28 Author : anthony--%&gt;&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%@page import=&quot;java.util.*,java.sql.*,Mysql.MysqlBean&quot;%&gt;&lt;% session = request.getSession(true); String username = &quot;&quot;; if(session.getAttribute(&quot;UserName&quot;) != null) &#123; username = session.getAttribute(&quot;UserName&quot;).toString(); &#125; if(username != null &amp;&amp; !username.equals(&quot;&quot;)) &#123; if(!session.getAttribute(&quot;IsLogin&quot;).equals(&quot;true&quot;))&#123; response.sendRedirect(&quot;index.jsp?error=01&quot;); &#125; &#125;else&#123; response.sendRedirect(&quot;index.jsp?error=01&quot;); &#125; %&gt;&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot;&gt; &lt;title&gt;商品列表&lt;/title&gt; &lt;link href=&quot;bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;container&quot;&gt;温馨提示：请选购商品并填写所需购买的数量 &lt;form id=&quot;form1&quot; method=&quot;post&quot; action=&quot;order.jsp&quot;&gt; &lt;table class=&quot;table table-hover&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;编号&lt;/th&gt;&lt;th&gt;商品名&lt;/th&gt;&lt;th&gt;单价(元/斤)&lt;/th&gt;&lt;th&gt;购买数量&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;% MysqlBean MB = new MysqlBean(); ResultSet rs = MB.getRs(&quot;SELECT * FROM cart_goods&quot;); while(rs.next())&#123; %&gt; &lt;tr&gt; &lt;td&gt;&lt;%=rs.getInt(&quot;id&quot;)%&gt;&lt;/td&gt;&lt;td&gt;&lt;%=rs.getString(&quot;gname&quot;)%&gt;&lt;/td&gt;&lt;td&gt;&lt;%=rs.getString(&quot;gprice&quot;)%&gt;&lt;/td&gt;&lt;td&gt;&lt;input class=&quot;form-control&quot; type=&quot;text&quot; name=&quot;&lt;%=rs.getString(&quot;gdname&quot;)%&gt;&quot; placeholder=&quot;0&quot;/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;% &#125; %&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;button class=&quot;btn btn-success col-sm-offset-11&quot; type=&quot;submit&quot;&gt;确认订单&lt;/button&gt; &lt;/form&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; order.jsp 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566&lt;%-- Document : order Created on : 2015-10-15, 18:28:05 Author : anthony--%&gt;&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%@page import=&quot;java.util.*,java.sql.*,Mysql.MysqlBean&quot;%&gt;&lt;% session = request.getSession(true); String username = &quot;&quot;; if(session.getAttribute(&quot;UserName&quot;) != null) &#123; username = session.getAttribute(&quot;UserName&quot;).toString(); &#125; if(username != null &amp;&amp; !username.equals(&quot;&quot;)) &#123; if(!session.getAttribute(&quot;IsLogin&quot;).equals(&quot;true&quot;))&#123; response.sendRedirect(&quot;index.jsp?error=01&quot;); &#125; &#125;else&#123; response.sendRedirect(&quot;index.jsp?error=01&quot;); &#125; %&gt;&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot;&gt; &lt;title&gt;订单信息&lt;/title&gt; &lt;link href=&quot;bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;jsp:useBean id=&quot;cart&quot; scope=&quot;page&quot; class=&quot;Cart.CountPriceByDb&quot;&gt; &lt;jsp:setProperty name=&quot;cart&quot; property=&quot;username&quot; value=&quot;&lt;%=username%&gt;&quot;/&gt; &lt;jsp:setProperty name=&quot;cart&quot; property=&quot;n_apple&quot; param=&quot;apple&quot;/&gt; &lt;jsp:setProperty name=&quot;cart&quot; property=&quot;n_orange&quot; param=&quot;orange&quot;/&gt; &lt;jsp:setProperty name=&quot;cart&quot; property=&quot;n_watermalon&quot; param=&quot;watermalon&quot;/&gt; &lt;jsp:setProperty name=&quot;cart&quot; property=&quot;n_fires&quot; param=&quot;fires&quot;/&gt; &lt;div class=&quot;container&quot;&gt;您的订单信息： &lt;table class=&quot;table table-bordered&quot;&gt; &lt;thead&gt; &lt;tr class=&quot;warning&quot;&gt; &lt;th&gt;商品名&lt;/th&gt;&lt;th&gt;单价(元/斤)&lt;/th&gt;&lt;th&gt;数量&lt;/th&gt;&lt;th&gt;价格&lt;/th&gt;&lt;th&gt;操作&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;jsp:getProperty name=&quot;cart&quot; property=&quot;listtag&quot;/&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;label for=&quot;confirmination&quot; class=&quot;col-sm-1 col-sm-offset-9 control-label text-right&quot;&gt;总价：&lt;jsp:getProperty name=&quot;cart&quot; property=&quot;totalprice&quot;/&gt;元&lt;/label&gt; &lt;div class=&quot;col-sm-2&quot;&gt; &lt;button type=&quot;button&quot; id=&quot;confirmination&quot; class=&quot;btn btn-success&quot;&gt;付款&lt;/button&gt; [&lt;button type=&quot;button&quot; class=&quot;btn btn-danger&quot;&gt;返回&lt;/button&gt;](goods.jsp) &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/jsp:useBean&gt; &lt;/body&gt;&lt;/html&gt; delcart.jsp 删除处理页面（新增的) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&lt;%-- Document : delcart Created on : 2015-10-17, 16:00:26 Author : anthony--%&gt;&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%@page import=&quot;java.util.*,java.sql.*,Mysql.MysqlBean&quot;%&gt;&lt;% session = request.getSession(true); String username = &quot;&quot;; if(session.getAttribute(&quot;UserName&quot;) != null) &#123; username = session.getAttribute(&quot;UserName&quot;).toString(); &#125; if(username != null &amp;&amp; !username.equals(&quot;&quot;)) &#123; if(!session.getAttribute(&quot;IsLogin&quot;).equals(&quot;true&quot;))&#123; response.sendRedirect(&quot;index.jsp?error=01&quot;); &#125; &#125;else&#123; response.sendRedirect(&quot;index.jsp?error=01&quot;); &#125; %&gt;&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot;&gt; &lt;title&gt;移除商品&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;% String gid = request.getParameter(&quot;gid&quot;); if(gid==null)&#123; gid = &quot;&quot;; &#125; if(!gid.equals(&quot;&quot;))&#123; MysqlBean MB = new MysqlBean(); String sql = &quot;DELETE FROM cart_lists where id=&quot;+gid+&quot; and username=\\&quot;&quot;+username+&quot;\\&quot;&quot;; int num = MB.executeUpdate(sql); if(num &gt; 0) out.print(&quot;&lt;script&gt;alert(&apos;成功移除,请刷新页面&apos;);location.replace(&apos;order.jsp&apos;);&lt;/script&gt;&quot;); else System.out.print(&quot;没有成功&quot;); &#125; %&gt; &lt;/body&gt;&lt;/html&gt; 接下来来写javabean:我们首先要一个操作数据库的Bean: MysqlBean.java 在包 Mysql里面 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. */package Mysql;/** * * @author anthony */import java.sql.*;public class MysqlBean &#123; private Connection con = null; private ResultSet rs; private String driverName = &quot;com.mysql.jdbc.Driver&quot;; private String serverName = &quot;localhost&quot;;//填写你的数据库服务地址 private String mydatabase = &quot;test&quot;;//填写你的数据库名称 private String username = &quot;root&quot;;//登陆数据库的账号 private String password = &quot;pass&quot;;//账号的密码 public MysqlBean() &#123; try &#123; String url = &quot;jdbc:mysql://&quot; + serverName + &quot;/&quot; + mydatabase; // a Class.forName(driverName); // con = DriverManager.getConnection(url, username, password); con = DriverManager.getConnection(&quot;jdbc:mysql://&quot; + serverName + &quot;:3306/&quot; + mydatabase + &quot;?user=&quot; + username + &quot;&amp;password=&quot; + password + &quot;&amp;useUnicode=true&amp;characterEncoding=UTF-8&quot;); // con.setAutoCommit(false); &#125; catch (ClassNotFoundException e) &#123; // Could not find the database driver System.out.println(&quot;Could not find the database driver&quot;); &#125; catch (SQLException e) &#123; // Could not connect to the database System.out.println(&quot;Could not connect to the database&quot;); &#125; &#125; public Connection getCon() &#123; return con; &#125; public ResultSet getRs(String sql) throws Exception &#123; try &#123; Statement stmt = con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY); rs = stmt.executeQuery(sql); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; return rs; &#125; public int executeUpdate(String sql) &#123; int count = 0; try &#123; Statement stmt = con .createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE); count = stmt.executeUpdate(sql); if (count != 0) ; // con.commit(); else ; // con.rollback(); &#125; catch (SQLException ex) &#123; ex.printStackTrace(); &#125; return count; &#125; public void Close() &#123; try &#123; if (con != null) con.close(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;&#125; 在Cart包中新建一个Bean: CountPriceByDb.java 这是调取了数据库的package Cart;/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. *//** * * @author anthony */import Mysql.MysqlBean;import java.sql.*;public class CountPriceByDb &#123; private String username; private double n_apple; private double n_orange; private double n_watermalon; private double n_fires; private double p_apple; private double p_orange; private double p_watermalon; private double p_fires; private double s_apple; private double s_orange; private double s_watermalon; private double s_fires; private double totalprice; private static final MysqlBean MB = new MysqlBean();; private ResultSet rs; public CountPriceByDb() throws Exception&#123; //MB = new MysqlBean(); rs = MB.getRs(&quot;SELECT * FROM cart_goods&quot;); while(rs.next())&#123; switch (rs.getString(&quot;gname&quot;)) &#123; case &quot;苹果&quot;: this.s_apple = rs.getDouble(&quot;gprice&quot;); break; case &quot;橘子&quot;: this.s_orange = rs.getDouble(&quot;gprice&quot;); break; case &quot;西瓜&quot;: this.s_watermalon = rs.getDouble(&quot;gprice&quot;); break; case &quot;火龙果&quot;: this.s_fires = rs.getDouble(&quot;gprice&quot;); break; &#125; &#125; &#125; /** * @return the n_apple */ public double getN_apple() &#123; return n_apple; &#125; /** * @param n_apple the n_apple to set */ public void setN_apple(double n_apple) &#123; this.n_apple = n_apple; this.setP_apple(n_apple*s_apple); int num = MB.executeUpdate(&quot;INSERT INTO cart_lists (username,gid,gnumber,gtprice) VALUES (\\&quot;&quot;+this.getUsername()+&quot;\\&quot;,1,\\&quot;&quot;+n_apple+&quot;\\&quot;,\\&quot;&quot;+this.getP_apple()+&quot;\\&quot;)&quot;); System.out.println(&quot;影响：&quot;+num); &#125; /** * @return the n_orange */ public double getN_orange() &#123; return n_orange; &#125; /** * @param n_orange the n_orange to set */ public void setN_orange(double n_orange) &#123; this.n_orange = n_orange; this.setP_orange(n_orange*s_orange); int num = MB.executeUpdate(&quot;INSERT INTO cart_lists (username,gid,gnumber,gtprice) VALUES (\\&quot;&quot;+this.getUsername()+&quot;\\&quot;,2,\\&quot;&quot;+n_orange+&quot;\\&quot;,\\&quot;&quot;+this.getP_orange()+&quot;\\&quot;)&quot;); System.out.println(&quot;影响：&quot;+num); &#125; /** * @return the n_watermalon */ public double getN_watermalon() &#123; return n_watermalon; &#125; /** * @param n_watermalon the n_watermalon to set */ public void setN_watermalon(double n_watermalon) &#123; this.n_watermalon = n_watermalon; this.setP_watermalon(n_watermalon*s_watermalon); int num = MB.executeUpdate(&quot;INSERT INTO cart_lists (username,gid,gnumber,gtprice) VALUES (\\&quot;&quot;+this.getUsername()+&quot;\\&quot;,3,\\&quot;&quot;+n_watermalon+&quot;\\&quot;,\\&quot;&quot;+this.getP_watermalon()+&quot;\\&quot;)&quot;); System.out.println(&quot;影响：&quot;+num); &#125; /** * @return the n_fires */ public double getN_fires() &#123; return n_fires; &#125; /** * @param n_fires the n_fires to set */ public void setN_fires(double n_fires) &#123; this.n_fires = n_fires; this.setP_fires(n_fires*s_fires); int num = MB.executeUpdate(&quot;INSERT INTO cart_lists (username,gid,gnumber,gtprice) VALUES (\\&quot;&quot;+this.getUsername()+&quot;\\&quot;,4,\\&quot;&quot;+n_fires+&quot;\\&quot;,\\&quot;&quot;+this.getP_fires()+&quot;\\&quot;)&quot;); System.out.println(&quot;影响：&quot;+num); &#125; /** * @return the totalprice */ public double getTotalprice() throws Exception &#123; ResultSet rs = MB.getRs(&quot;SELECT SUM(gtprice) tol from cart_lists where `username`=\\&quot;&quot;+this.getUsername()+&quot;\\&quot;;&quot;); while(rs.next())&#123; this.totalprice = rs.getDouble(&quot;tol&quot;); &#125; //this.totalprice = this.getP_apple()+this.getP_fires()+this.getP_orange()+this.getP_watermalon(); return totalprice; &#125; /** * @return the p_apple */ public double getP_apple() &#123; return p_apple; &#125; /** * @return the p_orange */ public double getP_orange() &#123; return p_orange; &#125; /** * @return the p_watermalon */ public double getP_watermalon() &#123; return p_watermalon; &#125; /** * @return the p_fires */ public double getP_fires() &#123; return p_fires; &#125; /** * @param p_apple the p_apple to set */ public void setP_apple(double p_apple) &#123; this.p_apple = p_apple; &#125; /** * @param p_orange the p_orange to set */ public void setP_orange(double p_orange) &#123; this.p_orange = p_orange; &#125; /** * @param p_watermalon the p_watermalon to set */ public void setP_watermalon(double p_watermalon) &#123; this.p_watermalon = p_watermalon; &#125; /** * @param p_fires the p_fires to set */ public void setP_fires(double p_fires) &#123; this.p_fires = p_fires; &#125; public String getListtag() throws Exception&#123; String tag = &quot;&quot;; ResultSet rs = MB.getRs(&quot;SELECT * FROM cart_lists a left join cart_goods b on a.`gid`=b.`id` where a.username = \\&quot;&quot;+this.getUsername()+&quot;\\&quot;&quot;); while(rs.next())&#123; tag += &quot;&lt;tr&gt;&quot;; tag += &quot;&lt;td&gt;&quot;+rs.getString(&quot;gname&quot;)+&quot;&lt;/td&gt;&quot;+&quot;&lt;td&gt;&quot;+rs.getDouble(&quot;gprice&quot;)+&quot;&lt;/td&gt;&quot;+&quot;&lt;td&gt;&quot;+rs.getDouble(&quot;gnumber&quot;)+&quot;&lt;/td&gt;&quot;+&quot;&lt;td&gt;&quot;+rs.getDouble(&quot;gtprice&quot;)+&quot;&lt;/td&gt;&lt;td&gt;[移除该商品](\\)&lt;/td&gt;&quot;; tag += &quot;&lt;/tr&gt;&quot;; &#125; return tag; &#125; /** * @return the username */ public String getUsername() &#123; return username; &#125; /** * @param username the username to set */ public void setUsername(String username) &#123; System.out.println(username); this.username = username; &#125;&#125; NetBean项目工程文件：链接: http://pan.baidu.com/s/1gdvwzrd 密码: 84ru项目需自行添加mysql的connector Java库","tags":[{"name":"javaee","slug":"javaee","permalink":"http://www.imsry.cn/tags/javaee/"},{"name":"netbean","slug":"netbean","permalink":"http://www.imsry.cn/tags/netbean/"},{"name":"web","slug":"web","permalink":"http://www.imsry.cn/tags/web/"}]},{"title":"[作业]JavaBean+Jsp简易购物车实现","date":"2015-10-15T11:36:37.000Z","path":"posts/6efe4b6c.html","text":"本次作业要求使用到JavaBean+纯Jsp，带有登陆功能的购物车系统。登陆功能这里就不多讲了，前面的聊天室已经做过，这边直接拷贝就能使用了。另外，本次作业中我加入了BootStrap来做一个小小风格美化。不多说，直接上代码！index.jsp 首页，也是登陆界面 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;% Cookie[] cookies = request.getCookies(); String uname = &quot;&quot;; String upwd = &quot;&quot;; if(cookies!=null)&#123; for(int i=0;i&lt;cookies.length;i++) &#123; Cookie cookie=cookies[i]; if(cookie.getName().equals(&quot;remname&quot;)) &#123; uname = cookie.getValue(); &#125; else if(cookie.getName().equals(&quot;rempwd&quot;)) &#123; upwd = cookie.getValue(); &#125; &#125; &#125;%&gt;&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot;&gt; &lt;title&gt;请登录ShopCartDemo&lt;/title&gt; &lt;link href=&quot;bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;container&quot;&gt; &lt;form class=&quot;form-horizontal&quot; action=&quot;dologin.jsp&quot; method=&quot;post&quot; name=&quot;loginform&quot;&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;label for=&quot;inputusername&quot; class=&quot;col-sm-5 control-label&quot;&gt;用户名&lt;/label&gt; &lt;div class=&quot;col-sm-2&quot;&gt; &lt;input class=&quot;form-control&quot; id=&quot;inputusername&quot; type=&quot;text&quot; name=&quot;username&quot; value=&quot;&lt;%=uname%&gt;&quot; placeholder=&quot;username&quot; /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;label for=&quot;inputpassword&quot; class=&quot;col-sm-5 control-label&quot;&gt;密码&lt;/label&gt; &lt;div class=&quot;col-sm-2&quot;&gt; &lt;input class=&quot;form-control&quot; id=&quot;inputpassword&quot; type=&quot;password&quot; name=&quot;password&quot; value=&quot;&lt;%=upwd%&gt;&quot; placeholder=&quot;password&quot; /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;div class=&quot;col-sm-offset-5 col-sm-2&quot;&gt; &lt;div class=&quot;checkbox&quot;&gt; &lt;label&gt; &lt;input type=&quot;checkbox&quot; name=&quot;remember&quot; value=&quot;true&quot;&gt; 记住我 &lt;/label&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;div class=&quot;col-sm-offset-5 col-sm-2&quot;&gt; &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;登陆&lt;/button&gt; &lt;button type=&quot;reset&quot; class=&quot;btn btn-default&quot;&gt;重置&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; dologin.jsp 登陆信息处理页面 123456789101112131415161718192021222324252627282930313233343536373839404142434445&lt;%-- Document : dologin Created on : 2015-10-9, 11:28:29 Author : Anthony--%&gt;&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%@page import=&quot;java.util.*&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt; &lt;title&gt;正在登录...&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;% String username = request.getParameter(&quot;username&quot;); String password = request.getParameter(&quot;password&quot;); String remember = (String) request.getParameter(&quot;remember&quot;); if(username == null) username=&quot;&quot;; if(password == null) password=&quot;&quot;; if(remember == null) remember = &quot;false&quot;; if(username.equals(&quot;201321092028&quot;)&amp;&amp;password.equals(&quot;123456&quot;) || username.equals(&quot;201321092027&quot;)&amp;&amp;password.equals(&quot;123456&quot;)) &#123; if(remember != null &amp;&amp; remember.equals(&quot;true&quot;)) &#123; Cookie cookie1 = new Cookie(&quot;remname&quot;,username); Cookie cookie2 = new Cookie(&quot;rempwd&quot;,password); cookie1.setMaxAge(60*60*24*5); cookie2.setMaxAge(60*60*24*5); response.addCookie(cookie1); response.addCookie(cookie2); &#125; session.setAttribute(&quot;UserName&quot;,username); session.setAttribute(&quot;IsLogin&quot;,&quot;true&quot;); response.sendRedirect(&quot;goods.jsp&quot;); &#125;else&#123; response.sendRedirect(&quot;index.jsp&quot;); &#125; %&gt; &lt;/body&gt;&lt;/html&gt; goods.jsp 商品列表页面 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;%-- Document : goods Created on : 2015-10-15, 17:11:28 Author : anthony--%&gt;&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot;&gt; &lt;title&gt;商品列表&lt;/title&gt; &lt;link href=&quot;bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;container&quot;&gt;温馨提示：请选购商品并填写所需购买的数量 &lt;form method=&quot;post&quot; action=&quot;order.jsp&quot;&gt; &lt;table class=&quot;table table-hover&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;编号&lt;/th&gt;&lt;th&gt;商品名&lt;/th&gt;&lt;th&gt;单价(元/斤)&lt;/th&gt;&lt;th&gt;购买数量&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt;&lt;td&gt;苹果&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;&lt;input class=&quot;form-control&quot; type=&quot;text&quot; name=&quot;apple&quot; placeholder=&quot;0&quot;/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;2&lt;/td&gt;&lt;td&gt;橘子&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;&lt;input class=&quot;form-control&quot; type=&quot;text&quot; name=&quot;orange&quot; placeholder=&quot;0&quot;/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;3&lt;/td&gt;&lt;td&gt;西瓜&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;&lt;input class=&quot;form-control&quot; type=&quot;text&quot; name=&quot;watermalon&quot; placeholder=&quot;0&quot;/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;4&lt;/td&gt;&lt;td&gt;火龙果&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;&lt;input class=&quot;form-control&quot; type=&quot;text&quot; name=&quot;fires&quot; placeholder=&quot;0&quot;/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;button class=&quot;btn btn-success col-sm-offset-11&quot; type=&quot;submit&quot;&gt;确认订单&lt;/button&gt; &lt;/form&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; order.jsp 订单信息页面 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859&lt;%-- Document : order Created on : 2015-10-15, 18:28:05 Author : anthony--%&gt;&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot;&gt; &lt;title&gt;订单信息&lt;/title&gt; &lt;link href=&quot;bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;jsp:useBean id=&quot;cart&quot; scope=&quot;page&quot; class=&quot;Cart.CountPrice&quot;&gt; &lt;jsp:setProperty name=&quot;cart&quot; property=&quot;n_apple&quot; param=&quot;apple&quot;/&gt; &lt;jsp:setProperty name=&quot;cart&quot; property=&quot;n_orange&quot; param=&quot;orange&quot;/&gt; &lt;jsp:setProperty name=&quot;cart&quot; property=&quot;n_watermalon&quot; param=&quot;watermalon&quot;/&gt; &lt;jsp:setProperty name=&quot;cart&quot; property=&quot;n_fires&quot; param=&quot;fires&quot;/&gt; &lt;div class=&quot;container&quot;&gt;您的订单信息： &lt;table class=&quot;table table-bordered&quot;&gt; &lt;thead&gt; &lt;tr class=&quot;warning&quot;&gt; &lt;th&gt;编号&lt;/th&gt;&lt;th&gt;商品名&lt;/th&gt;&lt;th&gt;单价(元/斤)&lt;/th&gt;&lt;th&gt;数量&lt;/th&gt;&lt;th&gt;价格&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt;&lt;td&gt;苹果&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;&lt;jsp:getProperty name=&quot;cart&quot; property=&quot;n_apple&quot;/&gt;&lt;/td&gt;&lt;td&gt;&lt;jsp:getProperty name=&quot;cart&quot; property=&quot;p_apple&quot;/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;2&lt;/td&gt;&lt;td&gt;橘子&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;&lt;jsp:getProperty name=&quot;cart&quot; property=&quot;n_orange&quot;/&gt;&lt;/td&gt;&lt;td&gt;&lt;jsp:getProperty name=&quot;cart&quot; property=&quot;p_orange&quot;/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;3&lt;/td&gt;&lt;td&gt;西瓜&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;&lt;jsp:getProperty name=&quot;cart&quot; property=&quot;n_watermalon&quot;/&gt;&lt;/td&gt;&lt;td&gt;&lt;jsp:getProperty name=&quot;cart&quot; property=&quot;p_watermalon&quot;/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;4&lt;/td&gt;&lt;td&gt;火龙果&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;&lt;jsp:getProperty name=&quot;cart&quot; property=&quot;n_fires&quot;/&gt;&lt;/td&gt;&lt;td&gt;&lt;jsp:getProperty name=&quot;cart&quot; property=&quot;p_fires&quot;/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;label for=&quot;confirmination&quot; class=&quot;col-sm-1 col-sm-offset-9 control-label text-right&quot;&gt;总价：&lt;jsp:getProperty name=&quot;cart&quot; property=&quot;totalprice&quot;/&gt;元&lt;/label&gt; &lt;div class=&quot;col-sm-2&quot;&gt; &lt;button type=&quot;button&quot; id=&quot;confirmination&quot; class=&quot;btn btn-success&quot;&gt;付款&lt;/button&gt; [&lt;button type=&quot;button&quot; class=&quot;btn btn-danger&quot;&gt;取消&lt;/button&gt;](goods.jsp) &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/jsp:useBean&gt; &lt;/body&gt;&lt;/html&gt; 另外，还需要一个JavaBean CountPrice.java package Cart; /* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. */ /** * * @author anthony */ public class CountPrice { private double n_apple; private double n_orange; private double n_watermalon; private double n_fires; private double p_apple; private double p_orange; private double p_watermalon; private double p_fires; private double totalprice; /** * @return the n_apple */ public double getN_apple() { return n_apple; } /** * @param n_apple the n_apple to set */ public void setN_apple(double n_apple) { this.n_apple = n_apple; this.setP_apple(n_apple*13); } /** * @return the n_orange */ public double getN_orange() { return n_orange; } /** * @param n_orange the n_orange to set */ public void setN_orange(double n_orange) { this.n_orange = n_orange; this.setP_orange(n_orange*8); } /** * @return the n_watermalon */ public double getN_watermalon() { return n_watermalon; } /** * @param n_watermalon the n_watermalon to set */ public void setN_watermalon(double n_watermalon) { this.n_watermalon = n_watermalon; this.setP_watermalon(n_watermalon*2); } /** * @return the n_fires */ public double getN_fires() { return n_fires; } /** * @param n_fires the n_fires to set */ public void setN_fires(double n_fires) { this.n_fires = n_fires; this.setP_fires(n_fires*15); } /** * @return the totalprice */ public double getTotalprice() { this.totalprice = this.getP_apple()+this.getP_fires()+this.getP_orange()+this.getP_watermalon(); return totalprice; } /** * @return the p_apple */ public double getP_apple() { return p_apple; } /** * @return the p_orange */ public double getP_orange() { return p_orange; } /** * @return the p_watermalon */ public double getP_watermalon() { return p_watermalon; } /** * @return the p_fires */ public double getP_fires() { return p_fires; } /** * @param p_apple the p_apple to set */ public void setP_apple(double p_apple) { this.p_apple = p_apple; } /** * @param p_orange the p_orange to set */ public void setP_orange(double p_orange) { this.p_orange = p_orange; } /** * @param p_watermalon the p_watermalon to set */ public void setP_watermalon(double p_watermalon) { this.p_watermalon = p_watermalon; } /** * @param p_fires the p_fires to set */ public void setP_fires(double p_fires) { this.p_fires = p_fires; } } 附上NetBean项目工程：链接: http://pan.baidu.com/s/1o66DrjO 密码: yksy","tags":[{"name":"javaee","slug":"javaee","permalink":"http://www.imsry.cn/tags/javaee/"},{"name":"netbean","slug":"netbean","permalink":"http://www.imsry.cn/tags/netbean/"},{"name":"web","slug":"web","permalink":"http://www.imsry.cn/tags/web/"}]},{"title":"linux下mysql的root密码忘记解决方法","date":"2015-10-13T00:54:10.000Z","path":"posts/d4ca8601.html","text":"1．首先确认服务器出于安全的状态，也就是没有人能够任意地连接MySQL数据库。因为在重新设置MySQL的root密码的期间，MySQL数据库完全出于没有密码保护的状态下，其他的用户也可以任意地登录和修改MySQL的信息。可以采用将MySQL对外的端口封闭，并且停止Apache以及所有的用户进程的方法实现服务器的准安全状态。最安全的状态是到服务器的Console上面操作，并且拔掉网线。2．修改MySQL的登录设置： vi /etc/my.cnf在[mysqld]的段中加上一句：skip-grant-tables例如：[mysqld]datadir=/var/lib/mysqlsocket=/var/lib/mysql/mysql.sockskip-grant-tables保存并且退出vi。3．重新启动mysqld /etc/init.d/mysqld restartStopping MySQL: [ OK ]Starting MySQL: [ OK ]4．登录并修改MySQL的root密码 /usr/bin/mysqlWelcome to the MySQL monitor. Commands end with ; or \\g.Your MySQL connection id is 3 to server version: 3.23.56Type ‘help;’ or ‘\\h’ for help. Type ‘\\c’ to clear the buffer.mysql&gt; USE mysql ;Reading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -ADatabase changedmysql&gt; UPDATE user SET Password = password ( ‘new-password’ ) WHERE User = ‘root’ ;Query OK, 0 rows affected (0.00 sec)Rows matched: 2 Changed: 0 Warnings: 0mysql&gt; flush privileges ;Query OK, 0 rows affected (0.01 sec)mysql&gt; quitBye5．将MySQL的登录设置修改回来 vi /etc/my.cnf将刚才在[mysqld]的段中加上的skip-grant-tables删除保存并且退出vi。6．重新启动mysqld /etc/init.d/mysqld restartStopping MySQL: [ OK ]Starting MySQL: [ OK ]文章转自：http://www.cnblogs.com/allenblogs/archive/2010/08/12/1798247.html","tags":[]},{"title":"各种排序算法介绍","date":"2015-10-08T10:26:59.000Z","path":"posts/f996716f.html","text":"1.直接插入排序算法(Straight Insertion Sort)：基本思想:将一个记录插入到已排序好的有序表中，从而得到一个新，记录数增1的有序表。即：先将序列的第1个记录看成是一个有序的子序列，然后从第2个记录逐个进行插入，直至整个序列有序为止。算法的实现： 1234567891011121314151617181920212223242526272829303132333435363738394041//// main.cpp// Straight Insertion Sort//// Created by anthony on 15-10-8.// Copyright (c) 2015年 anthony. All rights reserved.//#include &lt;iostream&gt;using namespace std;void print(int a[], int n ,int i)&#123; cout&lt;&lt;i &lt;&lt;&quot;:&quot;; for(int j= 0; j&lt;n; j++)&#123; cout&lt;&lt;a[j] &lt;&lt;&quot; &quot;; &#125; cout&lt;&lt;endl;&#125;void InsertSort(int a[], int n)&#123; for(int i= 1; i&lt;n; i++)&#123; if(a[i] &lt; a[i-1])&#123; //若第i个元素大于i-1元素，直接插入。小于的话，移动有序表后插入 int j= i-1; int x = a[i]; //复制为哨兵，即存储待排序元素 a[i] = a[i-1]; //先后移一个元素 while(x &lt; a[j])&#123; //查找在有序表的插入位置 a[j+1] = a[j]; j--; //元素后移 &#125; a[j+1] = x; //插入到正确位置 &#125; print(a,n,i); //打印每趟排序的结果 &#125;&#125;int main(int argc, const char * argv[]) &#123; int a[8] = &#123;5,6,1,3,2,8,9,7&#125;; InsertSort(a,8); print(a,8,8); return 0;&#125; 运行结果： 1:5 6 1 3 2 8 9 7 2:1 5 6 3 2 8 9 7 3:1 3 5 6 2 8 9 7 4:1 2 3 5 6 8 9 7 5:1 2 3 5 6 8 9 7 6:1 2 3 5 6 8 9 7 7:1 2 3 5 6 7 8 9 8:1 2 3 5 6 7 8 9 Program ended with exit code: 0 时间复杂度：O（n^2）. 2.选择排序—简单选择排序（Simple Selection Sort）: 基本思想：&gt;在要排序的一组数中，选出最小（或者最大）的一个数与第1个位置的数交换；然后在剩下的数当中再找最小（或者最大）的与第2个位置的数交换，依次类推，直到第n-1个元素（倒数第二个数）和第n个元素（最后一个数）比较为止。 操作方法： 第一趟，从n 个记录中找出关键码最小的记录与第一个记录交换； 第二趟，从第二个记录开始的n-1 个记录中再选出关键码最小的记录与第二个记录交换； 以此类推….. 第i 趟，则从第i 个记录开始的n-i+1 个记录中选出关键码最小的记录与第i 个记录交换，直到整个序列按关键码有序。 算法的实现： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758//// main.cpp// Simple Selection Sort//// Created by anthony on 15-10-8.// Copyright (c) 2015年 anthony. All rights reserved.//#include &lt;iostream&gt;using namespace std;void print(int a[], int n ,int i)&#123; cout&lt;&lt;&quot;第&quot;&lt;&lt;i+1 &lt;&lt;&quot;趟 : &quot;; for(int j= 0; j&lt;8; j++)&#123; cout&lt;&lt;a[j] &lt;&lt;&quot; &quot;; &#125; cout&lt;&lt;endl;&#125;/** * 数组的最小值 * * @return int 数组的键值 */int SelectMinKey(int a[], int n, int i)&#123; int k = i; for(int j=i+1 ;j&lt; n; ++j) &#123; if(a[k] &gt; a[j]) k = j; &#125; return k;&#125;/** * 选择排序 * */void selectSort(int a[], int n)&#123; int key, tmp; for(int i = 0; i&lt; n; ++i) &#123; key = SelectMinKey(a, n,i); //选择最小的元素 if(key != i)&#123; tmp = a[i]; a[i] = a[key]; a[key] = tmp; //最小元素与第i位置元素互换 &#125; print(a, n , i); &#125;&#125;int main(int argc, const char * argv[]) &#123; int a[8] = &#123;5,6,1,3,2,8,9,7&#125;; cout&lt;&lt;&quot;初始值：&quot;; for(int j= 0; j&lt;8; j++)&#123; cout&lt;&lt;a[j] &lt;&lt;&quot; &quot;; &#125; cout&lt;&lt;endl&lt;&lt;endl; selectSort(a, 8); print(a,8,8); return 0;&#125; 运行结果：初始值：5 6 1 3 2 8 9 7 第1趟 : 1 6 5 3 2 8 9 7第2趟 : 1 2 5 3 6 8 9 7第3趟 : 1 2 3 5 6 8 9 7第4趟 : 1 2 3 5 6 8 9 7第5趟 : 1 2 3 5 6 8 9 7第6趟 : 1 2 3 5 6 7 9 8第7趟 : 1 2 3 5 6 7 8 9第8趟 : 1 2 3 5 6 7 8 9第9趟 : 1 2 3 5 6 7 8 9Program ended with exit code: 0 &nbsp;简单选择排序的改进——二元选择排序 简单选择排序，每趟循环只能确定一个元素排序后的定位。我们可以考虑改进为每趟循环确定两个元素（当前趟最大和最小记录）的位置,从而减少排序所需的循环次数。改进后对n个数据进行排序，最多只需进行[n/2]趟循环即可。具体实现如下： 12345678910111213141516171819void SelectSort(int r[],int n) &#123; int i ,j , min ,max, tmp; for (i=1 ;i &lt;= n/2;i++) &#123; // 做不超过n/2趟选择排序 min = i; max = i ; //分别记录最大和最小关键字记录位置 for (j= i+1; j&lt;= n-i; j++) &#123; if (r[j] &gt; r[max]) &#123; max = j ; continue ; &#125; if (r[j]&lt; r[min]) &#123; min = j ; &#125; &#125; //该交换操作还可分情况讨论以提高效率 tmp = r[i-1]; r[i-1] = r[min]; r[min] = tmp; tmp = r[n-i]; r[n-i] = r[max]; r[max] = tmp; &#125;&#125; 3.交换排序—冒泡排序（Bubble Sort）:基本思想：在要排序的一组数中，对当前还未排好序的范围内的全部数，自上而下对相邻的两个数依次进行比较和调整，让较大的数往下沉，较小的往上冒。即：每当两相邻的数比较后发现它们的排序与排序要求相反时，就将它们互换。算法的实现： 12345678910void bubbleSort(int a[], int n)&#123; for(int i =0 ; i&lt; n-1; ++i) &#123; for(int j = 0; j &lt; n-i-1; ++j) &#123; if(a[j] &gt; a[j+1]) &#123; int tmp = a[j] ; a[j] = a[j+1] ; a[j+1] = tmp; &#125; &#125; &#125;&#125; 冒泡排序算法的改进对冒泡排序常见的改进方法是加入一标志性变量exchange，用于标志某一趟排序过程中是否有数据交换，如果进行某一趟排序时并没有进行数据交换，则说明数据已经按要求排列好，可立即结束排序，避免不必要的比较过程。本文再提供以下两种改进算法： 1．设置一标志性变量pos,用于记录每趟排序中最后一次进行交换的位置。由于pos位置之后的记录均已交换到位,故在进行下一趟排序时只要扫描到pos位置即可。 改进后算法如下: 123456789101112void Bubble_1 ( int r[], int n) &#123; int i= n -1; //初始时,最后位置保持不变 while ( i&gt; 0) &#123; int pos= 0; //每趟开始时,无记录交换 for (int j= 0; j&lt; i; j++) if (r[j]&gt; r[j+1]) &#123; pos= j; //记录交换的位置 int tmp = r[j]; r[j]=r[j+1];r[j+1]=tmp; &#125; i= pos; //为下一趟排序作准备 &#125;&#125; 2．传统冒泡排序中每一趟排序操作只能找到一个最大值或最小值,我们考虑利用在每趟排序中进行正向和反向两遍冒泡的方法一次可以得到两个最终值(最大者和最小者) , 从而使排序趟数几乎减少了一半。 改进后的算法实现为: 1234567891011121314151617void Bubble_2 ( int r[], int n)&#123; int low = 0; int high= n -1; //设置变量的初始值 int tmp,j; while (low &lt; high) &#123; for (j= low; j&lt; high; ++j) //正向冒泡,找到最大者 if (r[j]&gt; r[j+1]) &#123; tmp = r[j]; r[j]=r[j+1];r[j+1]=tmp; &#125; --high; //修改high值, 前移一位 for ( j=high; j&gt;low; --j) //反向冒泡,找到最小者 if (r[j]&lt;r[j-1]) &#123; tmp = r[j]; r[j]=r[j-1];r[j-1]=tmp; &#125; ++low; //修改low值,后移一位 &#125;&#125; 4.交换排序—快速排序（Quick Sort）基本思想：1）选择一个基准元素,通常选择第一个元素或者最后一个元素,2）通过一趟排序讲待排序的记录分割成独立的两部分，其中一部分记录的元素值均比基准元素值小。另一部分记录的 元素值比基准值大。3）此时基准元素在其排好序后的正确位置4）然后分别对这两部分记录用同样的方法继续进行排序，直到整个序列有序。算法的实现： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354//// main.cpp// Quick Sort//// Created by anthony on 15-10-8.// Copyright (c) 2015年 anthony. All rights reserved.//#include &lt;iostream&gt;using namespace std;void print(int a[], int n)&#123; for(int j= 0; j&lt;n; j++)&#123; cout&lt;&lt;a[j] &lt;&lt;&quot; &quot;; &#125; cout&lt;&lt;endl;&#125;void swap(int *a, int *b)&#123; int tmp = *a; *a = *b; *b = tmp;&#125;int partition(int a[], int low, int high)&#123; int privotKey = a[low]; //基准元素 while(low &lt; high)&#123; //从表的两端交替地向中间扫描 while(low &lt; high &amp;&amp; a[high] &gt;= privotKey) --high; //从high 所指位置向前搜索，至多到low+1 位置。将比基准元素小的交换到低端 swap(&amp;a[low], &amp;a[high]); while(low &lt; high &amp;&amp; a[low] &lt;= privotKey ) ++low; swap(&amp;a[low], &amp;a[high]); &#125; print(a,10); return low;&#125;void quickSort(int a[], int low, int high)&#123; if(low &lt; high)&#123; int privotLoc = partition(a, low, high); //将表一分为二 quickSort(a, low, privotLoc -1); //递归对低子表递归排序 quickSort(a, privotLoc + 1, high); //递归对高子表递归排序 &#125;&#125;int main()&#123; int a[10] = &#123;3,1,5,7,2,4,9,6,10,8&#125;; cout&lt;&lt;&quot;初始值：&quot;; print(a,10); quickSort(a,0,9); cout&lt;&lt;&quot;结果：&quot;; print(a,10); return 0;&#125; 分析：快速排序是通常被认为在同数量级（O(nlog2n)）的排序方法中平均性能最好的。但若初始序列按关键码有序或基本有序时，快排序反而蜕化为冒泡排序。为改进之，通常以“三者取中法”来选取基准记录，即将排序区间的两个端点与中点三个记录关键码居中的调整为支点记录。快速排序是一个不稳定的排序方法。 快速排序的改进在本改进算法中,只对长度大于k的子序列递归调用快速排序,让原序列基本有序，然后再对整个基本有序序列用插入排序算法排序。实践证明，改进后的算法时间复杂度有所降低，且当k取值为 8 左右时,改进算法的性能最佳。算法思想如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768//// main.cpp// Straight Insertion Sort//// Created by anthony on 15-10-8.// Copyright (c) 2015年 anthony. All rights reserved.//#include &lt;iostream&gt;using namespace std;void print(int a[], int n)&#123; for(int j= 0; j&lt;n; j++)&#123; cout&lt;&lt;a[j] &lt;&lt;&quot; &quot;; &#125; cout&lt;&lt;endl;&#125;void swap(int *a, int *b)&#123; int tmp = *a; *a = *b; *b = tmp;&#125;int partition(int a[], int low, int high)&#123; int privotKey = a[low]; //基准元素 while(low &lt; high)&#123; //从表的两端交替地向中间扫描 while(low &lt; high &amp;&amp; a[high] &gt;= privotKey) --high; //从high 所指位置向前搜索，至多到low+1 位置。将比基准元素小的交换到低端 swap(&amp;a[low], &amp;a[high]); while(low &lt; high &amp;&amp; a[low] &lt;= privotKey ) ++low; swap(&amp;a[low], &amp;a[high]); &#125; print(a,10); return low;&#125;void qsort_improve(int r[ ],int low,int high, int k)&#123; if( high -low &gt; k ) &#123; //长度大于k时递归, k为指定的数 int pivot = partition(r, low, high); // 调用的Partition算法保持不变 qsort_improve(r, low, pivot - 1,k); qsort_improve(r, pivot + 1, high,k); &#125;&#125;void quickSort(int r[], int n, int k)&#123; qsort_improve(r,0,n,k);//先调用改进算法Qsort使之基本有序 //再用插入排序对基本有序序列排序 for(int i=1; i&lt;=n;i ++)&#123; int tmp = r[i]; int j=i-1; while(tmp &lt; r[j])&#123; r[j+1]=r[j]; j=j-1; &#125; r[j+1] = tmp; &#125;&#125;int main()&#123; int a[10] = &#123;3,1,5,7,2,4,9,6,10,8&#125;; cout&lt;&lt;&quot;初始值：&quot;; print(a,10); quickSort(a,9,4); cout&lt;&lt;&quot;结果：&quot;; print(a,10); return 0;&#125; 还有更多的算法，这里就不写那么多了，熟记基本的算法应付简单的程序还是可以的，重要的是学会运用其中的思想。","tags":[]},{"title":"[作业]Servlet简易聊天室","date":"2015-09-28T09:08:55.000Z","path":"posts/9c7a95bd.html","text":"简单例子-Servlet聊天室，所用工具：NetBeans IDE(配备GlassFish)本次例子重在思路，页面未做任何美化。最后结果展示：http://demo.dshui.wang/tomcat/First_chat_room/首先,需要一个登陆页面。Login.jsp1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;% Cookie[] cookies = request.getCookies(); String uname = &quot;&quot;; String upwd = &quot;&quot;; if(cookies!=null)&#123; for(int i=0;i&lt;cookies.length;i++) &#123; Cookie cookie=cookies[i]; if(cookie.getName().equals(&quot;remname&quot;)) &#123; uname = cookie.getValue(); &#125; else if(cookie.getName().equals(&quot;rempwd&quot;)) &#123; upwd = cookie.getValue(); &#125; &#125; &#125;//上面代码用来判断用户是否曾保存过登陆信息%&gt;&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt;牛逼的登陆界面&lt;/title&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt; &lt;form action=&quot;Main&quot; method=&quot;post&quot; name=&quot;loginform&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;td&gt;用户名：&lt;/td&gt; &lt;td&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot; value=&quot;&lt;%=uname%&gt;&quot; /&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;密码：&lt;/td&gt; &lt;td&gt; &lt;input type=&quot;password&quot; name=&quot;password&quot; value=&quot;&lt;%=upwd%&gt;&quot; /&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=&quot;2&quot; style=&quot;text-align: right;&quot;&gt; 记住信息&lt;input name=&quot;remember&quot; type=&quot;checkbox&quot; value=&quot;true&quot; /&gt; &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;登录&quot;/&gt; &lt;input type=&quot;reset&quot; name=&quot;&quot; value=&quot;重置&quot;/&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/form&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 新建一个用来处理登录信息的Servlet: Main.java 所有的处理都在DoPost()完成 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125/* * To change this template, choose Tools | Templates * and open the template in the editor. */package User;import java.io.IOException;import java.io.PrintWriter;import javax.servlet.ServletException;import javax.servlet.http.Cookie;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;/** * * @author Administrator */public class Main extends HttpServlet &#123; /** * Processes requests for both HTTP * `GET` and * `POST` methods. * * @param request servlet request * @param response servlet response * @throws ServletException if a servlet-specific error occurs * @throws IOException if an I/O error occurs */ protected void processRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; response.setContentType(&quot;text/html;charset=UTF-8&quot;); PrintWriter out = response.getWriter(); try &#123; /* TODO output your page here. You may use following sample code. */ &#125; finally &#123; out.close(); &#125; &#125; // &lt;editor-fold defaultstate=&quot;collapsed&quot; desc=&quot;HttpServlet methods. Click on the + sign on the left to edit the code.&quot;&gt; /** * Handles the HTTP * `GET` method. * * @param request servlet request * @param response servlet response * @throws ServletException if a servlet-specific error occurs * @throws IOException if an I/O error occurs */ @Override protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; processRequest(request, response); &#125; /** * Handles the HTTP * `POST` method. * * @param request servlet request * @param response servlet response * @throws ServletException if a servlet-specific error occurs * @throws IOException if an I/O error occurs */ @Override protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; //processRequest(request, response); String username,password,remember; HttpSession session = request.getSession(true); username = (String) request.getParameter(&quot;username&quot;); password = (String) request.getParameter(&quot;password&quot;); remember = (String) request.getParameter(&quot;remember&quot;); System.out.println(&quot;remember:&quot;+remember); System.out.println(username); System.out.println(password); if(username != null &amp;&amp; username.equals(&quot;201321092028&quot;) &amp;&amp; password.equals(&quot;123456&quot;)) &#123; if(remember != null &amp;&amp; remember.equals(&quot;true&quot;)) &#123; Cookie cookie1 = new Cookie(&quot;remname&quot;,username); Cookie cookie2 = new Cookie(&quot;rempwd&quot;,password); cookie1.setMaxAge(60*60*24*5); cookie2.setMaxAge(60*60*24*5); response.addCookie(cookie1); response.addCookie(cookie2); &#125; session.setAttribute(&quot;UserName&quot;,username); session.setAttribute(&quot;IsLogin&quot;,&quot;true&quot;); response.sendRedirect(&quot;LoginSuccess.jsp&quot;); &#125;else if(username != null &amp;&amp; username.equals(&quot;201321092027&quot;) &amp;&amp; password.equals(&quot;123456&quot;)) &#123; if(remember.equals(&quot;true&quot;)) &#123; Cookie cookie1 = new Cookie(&quot;remname&quot;,username); Cookie cookie2 = new Cookie(&quot;rempwd&quot;,password); cookie1.setMaxAge(60*60*24*5); cookie2.setMaxAge(60*60*24*5); response.addCookie(cookie1); response.addCookie(cookie2); &#125; session.setAttribute(&quot;UserName&quot;,username); session.setAttribute(&quot;IsLogin&quot;,&quot;true&quot;); response.sendRedirect(&quot;LoginSuccess.jsp&quot;); &#125; else &#123; session.setAttribute(&quot;IsLogin&quot;,&quot;false&quot;); response.sendRedirect(&quot;LoginFail.jsp&quot;); &#125; &#125; /** * Returns a short description of the servlet. * * @return a String containing servlet description */ @Override public String getServletInfo() &#123; return &quot;Short description&quot;; &#125;// &lt;/editor-fold&gt;&#125; 如果登录失败,跳转到LoginFail.jsp123456789101112&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt; &lt;meta http-equiv=&quot;refresh&quot; content =&quot;3;url=Login.jsp&quot;&gt; &lt;title&gt;请告诉他,登录失败了&lt;/title&gt; &lt;/head&gt; &lt;body&gt; **嗨,登陆失败了哟,3秒后跳转到登录页重新登陆哟! [点击此处直接跳转](Login.html)** &lt;/body&gt;&lt;/html&gt; 登录成功，则跳转到FrameSet窗口框架 LoginSuccess.jsp12345678910111213141516171819202122232425&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;% session = request.getSession(true); String username = &quot;&quot;; if(session.getAttribute(&quot;UserName&quot;) != null) &#123; username = session.getAttribute(&quot;UserName&quot;).toString(); &#125; if(username != null &amp;&amp; !username.equals(&quot;&quot;)) &#123; if(!session.getAttribute(&quot;IsLogin&quot;).equals(&quot;true&quot;)) &#123;System.out.println(session.getAttribute(&quot;IsLogin&quot;).toString()); response.sendRedirect(&quot;Login.jsp&quot;); &#125; &#125;else&#123; response.sendRedirect(&quot;Login.jsp&quot;); &#125; %&gt;&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;frameset rows=&quot;50%,25%&quot;&gt; &lt;frame name=&quot;message&quot; src=&quot;messagebox&quot; /&gt; &lt;frame name=&quot;uinput&quot; src=&quot;userinput.jsp&quot;/&gt; &lt;/frameset&gt;&lt;/html&gt; 上面的Frame加载了两个页面，一个是用来展示Messagebox聊天记录的，一个是用户的输入框Messagebox.Java123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128/* * To change this template, choose Tools | Templates * and open the template in the editor. */package User;import java.io.IOException;import java.io.PrintWriter;import javax.servlet.ServletException;import javax.servlet.http.Cookie;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;/** * * @author Administrator */public class messagebox extends HttpServlet &#123; /** * Processes requests for both HTTP `GET` and `POST` * methods. * * @param request servlet request * @param response servlet response * @throws ServletException if a servlet-specific error occurs * @throws IOException if an I/O error occurs */ protected void processRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; response.setContentType(&quot;text/html;charset=UTF-8&quot;); request.setCharacterEncoding(&quot;UTF-8&quot;); PrintWriter out = response.getWriter(); try &#123; /* TODO output your page here. You may use following sample code. */ HttpSession session = request.getSession(true); String username = &quot;&quot;; if(session.getAttribute(&quot;UserName&quot;) != null) &#123; username = session.getAttribute(&quot;UserName&quot;).toString(); &#125; if(username != null &amp;&amp; !username.equals(&quot;&quot;)) &#123; if(!session.getAttribute(&quot;IsLogin&quot;).equals(&quot;true&quot;)) &#123;System.out.println(session.getAttribute(&quot;IsLogin&quot;).toString()); response.sendRedirect(&quot;Login.jsp&quot;); //request.getRequestDispatcher(&quot;/Login.html&quot;).forward(request, response); &#125; &#125;else&#123; response.sendRedirect(&quot;Login.jsp&quot;); &#125; String words = (String) getServletConfig().getServletContext().getAttribute(&quot;Words&quot;); String messages = &quot;&quot;; if(request.getParameter(&quot;usermessages&quot;) != null) &#123; messages = request.getParameter(&quot;usermessages&quot;); &#125; if (words == null) &#123; words = &quot;系统提示：可以聊天\\n&quot;; &#125; else if(!messages.equals(&quot;&quot;))&#123; words = (String) getServletConfig().getServletContext().getAttribute(&quot;Words&quot;) + username + &quot; 说：&quot;+messages + &quot;\\n&quot;; &#125; getServletConfig().getServletContext().setAttribute(&quot;Words&quot;, words); String temp = (String) getServletConfig().getServletContext().getAttribute(&quot;online&quot;); if(temp==null)temp=&quot;0&quot;; out.println(&quot;&lt;html&gt;&quot;); out.println(&quot;&lt;head&gt;&quot;); out.println(&quot;&lt;title&gt;Servlet messagebox&lt;/title&gt;&quot;); out.println(&quot;&lt;meta http-equiv=\\&quot;refresh\\&quot; content =\\&quot;2;url=messagebox\\&quot;&gt;&quot;); out.println(&quot;&lt;/head&gt;&quot;); out.println(&quot;&lt;body&gt;&quot;); out.println(&quot;当前在线：&quot;); out.println(temp); out.println(&quot;人&quot;); out.println(&quot;&lt;textarea name=\\&quot;messagebox\\&quot; cols=\\&quot;100\\&quot; words=\\&quot;400\\&quot; style=\\&quot;height:450px;\\&quot;&gt;&quot;); out.println(words); out.println(&quot;&lt;/textarea&gt;&quot;); out.println(&quot;&lt;/body&gt;&quot;); out.println(&quot;&lt;/html&gt;&quot;); &#125; finally &#123; out.close(); &#125; &#125; // &lt;editor-fold defaultstate=&quot;collapsed&quot; desc=&quot;HttpServlet methods. Click on the + sign on the left to edit the code.&quot;&gt; /** * Handles the HTTP `GET` method. * * @param request servlet request * @param response servlet response * @throws ServletException if a servlet-specific error occurs * @throws IOException if an I/O error occurs */ @Override protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; processRequest(request, response); &#125; /** * Handles the HTTP `POST` method. * * @param request servlet request * @param response servlet response * @throws ServletException if a servlet-specific error occurs * @throws IOException if an I/O error occurs */ @Override protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; processRequest(request, response); &#125; /** * Returns a short description of the servlet. * * @return a String containing servlet description */ @Override public String getServletInfo() &#123; return &quot;Short description&quot;; &#125;// &lt;/editor-fold&gt;&#125; 用户填写框：userinput.jsp123456789101112131415161718192021222324252627282930313233343536373839404142434445&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;% session = request.getSession(true);%&gt;&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt; &lt;title&gt;输入框&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;table&gt; &lt;tr&gt; &lt;td&gt; &lt;label&gt;&lt;%= session.getAttribute(&quot;UserName&quot;)%&gt; &lt;/label&gt; [退出登陆](logout.jsp) &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;form id=&quot;fm&quot; action=&quot;messagebox&quot; method=&quot;post&quot; target=&quot;message&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;td&gt; &lt;textarea name=&quot;usermessages&quot; cols=&quot;50&quot; style=&quot;height:100px;&quot;&gt;&lt;/textarea&gt; &lt;/td&gt; &lt;td&gt; &lt;input type=&quot;button&quot; id=&quot;submitt&quot; onclick=&quot;cleart()&quot; value=&quot;发送&quot;/&gt; &lt;input type=&quot;reset&quot; id=&quot;resett&quot; value=&quot;清空输入&quot;/&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/form&gt; &lt;/body&gt; &lt;script&gt; function submit(callback)&#123; document.getElementById(&quot;fm&quot;).submit(); callback(); &#125; function reset()&#123; document.getElementById(&quot;fm&quot;).reset(); &#125; function cleart()&#123; //document.getElementById(&quot;resett&quot;).click(); submit(reset); &#125; &lt;/script&gt;&lt;/html&gt; 我们还需要一个退出登录的功能：Loginout.jsp 1234567891011121314151617181920&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;% session = request.getSession(true); session.removeAttribute(&quot;UserName&quot;); session.removeAttribute(&quot;IsLogin&quot;);%&gt;&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt; &lt;meta http-equiv=&quot;refresh&quot; content =&quot;2;url=LoginSuccess.jsp&quot;&gt; &lt;title&gt;Logout&lt;/title&gt; &lt;/head&gt; &lt;body&gt;# 成功退出! &lt;/body&gt; &lt;/html&gt; 注意了，既然是聊天室的话，也要知道当前有多少人在线吧，这个用监听来实现：SessionListrner.java 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. */package Listener;import javax.servlet.annotation.WebListener;import javax.servlet.http.HttpSessionAttributeListener;import javax.servlet.http.HttpSessionBindingEvent;import javax.servlet.http.HttpSessionEvent;import javax.servlet.http.HttpSessionListener;/** * Web application lifecycle listener. * * @author Anthony */@WebListener()public class SessionListenr implements HttpSessionListener, HttpSessionAttributeListener &#123; @Override public void sessionCreated(HttpSessionEvent se) &#123; &#125; @Override public void sessionDestroyed(HttpSessionEvent se) &#123; &#125; @Override public void attributeAdded(HttpSessionBindingEvent event) &#123; if(event.getName().equals(&quot;UserName&quot;)) &#123; String current = (String) event.getSession().getServletContext().getAttribute(&quot;online&quot;); String info = (String) event.getSession().getServletContext().getAttribute(&quot;Words&quot;); if(info==null)info =&quot;&quot;; if(current == null) current=&quot;0&quot;; int c=Integer.parseInt(current); c++; current = String.valueOf(c); event.getSession().getServletContext().setAttribute(&quot;online&quot;, current); event.getSession().getServletContext().setAttribute(&quot;Words&quot;, info+event.getValue()+&quot; 加入聊天室\\n&quot;); &#125; &#125; @Override public void attributeRemoved(HttpSessionBindingEvent event) &#123; if(event.getName().equals(&quot;UserName&quot;)) &#123; String current = (String) event.getSession().getServletContext().getAttribute(&quot;online&quot;); String info = (String) event.getSession().getServletContext().getAttribute(&quot;Words&quot;); if(info==null)info =&quot;&quot;; if(current==null)current = &quot;0&quot;; int c = Integer.parseInt(current); c--; current = String.valueOf(c); event.getSession().getServletContext().setAttribute(&quot;online&quot;, current); event.getSession().getServletContext().setAttribute(&quot;Words&quot;, info+event.getValue()+&quot; 离开了聊天室\\n&quot;); &#125; &#125; @Override public void attributeReplaced(HttpSessionBindingEvent event) &#123; //throw new UnsupportedOperationException(&quot;Not supported yet.&quot;); //To change body of generated methods, choose Tools | Templates. &#125;&#125; 附上NetBean项目工程：链接: http://pan.baidu.com/s/1qWL2xRm 密码: 22wa","tags":[{"name":"netbean","slug":"netbean","permalink":"http://www.imsry.cn/tags/netbean/"},{"name":"web","slug":"web","permalink":"http://www.imsry.cn/tags/web/"},{"name":"servlet","slug":"servlet","permalink":"http://www.imsry.cn/tags/servlet/"}]},{"title":"Discuz的数据库的迁移","date":"2015-09-26T15:06:48.000Z","path":"posts/7a0a41b.html","text":"如果WEB服务器迁移，除了将论坛所有的文件转移到新的服务器上之外，还需要将数据库一同迁移。文件转移完毕之后，并不能算完成了，因为这里还有数据库的配置没有修改。Discuz论坛，如果需要迁移数据库，那么我们在转移的数据库的所有数据之后，还需要重新配置一下Discuz的配置文件：论坛连接Ucenter的配置：config/config_ucenter.php论坛的配置：config/config_global.phpUcenter的配置：uc_server/data/config.inc.php在这三个文件里面，修改对应的数据库地址、数据库名称、用户名、密码。全部配置完毕之后，保存就可以了。","tags":[]},{"title":"Linux之CentOS 6.7 下无网络? 原来是网卡没启动！","date":"2015-08-26T08:37:12.000Z","path":"posts/3be490a0.html","text":"今天用Vbox安装了CentOS 6.7 准备测试游戏服务器,需要下载一个服务端，使用wget时发现无wget命令，聪明的我马上想到使用yum install wget 来安装一个，谁知道出现了无法连接镜像列表的报错，通过查看ifconfig发现，原来是网卡没有启动，于是查看了资料：1vi /etc/sysconfig/network-scripts/ifcfg-eth0 修改开启自启:1234567DEVICE=eth0HWADDR=00:0C:29:2E:37:F0TYPE=EthernetUUID=69cd9740-184f-49b7-857f-e397e57f265bONBOOT=yes //修改此处NM_CONTROLLED=yes //修改此处BOOTPROTO=dhcp 然后重启网络：123//重启网络/etc/init.d/network restart//查看IP","tags":[]},{"title":"SAMP-LS中心医院围栏+自动门","date":"2015-08-17T02:36:04.000Z","path":"posts/d2295d65.html","text":"下面是围栏的创建，写入main()或者OnGameModeInit()函数即可；123456789101112131415161718192021222324252627CreateObject(966, 1209.32813, -1384.90000, 12.24180, 0.00000, 0.00000, 0.00000);//障碍底座CreateObject(967, 1210.39294, -1384.90000, 12.24560, 0.00000, 0.00000, -90.00000);//看守台CreateObject(970, 1187.95776, -1384.87561, 12.78820, 0.00000, 0.00000, 0.00000);//前面大门围栏CreateObject(970, 1200.26697, -1384.90002, 12.78820, 0.00000, 0.00000, 0.00000);//前面大门围栏CreateObject(970, 1192.11816, -1384.90002, 12.78820, 0.00000, 0.00000, 0.00000);//前面大门围栏CreateObject(970, 1196.20007, -1384.90002, 12.78820, 0.00000, 0.00000, 0.00000);//前面大门围栏CreateObject(1411, 1210.96069, -1383.11963, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(1411, 1210.96069, -1377.84949, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(1411, 1210.96069, -1372.57935, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(1411, 1210.96069, -1367.30921, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(1411, 1210.96069, -1362.03907, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(1411, 1210.96069, -1356.76893, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(1411, 1210.96069, -1351.49879, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(1411, 1210.96069, -1346.22865, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(1411, 1210.96069, -1340.95851, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(1411, 1210.96069, -1335.68837, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(1411, 1210.96069, -1330.41823, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(1411, 1210.96069, -1325.14809, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(1411, 1210.96069, -1319.87795, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(1411, 1210.96069, -1314.60781, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(1411, 1210.96069, -1309.33767, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(1411, 1210.96069, -1304.06753, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(1411, 1210.96069, -1298.79739, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(1411, 1210.96069, -1293.52725, 13.86000, 0.00000, 0.00000, 90.00000);//侧面围栏CreateObject(978, 1206.48462, -1290.66870, 13.21470, 0.00000, 0.00000, 0.00000);//后面障碍CreateObject(978, 1197.15100, -1290.66504, 13.21470, 0.00000, 0.00000, 0.00000);//后面障碍CreateObject(978, 1187.76526, -1290.66870, 13.21470, 0.00000, 0.00000, 0.00000);//后面障碍 新建障碍门变量：12new hospitalgate1;//门关new hospitalgate2;//门开 12//写入OnGameModeInit()函数hospitalgate1 = CreateObject(968, 1209.4478, -1384.9000, 13.0276, 0.00000, -90.00000, 0.00000); 1234567public GateCloseHspt()&#123; DestroyObject( hospitalgate2 ); hospitalgate1 = CreateObject(968, 1209.4478, -1384.9000, 13.0276, 0.00000, -90.00000, 0.00000); lshospital = 0; return 1;&#125; 12345678910111213141516171819202122//此段代码在输入指令/go（开门的指令）相关代码里面加入else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)//医院 &#123; if (IsPlayerInRangeOfPoint(playerid, 15,1209.4478,-1384.9000,12.9476)) &#123; if(lshospital == 1) &#123; SendClientMessage(playerid, COLOR_GREY, &quot;** 医院大门已经打开了&quot;); return 1; &#125; DestroyObject( hospitalgate1 ); hospitalgate2 = CreateObject(968, 1209.4478, -1384.9000, 13.0276, 0.00000, 0.00000, 0.00000); //MoveObject(hospitalgate1,1209.44775,-1385.21558,12.94760,2,0.00000,0.00000,0.0000); SetTimer(&quot;GateCloseHspt&quot;, 6000, 0); SendClientMessage(playerid, COLOR_BLUE,&quot;医院门打开了并将在6秒后关闭.&quot;); format(string, sizeof(string), &quot;* %s 打开了 医院大门.&quot;, sendername); ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5); lshospital = 1; &#125; else &#123; SendClientMessage(playerid, COLOR_GREY,&quot;* 你附近没有可以打开的门！.&quot;); return 1; &#125; &#125;","tags":[{"name":"samp","slug":"samp","permalink":"http://www.imsry.cn/tags/samp/"}]},{"title":"SAMP-地图-新鞋停车场围栏Obj","date":"2015-07-28T06:59:27.000Z","path":"posts/c8c99f10.html","text":"下面是围栏的创建，写入OnGameModeInit()函数即可；123456789101112131415161718192021222324252627 CreateObject(985, 1407.17517, -2267.35474, 12.53770, 0.00000, 0.00000, 180.00000);CreateObject(985, 1415.00610, -2267.35474, 12.53770, 0.00000, 0.00000, 180.00000);CreateObject(985, 1399.33862, -2267.35474, 12.53770, 0.00000, 0.00000, 180.00000);CreateObject(985, 1399.33862, -2267.35474, 12.53770, 0.00000, 0.00000, 180.00000);CreateObject(985, 1391.50842, -2267.35474, 12.53770, 0.00000, 0.00000, 180.00000);CreateObject(985, 1383.69531, -2267.35474, 12.53770, 0.00000, 0.00000, 180.00000);CreateObject(985, 1371.91162, -2263.42041, 12.53770, 0.00000, 0.00000, 90.00000);CreateObject(985, 1371.91162, -2255.59082, 12.53770, 0.00000, 0.00000, 90.00000);CreateObject(985, 1371.91162, -2247.79932, 12.53770, 0.00000, 0.00000, 90.00000);CreateObject(985, 1371.91162, -2240.01318, 12.53770, 0.00000, 0.00000, 90.00000);CreateObject(985, 1371.91162, -2232.20728, 12.53770, 0.00000, 0.00000, 90.00000);CreateObject(985, 1371.91162, -2224.41846, 12.53770, 0.00000, 0.00000, 90.00000);CreateObject(985, 1371.91162, -2216.63135, 12.53770, 0.00000, 0.00000, 90.00000);CreateObject(985, 1371.91162, -2208.81470, 12.53770, 0.00000, 0.00000, 90.00000);CreateObject(985, 1383.63245, -2204.85791, 12.53770, 0.00000, 0.00000, 0.00000);CreateObject(985, 1391.45520, -2204.85791, 12.53770, 0.00000, 0.00000, 0.00000);CreateObject(985, 1399.27893, -2204.85791, 12.53770, 0.00000, 0.00000, 0.00000);CreateObject(985, 1407.10815, -2204.85791, 12.53770, 0.00000, 0.00000, 0.00000);CreateObject(985, 1418.95215, -2263.45361, 12.53770, 0.00000, 0.00000, -90.00000);CreateObject(985, 1418.95215, -2255.62061, 12.53770, 0.00000, 0.00000, -90.00000);CreateObject(985, 1418.95215, -2247.78955, 12.53770, 0.00000, 0.00000, -90.00000);CreateObject(985, 1418.95215, -2239.96265, 12.53770, 0.00000, 0.00000, -90.00000);CreateObject(985, 1418.95215, -2224.43652, 12.53770, 0.00000, 0.00000, -90.00000);CreateObject(985, 1418.95215, -2208.79883, 12.53770, 0.00000, 0.00000, -90.00000);CreateObject(985, 1418.95215, -2216.62427, 12.53770, 0.00000, 0.00000, -90.00000);CreateObject(985, 1375.85364, -2267.35474, 12.53770, 0.00000, 0.00000, 180.00000);CreateObject(985, 1375.78442, -2204.85791, 12.53770, 0.00000, 0.00000, 180.00000); 接下来是遥控门的代码：（左右打开的门）12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061/* 首先声明两个门的变量： */new xxgate1;new xxgate2;/* 一个函数： */forward GateCloseXx();/* 初始化动态对象 写在public OnGameModeInit()函数体里面 */ xxgate1 = CreateObject(988,1419.0482,-2235.0635,13.5822,0.00000,0.00000,90.00000); xxgate2 = CreateObject(988,1419.0477,-2229.5605,13.5822,0.00000,0.00000,90.00000);/* 函数代码实例： */public GateCloseXx()&#123; //DestroyDynamicObject( xxgate2 ); MoveObject(xxgate1,1419.0482,-2235.0635,13.5822,2,0.00000,0.00000,90.0000); MoveObject(xxgate2,1419.0477,-2229.5605,13.5822,2,0.00000,0.00000,90.0000); lsxinxie = 0; return 1;&#125;/* 开门指令： */ /* 找到下面的代码 */ if(!strcmp(cmdtext, &quot;/go&quot;, true)) // By CuervO_NegrO &#123; if(IsAPDMember(playerid) || IsAFreecop(playerid)) &#123; ....... &#125; ... ... ... /* 下面是新增的 */ else if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) &#123; if (IsPlayerInRangeOfPoint(playerid, 15,1419.3103,-2232.0325,12.8972)) &#123; if(lsxinxie == 1) &#123; SendClientMessage(playerid, COLOR_GREY, &quot;** 新鞋停车场门已经打开了&quot;); return 1; &#125; MoveObject(xxgate1,1419.0482,-2238.0635,13.5822,2,0.00000,0.00000,90.0000); MoveObject(xxgate2,1419.0477,-2225.5605,13.5822,2,0.00000,0.00000,90.0000); SetTimer(&quot;GateCloseXx&quot;, 6000, 0); SendClientMessage(playerid, COLOR_BLUE,&quot;新鞋停场大门打开了并将在6秒后关闭.&quot;); format(string, sizeof(string), &quot;* %s 打开了 新鞋停车场大门.&quot;, sendername); ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5); lsxinxie = 1; &#125; else &#123; SendClientMessage(playerid, COLOR_GREY,&quot;* 你附近没有可以打开的门 新鞋！.&quot;); return 1; &#125; &#125; /* 上面是新增的 */ /* 下面是已经有的 */ else &#123; SendClientMessage(playerid, COLOR_GREY,&quot;* 你没有开门的遥控器.&quot;); &#125; return 1; &#125;","tags":[{"name":"samp","slug":"samp","permalink":"http://www.imsry.cn/tags/samp/"}]},{"title":"数据库系统的基本概念","date":"2015-07-04T05:08:36.000Z","path":"posts/d6f39244.html","text":"数据（Data）：数据是数据库中存储的基本对象，它有多种表现形式。数据是描述事物的符号记录，这些符号可以是文字、图形、声音和图像等。 数据库（DataBase,DB）：数据库是一个长期存储在计算机内的，有组织的、可共享的、统一管理的数据集合。 数据库管理系统（DataBase Management,DBMS）：数据库管理系统是为数据库的建立、使用和维护而配置的系统软件。 数据定义功能 数据操作功能 数据库的运行管理功能 数据库的建立和维护功能 数据库管理员（DataBase Administrator,DBA）：数据库管理员是负责管理和维护数据库服务器的人员 DBA应参与数据库和应用系统的设计 DBA应参与决定数据库的存储结构和存取策略的工作 DBA要负责定义数据的安全性要求和完整性要求 DBA负责监视和控制数据库系统的运行以及系统的维护和数据恢复工作 DBA负责数据库的改进和重组 数据库系统（Database System,DBS）:数据库系统是指在计算机系统中引入数据库后的系统，一般由数据库、数据库管理系统、应用系统、数据库管理员和用户构成。","tags":[]},{"title":"利用PHP实现QQ的登陆和发送消息","date":"2015-06-17T14:32:46.000Z","path":"posts/576af78f.html","text":"利用CURL抓取3GQQ的网页实现的。这里只是简单实现了功能，可以修改代码实现更多可能。如：定时发送消息、机器人客服等高级功能。展示代码，分两个步骤完成。 第一步：登录获取sid，有sid是发送消息的前提。 //发送方QQ账号和密码 $qq = ''; $pwd = ''; //准备要POST数据 $data = array( 'qq' => $qq, 'pwd' => $pwd, 'bid_code' => '3GQQ', 'toQQchat' => true, 'login_url' => 'http://pt.3g.qq.com/s?aid=nLoginnew&q_from=3GQQ', 'q_from' => '', 'modifySKey' => 0, 'loginType:' => 1, 'aid' => 'nLoginHandle', 'i_p_w' => 'qq|pwd|', ); //开始CURL模拟登录 $ch = curl_init(); curl_setopt($ch,CURLOPT_URL,'http://pt.3g.qq.com/psw3gqqLogin'); curl_setopt($ch,CURLOPT_RETURNTRANSFER,1); curl_setopt($ch,CURLOPT_POST,true); curl_setopt($ch,CURLOPT_POSTFIELDS,http_build_query($data)); $file = curl_exec($ch); curl_close($ch); //分析登录是否成功 preg_match('%sid=(.*?)&%si',$file,$sid); $sid = $sid[1]; if($sid){ echo '登陆成功！'.$sid; }else{ echo '登陆失败！请检查用户名和密码是否正确！'; exit(); } 获取到sid后就可以发送消息了。第二步：发送消息，利用上一步获取到的sid。 $sid=''; $qq = \"909047801\"; $text = \"你好，豆豆！\"; //准备要POST的数据 $data = array( 'u' => $qq, 'saveUrl' => 0, 'do' => 'send', 'on' => 1, 'aid' => '发送', 'msg' => $text, ); //开始CURL模拟发送 $ch = curl_init(); curl_setopt($ch,CURLOPT_URL,'http://q16.3g.qq.com/g/s?sid=' . $sid); curl_setopt($ch,CURLOPT_RETURNTRANSFER,1); curl_setopt($ch,CURLOPT_POST,true); curl_setopt($ch,CURLOPT_POSTFIELDS,http_build_query($data)); $file = curl_exec($ch); curl_close($ch); //分析发送是否成功 preg_match('%(.*?) %si',$file,$callback); $callback = $callback[1]; echo $callback;","tags":[]},{"title":"Mac OS(苹果电脑) 如何清空DNS缓存？","date":"2015-06-14T01:59:54.000Z","path":"posts/24c6b55d.html","text":"很多时候,因为域名的解析长时间未生效,我们无法通过域名访问刚刚解析的主机,最快的方法就是清空本地DNS缓存。我们都知道,在Windows下面,想要清空本地dns缓存只需要执行一条CMD命令： ipconfig/flushdns但是在使用苹果这样高大上的Mac系统的时候,就得用它独特的命令了。不过，不同的MAC系统版本命令也不一样！Tiger或更低版本 Mac OS： sudo lookupd -flushcacheLeopard和Snow Leopard： sudo dscacheutil -flushcache而到了Lion、Mountain Lion和Mavericks： sudo killall -HUP mDNSResponder然后是Yosemite: sudo discoveryutil mdnsflushcache 最后就到了EI Caption： sudo dscacheutil -flushcache另外，提一下，Linux下通用命令: sudo /etc/init.d/dns-clean start","tags":[]},{"title":"安装CentOS7之后win7引导没了,Grub解决","date":"2015-06-09T02:37:03.000Z","path":"posts/57c492d1.html","text":"因为学习linux需要，虚拟机安装又显得太简单，所以在实验室win7电脑上装个windows和linux的双系统，自然采用最新的centos7来试着玩一玩咯！但是没想到装完cnetos7之后，windows进不去了（没有windows的引导），上网查了各种资料，最终确定了修改Grub的配置文件来增加对windows的引导。 首先我们要登陆Centos,打开Grub的配置文件： 执行命令：vi /boot/grub2/grub.cfg找到 ### BEGIN /etc/grub.d/30_os-prober ### 在下面添加： menuentry “Windows 7 Loader On Dev/sda1” { insmod ntfs set root=(hd0,1) chainloader +1}关键代码：set root=(hd0,1) 其中 hd0 表示硬盘，1 表示C盘 ，因为我这里win7是安装在C盘的，所以是1，如果你不是C盘（第一个分区），那么就要需改成你对应的分区号了。","tags":[]},{"title":"作业4-2（带用户的留言板）单页面实现！","date":"2015-05-09T07:14:28.000Z","path":"posts/db7b2e7c.html","text":"演示页面：http://www.dshui.wang/html/board2.php本次作业基于作业4-1完成，部分文件在4-1中给出：所需要的数据表： 1234567CREATE TABLE `msg` ( `id` int(11) unsigned NOT NULL AUTO_INCREMENT, `content` varchar(254) NOT NULL DEFAULT &apos;&apos;, `username` char(10) DEFAULT &apos;&apos;, `stime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8; 1234567CREATE TABLE `user` ( `id` int(11) unsigned NOT NULL AUTO_INCREMENT, `username` char(20) NOT NULL DEFAULT &apos;&apos;, `pwd` varchar(20) NOT NULL DEFAULT &apos;&apos;, `registtime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8; 文件board2.php 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168&lt;?phpinclude &apos;./mysqlconfig.php&apos;;session_start();if($_POST[&apos;do&apos;]==&quot;login&quot;)&#123; $username = $_POST[&apos;username&apos;]; $pwd = $_POST[&apos;passwd&apos;]; $sql = &quot;select * from user where username=&apos;$username&apos; and pwd=&apos;$pwd&apos;;&quot;; $res = mysql_query($sql); $row = mysql_fetch_assoc($res); if ($row[&apos;id&apos;] &lt;&gt; &apos;&apos;)&#123; $_SESSION[&apos;username&apos;] = $row[&apos;username&apos;]; echo &quot;&lt;script&gt;alert(&apos;登陆成功！&apos;)&lt;/script&gt;&quot;; &#125;else&#123; echo &quot;&lt;script&gt;alert(&apos;登录失败！用户名或密码错误！&apos;)&lt;/script&gt;&quot;; &#125; header ( &quot;refresh:0;url=&quot; );&#125;elseif($_POST[&apos;do&apos;]==&quot;registe&quot;)&#123; $rname = $_POST[&apos;rname&apos;]; $rpwd = $_POST[&apos;rpasswd&apos;]; $sql = &quot;insert into user(username,pwd) values (&apos;$rname&apos;,&apos;$rpwd&apos;);&quot;; if(mysql_query($sql))&#123; $_SESSION[&apos;username&apos;] = $rname; echo &quot;&lt;script&gt;alert(&apos;注册成功！已经为您自动登录！&apos;)&lt;/script&gt;&quot;; &#125;else&#123; echo &quot;&lt;script&gt;alert(&apos;注册失败！&apos;)&lt;/script&gt;&quot;; &#125; header ( &quot;refresh:0;url=&quot; );&#125;elseif($_POST[&apos;do&apos;]==&quot;submit&quot;)&#123; $content = $_POST[&apos;content&apos;]; echo $content; $sql = &quot;insert into msg(content,username) values (\\&quot;&#123;$content&#125;\\&quot;,&apos;&quot;.$_SESSION[&apos;username&apos;].&quot;&apos;);&quot;; if(mysql_query($sql))&#123; echo &quot;&lt;script&gt;alert(&apos;留言成功！&apos;)&lt;/script&gt;&quot;; header ( &quot;refresh:0;url=&quot; ); &#125;else&#123; echo &quot;&lt;script&gt;alert(&apos;不知道怎么的，留言失败了。&apos;)&lt;/script&gt;&quot;; &#125;&#125;elseif($_POST[&apos;do&apos;]==&quot;logout&quot;)&#123; session_unset(); session_destroy(); echo &quot;&lt;script&gt;alert(&apos;成功退出登陆！&apos;)&lt;/script&gt;&quot;; header ( &quot;refresh:0;url=&quot; );&#125;$sql = &quot;select * from msg order by id desc;&quot;;$result = mysql_query($sql);?&gt;&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;简易留言板(带用户验证)&lt;/title&gt;&lt;style type=&quot;text/css&quot;&gt;#tab &#123;BORDER-BOTTOM: #c2130e 3px solid; HEIGHT: 60px&#125;#tab p&#123;FLOAT: left; LINE-HEIGHT: 21px; text-align:center&#125;#tab p.hit &#123;BACKGROUND: #dcdcdc; BORDER-LEFT: #f2f2f2 1px solid; WIDTH: 40px; CURSOR: pointer&#125;#tab p.nhit &#123;BACKGROUND: #c2130e; BORDER-LEFT: #f2f2f2 1px solid; WIDTH: 40px; COLOR: #fff&#125;&lt;/style&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#56FF00&quot;&gt; &lt;div style=&quot;margin:0 auto;width:400px;&quot;&gt; &lt;?php if(!isset($_SESSION[&apos;username&apos;]) || $_SESSION[&apos;username&apos;]==&apos;&apos;)&#123;?&gt; &lt;div id=&quot;usertip&quot; class=&quot;login&quot;&gt;注意：只有登陆之后才能进行留言哦！ &lt;div id=&quot;tab&quot;&gt;登陆注册 &lt;/div&gt; &lt;div id=&quot;login&quot;&gt; &lt;form name=&quot;login&quot; method=&quot;post&quot;&gt; &lt;input type=&quot;hidden&quot; name=&quot;do&quot; value=&quot;login&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;td&gt;用户名：&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;username&quot; &gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;密&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;码：&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;password&quot; name=&quot;passwd&quot; &gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td align=&quot;right&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;登陆&quot; /&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/form&gt; &lt;/div&gt; &lt;div id=&quot;reg&quot; style=&quot;display: none;&quot;&gt; &lt;form name=&quot;registe&quot; method=&quot;post&quot;&gt; &lt;input type=&quot;hidden&quot; name=&quot;do&quot; value=&quot;registe&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;td&gt;用户名：&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;rname&quot; &gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;密&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;码：&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;password&quot; name=&quot;rpasswd&quot; &gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td align=&quot;right&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;注册&quot; /&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt; &lt;?php &#125;else&#123;?&gt; &lt;div class=&quot;form&quot;&gt; 当前用户：&lt;?php echo $_SESSION[&apos;username&apos;];?&gt; &lt;form method=&quot;post&quot;&gt; &lt;input type=&quot;hidden&quot; name=&quot;do&quot; value=&quot;logout&quot;&gt; &lt;input type=&quot;submit&quot;value=&quot;退出登录&quot;&gt; &lt;/form&gt; &lt;form method=&quot;post&quot;&gt; &lt;textarea name=&quot;content&quot; cols=&quot;45&quot; rows=&quot;5&quot; style=&quot;width: 400px; height: 88px;&quot;&gt;&lt;/textarea&gt; &lt;input type=&quot;hidden&quot; name=&quot;do&quot; value=&quot;submit&quot;&gt; &lt;div align=&quot;right&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;留言&quot; /&gt;&amp;nbsp;&lt;/div&gt; &lt;/form&gt; &lt;/div&gt; &lt;?php &#125;?&gt; &lt;div class=&quot;msg&quot;&gt; &lt;table border=&quot;1&quot; bordercolor=&quot;#FFFFFF&quot;&gt; &lt;?php while ($rows = mysql_fetch_assoc($result))&#123;?&gt; &lt;tr&gt; &lt;td&gt;&lt;span&gt;&lt;?php echo $rows[&apos;username&apos;];?&gt; &lt;/span&gt;&lt;span class=&quot;datetime&quot;&gt;（&lt;?php echo $rows[&apos;stime&apos;];?&gt;）&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;&lt;?php echo $rows[&apos;content&apos;];?&gt;&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;?php &#125;?&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt;&lt;script&gt;var Tags=document.getElementById(&apos;tab&apos;).getElementsByTagName(&apos;p&apos;); var usertip=document.getElementById(&apos;usertip&apos;).getElementsByTagName(&apos;div&apos;);var len=Tags.length; var flag=0;//修改默认值for(i=0;i&lt;len;i++)&#123;Tags[i].value = i;Tags[i].onmouseover=function()&#123;changeNav(this.value)&#125;; &#125;Tags[flag].className=&apos;nhit&apos;;function changeNav(v)&#123; Tags[flag].className=&apos;hit&apos;; usertip[flag+1].style.display=&quot;none&quot;; flag=v; Tags[v].className=&apos;nhit&apos;; usertip[v+1].style.display=&quot;&quot;;&#125;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","tags":[]},{"title":"作业4-1（简易留言板）","date":"2015-05-09T04:58:47.000Z","path":"posts/aee0563f.html","text":"演示页面：http://www.dshui.wang/html/board1.php首先我们得建立一个数据表用来存放留言信息：（由于之前作业有建立数据库’XSGL’，我们就直接用这个数据库啦） 1234567CREATE TABLE `msg` ( `id` int(11) unsigned NOT NULL AUTO_INCREMENT, `content` varchar(254) NOT NULL DEFAULT &apos;&apos;, `username` char(10) DEFAULT &apos;&apos;, `stime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8; 建立一个mysql的连接文件： mysqlconfig.php 1234567891011&lt;?phperror_reporting(0);header ( &quot;Content-type:text/html;charset=utf-8&quot; );$dbhost = &apos;localhost&apos;;$dbname = &apos;XSGL&apos;;$user = &apos;root&apos;;$pwd = &apos;1234&apos;;$conn = mysql_connect($dbhost,$user,$pwd) or die ( &quot;could not connect mysql&quot; );mysql_select_db ( $dbname, $conn ) or die ( &quot;could not open database&quot; );mysql_query ( &quot;set names utf8;&quot; );?&gt; 新建一个留言本程序：board1.php 1234567891011&lt;?phpinclude &apos;./mysqlconfig.php&apos;;if($_POST[&apos;issubmit&apos;]!=null)&#123; $content = $_POST[&apos;content&apos;]; $sql = &quot;insert into msg(content) values (&apos;&quot;.$content.&quot;&apos;);&quot;; $res = mysql_query($sql); header ( &quot;refresh:0;url=&quot; );&#125;$sql = &quot;select * from msg order by id desc;&quot;;$result = mysql_query($sql);?&gt; 1234567891011121314151617181920212223242526272829&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;简易留言板&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#56FF00&quot;&gt; &lt;div style=&quot;margin:0 auto;width:400px;&quot;&gt; &lt;div class=&quot;form&quot;&gt; &lt;form method=&quot;post&quot;&gt; &lt;textarea name=&quot;content&quot; cols=&quot;45&quot; rows=&quot;5&quot; style=&quot;width: 400px; height: 88px;&quot;&gt;&lt;/textarea&gt; &lt;div align=&quot;right&quot;&gt;&lt;input type=&quot;submit&quot; name=&quot;issubmit&quot; value=&quot;留言&quot; /&gt;&amp;nbsp;&lt;/div&gt; &lt;/form&gt; &lt;/div&gt; &lt;div class=&quot;msg&quot;&gt; &lt;table border=&quot;1&quot; bordercolor=&quot;#FFFFFF&quot;&gt; &lt;?php while ($rows = mysql_fetch_assoc($result))&#123;?&gt; &lt;tr&gt; &lt;td&gt;&lt;span class=&quot;datetime&quot;&gt;（&lt;?php echo $rows[&apos;stime&apos;];?&gt;）&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;&lt;?php echo $rows[&apos;content&apos;];?&gt;&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;?php &#125;?&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;","tags":[]},{"title":"作业3-1（完成MYSQL操作）","date":"2015-05-09T02:40:51.000Z","path":"posts/61718228.html","text":"1234567891011121314151617181920212223242526272829303132333435363738第一步，创建数据库&apos;XSGL&apos;: create database XSGL;第二步，创建学生表&apos;student&apos;: create table student(Sno char(7) NOT NULL,Sname char(10) NOT NULL,Ssex enum(&apos;男&apos;,&apos;女&apos;) NULL,Sage tinyint(4) NULL,Sdept char(20) NULL default &apos;计算机系&apos;,PRIMARY KEY(Sno))engine=innodb default charset=utf8;第三步，插入数据：insert into student(Sno,Sname,Ssex,Sage,Sdept) values (&apos;9512101&apos;,&apos;李勇&apos;,&apos;男&apos;,&apos;19&apos;,&apos;计算机系&apos;),(&apos;9512102&apos;,&apos;刘晨&apos;,&apos;男&apos;,&apos;20&apos;,&apos;计算机系&apos;),(&apos;9512103&apos;,&apos;王敏&apos;,&apos;女&apos;,&apos;20&apos;,&apos;计算机系&apos;),(&apos;9521101&apos;,&apos;张立&apos;,&apos;男&apos;,&apos;22&apos;,&apos;信息系&apos;),(&apos;9521102&apos;,&apos;吴兵&apos;,&apos;女&apos;,&apos;21&apos;,&apos;信息系&apos;),(&apos;9521103&apos;,&apos;张海&apos;,&apos;男&apos;,&apos;20&apos;,&apos;信息系&apos;),(&apos;9531101&apos;,&apos;钱小平&apos;,&apos;女&apos;,&apos;18&apos;,&apos;数学系&apos;),(&apos;9531102&apos;,&apos;王大力&apos;,&apos;男&apos;,&apos;19&apos;,&apos;数学系&apos;);第四步，删除学号为&apos;9531102&apos;的记录：delete from student where Sno=&apos;9531102&apos;;第五步，将计算机系的学生年龄统一加&apos;1&apos;：update student set Sage=Sage+1 where Sdept=&apos;计算机系&apos;;第六步，显示学生的学号和姓名两列,这两列分别起别名为“ID”和“NAME”, 要求只列出查询结果的前 5 条记录：select Sno as ID,Sname as NAME from student limit 5;第七步，查询信息系所有男同学的所有信息：select * from student where Sdept=&apos;信息系&apos; and Ssex=&apos;男&apos;;第八步，查询 student 表所有的数据,按照年龄排序,年龄相同则按照学号降序排序：select * from student order by Sage ASC,Sno DESC;第九步，查询所有姓“王”的同学的基本信息：select * from student where Sname LIKE &apos;王%&apos;;第十步，查询每个院系学生的人数,要求列出院系名称和相应人数：select COUNT(*) as &apos;人数&apos;,Sdept from student GROUP BY Sdept;//如果一张表里面学号有重复的，必须去重！使用下面语句：select COUNT(DISTINCT Sno) as &apos;人数&apos;,Sdept from student GROUP BY Sdept; 到此，作业3-1就做完了！","tags":[]},{"title":"作业2-2（PHP表单数据提交与接收)","date":"2015-05-07T14:44:02.000Z","path":"posts/25b754f7.html","text":"展示页面：http://www.dshui.wang/html/work2.php12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758&lt;?php#Designed By Anthony_Box#Date: 2015-05-07#201321092028 OF SCUEC?&gt;&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;Second Class Work&lt;/title&gt;&lt;/head&gt;&lt;!---#Designed By Anthony_Box#Date: 2015-05-07#201321092028 OF SCUEC---&gt;&lt;body&gt;&lt;?php if ($_POST[&apos;submit&apos;])&#123;?&gt;姓名：&lt;?php echo $_POST[&apos;name&apos;];?&gt;兴趣：&lt;?php echo $_POST[&apos;intrest&apos;];?&gt;性别：&lt;?php echo $_POST[&apos;sex&apos;];?&gt;血型：&lt;?php echo $_POST[&apos;blood&apos;];?&gt;擅长语言：&lt;?php echo implode(&apos;,&apos;,$_POST[&apos;lang&apos;]);?&gt;最擅长的操作系统：&lt;?php echo $_POST[&apos;system&apos;];?&gt;留言：&lt;?php echo $_POST[&apos;note&apos;];?&gt;&lt;input type=&quot;submit&quot; value=&quot;确认&quot;&gt;&lt;?php &#125;else&#123;?&gt;&lt;form method=&quot;post&quot;&gt;&lt;label&gt;姓名：&lt;input type=&quot;text&quot; name=&quot;name&quot; /&gt;&lt;/label&gt;&lt;label&gt;兴趣：&lt;input type=&quot;text&quot; name=&quot;intrest&quot; /&gt;&lt;/label&gt;&lt;label&gt;性别：&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;男&quot; /&gt;男 &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;女&quot;/&gt;女&lt;/label&gt;&lt;label&gt;血型：&lt;input type=&quot;radio&quot; name=&quot;blood&quot; value=&quot;A&quot;/&gt;A &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;blood&quot; value=&quot;B&quot;/&gt;B &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;blood&quot; value=&quot;AB&quot;/&gt;AB &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;blood&quot; value=&quot;O&quot;/&gt;O&lt;/label&gt;请选择您擅长的一种或几种编程设计语言:&lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;lang[]&quot; value=&quot;C++&quot;/&gt;C++ &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;lang[]&quot; value=&quot;PHP&quot;/&gt;PHP &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;lang[]&quot; value=&quot;Shell&quot;/&gt;Shell &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;lang[]&quot; value=&quot;VBscript&quot;/&gt;VBscript&lt;/label&gt;请选择您最擅长的操作系统:&lt;select name=&quot;system&quot;&gt;&lt;option&gt;Linux&lt;/option&gt;&lt;option&gt;Windows&lt;/option&gt;&lt;option&gt;Unix&lt;/option&gt;&lt;/select&gt;如果您有什么建议，敬请留言:&lt;textarea name=&quot;note&quot;&gt;&lt;/textarea&gt;&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;/&gt; &amp;nbsp;&amp;nbsp;&lt;input type=&quot;reset&quot; value=&quot;重置&quot;/&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;&lt;?php &#125;?&gt;","tags":[]},{"title":"作业2-1（PHP程序画n*n正方形矩阵)","date":"2015-05-07T14:36:51.000Z","path":"posts/c36b92d2.html","text":"展示页面：http://www.dshui.wang/html/work1.php可以在地址后面加参数哟！如：http://www.dshui.wang/html/work1.php?colnum=7 试试看吧！最大311234567891011121314151617181920212223&lt;?php#Designed By Anthony_Box#Date: 2015-05-07#201321092028 OF SCUEC$colnum = $_GET[&apos;colnum&apos;]?$_GET[&apos;colnum&apos;]:5;if($colnum&gt;31)&#123; $colnum = 5;&#125;echo &quot;&lt;table border=&apos;1px&apos; bordercolor=&apos;yellow&apos;&gt;\\n\\t&lt;tr&gt;\\n&quot;;for($i=0;$i&lt;$colnum*$colnum;$i++)&#123; if(!($i%$colnum))&#123; echo &quot;\\n\\t&lt;/tr&gt;\\n\\t&lt;tr&gt;\\n&quot;; &#125; if($i%2)&#123; echo &quot;\\t\\t&lt;td style=&apos;text-align: center;&apos;&gt;&quot;; &#125;else&#123; echo &quot;\\t\\t&lt;td style=&apos;background-color: red;text-align: center;&apos;&gt;&quot;; &#125; echo $i+1; echo &quot;&lt;/td&gt;&quot;;&#125;echo &quot;\\n\\t&lt;/tr&gt;&lt;/table&gt;&quot;;?&gt;","tags":[]},{"title":"作业1-2(编写一个HTML静态网页,完整网页包括DIV定位)","date":"2015-05-07T14:32:39.000Z","path":"posts/a3199365.html","text":"展示页面：http://www.dshui.wang/html/firstwork2.html12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;学院概括&lt;/title&gt;&lt;/head&gt;&lt;!---#Designed By Anthony_Box#Date: 2015-05-07#201321092028 OF SCUEC---&gt;&lt;body name=&apos;top&apos; link=&quot;#1F94F0&quot; vlink=&quot;#85B2BE&quot; leftmargin=&quot;10px&quot; topmargin=&quot;20px&quot; style=&quot;width:800px;margin:0 auto;&quot;&gt;[学院简介](#jianjie-content)[现任领导](#leader-content)[组织机构](#dpt-content)&lt;div id=&quot;jianjie-content&quot;&gt;![](images/fish.png) _**&lt;font color=&quot;#00AEFF&quot;&gt;学院简介&lt;/font&gt;**_* * *&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;电子信息工程学院的前身是1981年学校重建后恢复的物理系，是学校历史最悠久 教学单位之一；1988年，物理系更名为电子信息工程系并开始招收电子技术专业本科生；由于那什么的什么的那啥，老师这里给了省略。。。。。。。。。。。&amp;nbsp;&amp;nbsp;计算机科学学院的明天一定会更加美好@哈哈！&lt;/div&gt;&lt;div align=&quot;right&quot;&gt;[返回TOP](#top)&lt;/div&gt;&lt;div id=&quot;leader-content&quot;&gt;![](images/fish.png) _**&lt;font color=&quot;#00AEFF&quot;&gt;现任领导&lt;/font&gt;**_* * *&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;院党委:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;党委书记:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;巴某某（027-67841987）&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;党委副书记:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;张&amp;nbsp;&amp;nbsp;&amp;nbsp;某（027-678428317）&amp;nbsp;&amp;nbsp;院行政:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;院&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;长:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;娃某某（负责全面工作,027-67841987）&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;副院长:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;黑&amp;nbsp;&amp;nbsp;&amp;nbsp;某（027-678428317）&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;副院长:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;白&amp;nbsp;&amp;nbsp;&amp;nbsp;某（027-678428317）&lt;/div&gt;&lt;div align=&quot;right&quot;&gt;[返回TOP](#top)&lt;/div&gt;&lt;div id=&quot;dpt-content&quot;&gt;![](images/fish.png) _**&lt;font color=&quot;#00AEFF&quot;&gt;组织机构&lt;/font&gt;**_* * *&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;教研室:&lt;table border=&quot;1px&quot; bgcolor=&quot;#02B928&quot; width=&quot;500px&quot; style=&quot;text-align:center&quot;&gt; &lt;tr style=&quot;height:50px&quot;&gt; &lt;td width=&quot;50px&quot;&gt;序号&lt;/td&gt;&lt;td width=&quot;100px&quot;&gt;教研室名称&lt;/td&gt;&lt;td width=&quot;90px&quot;&gt;教研室主任&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt;&lt;td&gt;应用电子技术&lt;/td&gt;&lt;td&gt;陈琨&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;2&lt;/td&gt;&lt;td&gt;信号处理&lt;/td&gt;&lt;td&gt;周某&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;3&lt;/td&gt;&lt;td&gt;通信工程&lt;/td&gt;&lt;td&gt;朱某&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;4&lt;/td&gt;&lt;td&gt;计算机&lt;/td&gt;&lt;td&gt;田某某&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;5&lt;/td&gt;&lt;td&gt;光信息科学与技术&lt;/td&gt;&lt;td&gt;钟某某&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;6&lt;/td&gt;&lt;td&gt;电路与系统&lt;/td&gt;&lt;td&gt;朱某某&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;7&lt;/td&gt;&lt;td&gt;大学物理&lt;/td&gt;&lt;td&gt;姚某某&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;8&lt;/td&gt;&lt;td&gt;综合实验室&lt;/td&gt;&lt;td&gt;彭某某（正）伊某某（副）&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;div align=&quot;right&quot;&gt;[返回TOP](#top)&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;height:800px;background-color:#DFDADA&quot;&gt;此处只是为了拉长页面&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;","tags":[]},{"title":"作业1-1(编写一个HTML静态网页，表单)","date":"2015-05-07T14:19:20.000Z","path":"posts/651efec2.html","text":"展示页面：/html/firstwork1.html 1234567891011121314151617181920212223242526272829303132333435&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;First Class Work&lt;/title&gt;&lt;/head&gt;&lt;!---#Designed By Anthony_Box#Date: 2015-05-07#201321092028 OF SCUEC---&gt;&lt;body&gt;&lt;form method=&quot;post&quot;&gt;&lt;label&gt;姓名：&lt;input type=&quot;text&quot; name=&quot;name&quot; /&gt;&lt;/label&gt;&lt;label&gt;兴趣：&lt;input type=&quot;text&quot; name=&quot;intrest&quot; /&gt;&lt;/label&gt;&lt;label&gt;性别：&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;男&quot; /&gt;男 &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;女&quot;/&gt;女&lt;/label&gt;&lt;label&gt;血型：&lt;input type=&quot;radio&quot; name=&quot;blood&quot; value=&quot;A&quot;/&gt;A &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;blood&quot; value=&quot;B&quot;/&gt;B &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;blood&quot; value=&quot;AB&quot;/&gt;AB &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;blood&quot; value=&quot;O&quot;/&gt;O&lt;/label&gt;请选择您擅长的一种或几种编程设计语言:&lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;lang[]&quot; value=&quot;C++&quot;/&gt;C++ &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;lang[]&quot; value=&quot;PHP&quot;/&gt;PHP &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;lang[]&quot; value=&quot;Shell&quot;/&gt;Shell &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;lang[]&quot; value=&quot;VBscript&quot;/&gt;VBscript&lt;/label&gt;请选择您最擅长的操作系统:&lt;select name=&quot;system&quot;&gt;&lt;option&gt;Linux&lt;/option&gt;&lt;option&gt;Windows&lt;/option&gt;&lt;option&gt;Unix&lt;/option&gt;&lt;/select&gt;如果您有什么建议，敬请留言:&lt;textarea name=&quot;note&quot;&gt;&lt;/textarea&gt;&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;/&gt; &amp;nbsp;&amp;nbsp;&lt;input type=&quot;reset&quot; value=&quot;重置&quot;/&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;","tags":[]},{"title":"DEDECMS自定义表单联动类型不可用的解决方法 - ","date":"2015-01-05T13:04:42.000Z","path":"posts/7dc4f555.html","text":"原因是官方模板文件中注释掉了相关选项，修改方式如下： 需要修改两个文件， 第一个：dede/templets/diy_field_edit.htm 124行 官方把 “&lt;option value=&quot;stepselect&quot;&gt;联动类型&lt;/option–&gt;”这句给注释掉了，取消注释。 第 二个：dede/templets/diy_field_add.htm 145 行 官方把“&lt;div&gt;&lt;input type=’radio’ value=&quot;stepselect&quot;&gt;联动类型&lt;/div&gt; ”这句给注释了，取消注释。 改好后，保存就ok了！ 当然，你在添加自定义表单中的字段时，数据类型一定要选择“联动类型”！","tags":[]},{"title":"apache域名跳转法简单完成重定向","date":"2014-12-30T14:46:02.000Z","path":"posts/cc99fffd.html","text":"用.htaccess做域名跳转apache默认是开启.htaccess的。但是为了成功率还是检查一下配置有没有真的支持编码apache的配置文件httpd.conf，把相应的内容修改为： Options FollowSymLinksAllowOverride AllLoadModule rewrite_module modules/mod_rewrite.so 这一行的注释要去掉然后重启动apache服务器。 编辑apahce中web根目录下.htaccess文件（如题没有此文件，则直接新建立一个既可）。 RewriteEngine OnRewriteCond %{HTTP_HOST} ^fandouzi.com [NC]RewriteRule ^(.*) http://www.fandouzi.com/ [R=301,L] 访问fandouzi.com同样会转向到www.fandouzi.com。","tags":[]},{"title":"linux下使用yum安装Apache+php+Mysql+phpMyAdmin [转载]","date":"2014-12-23T13:32:44.000Z","path":"posts/bc861775.html","text":"适用redhat于32位及64位，前提架设好本地源。在这里不再赘述。 1 安装Apache+php+Mysql a、安装Apahce, PHP, Mysql, 以及php连接mysql库组件 yum -y install httpd php mysql mysql-server php-mysql b、安装mysql扩展 yum -y install mysql-connector-odbc mysql-devel libdbi-dbd-mysql 或一次性粘贴安装: yum -y install httpd php mysql mysql-server php-mysql httpd-manual mod_ssl mod_perl mod_auth_mysql php-mcrypt php-gd php-xml php-mbstring php-ldap php-pear php-xmlrpc mysql-connector-odbc mysql-devel libdbi-dbd-mysql c、设置mysql数据库root帐号密码。mysqladmin -u root password ‘newpassword’ [引号内填密码] d、 让mysql数据库更安全mysql -u root -p [此时会要求你输入刚刚设置的密码，输入后回车即可 mysql&gt; DROP DATABASE test; [删除test数据库]mysql&gt; DELETE FROM mysql.user WHERE user = ”; [删除匿名帐户]mysql&gt; FLUSH PRIVILEGES; [重载权限] e、 按照以上的安装方式, 配置出来的默认站点目录为/var/www/html/新建一个php脚本:&lt;?phpphpinfo();?&gt; 2、安装phpMyAdmin进入phpMyAdmin官方下载(不要最新版本，下phpMyAdmin 2.11.9.5就行了,3.1以上需php 5.2以上)，上传到你的网站目录下，然后进行配置。只需几步即可搞定。I. config.sample.inc.php更名为config.inc.php;II. 打开config.inc.php文件，进行以下修改;// $cfg[‘Servers’][$i][‘controluser’] = ‘pma’;// $cfg[‘Servers’][$i][‘controlpass’] = ‘pmapass’;// $cfg[‘Servers’][$i][‘pmadb’] = ‘phpmyadmin’;// $cfg[‘Servers’][$i][‘bookmarktable’] = ‘pma_bookmark’;// $cfg[‘Servers’][$i][‘relation’] = ‘pma_relation’;// $cfg[‘Servers’][$i][‘table_info’] = ‘pma_table_info’;// $cfg[‘Servers’][$i][‘table_coords’] = ‘pma_table_coords’;// $cfg[‘Servers’][$i][‘pdf_pages’] = ‘pma_pdf_pages’;// $cfg[‘Servers’][$i][‘column_info’] = ‘pma_column_info’;// $cfg[‘Servers’][$i][‘history’] = ‘pma_history’;// $cfg[‘Servers’][$i][‘designer_coords’] = ‘pma_designer_coords’; 去掉每行前面的//;II.$cfg[‘blowfish_secret’] = ”; |修改为| $cfg[‘blowfish_secret’] = ‘http’;IV.$cfg[‘Servers’][$i][‘controluser’] = ‘pma’; |把’pma’修改为你的帐号|$cfg[‘Servers’][$i][‘controlpass’] = ‘pmapass’; |把’pmapass设置为你的mysql登录密码|V. $cfg[‘blowfish_secret’] = ”; | 添加短语密码例如：$cfg[‘blowfish_secret’] = ‘onohot’; 3、//安装php的扩展yum -y install php-gd php-xml php-mbstring php-ldap php-pear php-xmlrpc 4、//安装apache扩展 yum -y install httpd-manual mod_ssl mod_perl mod_auth_mysql 5、 配置防火墙添加允许访问HTTP、FTP端口 iptables -I RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 21 -j ACCEPTiptables -I RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT重启iptables: service iptables restart转载于：linux下使用yum安装Apache+php+Mysql+phpMyAdmin - - ITeye技术网站.","tags":[]},{"title":"Linux上vi(vim)编辑器使用教程 - 转载","date":"2014-11-29T15:29:48.000Z","path":"posts/1beb1f62.html","text":"vi(vim)是上Linux非常常用的编辑器，很多Linux发行版都默认安装了vi(vim)。vi(vim)命令繁多但是如果使用灵活之后将会大大提高效率。vi是“visual interface”的缩写，vim是vi IMproved(增强版的vi)。在一般的系统管理维护中vi就够用，如果想使用代码加亮的话可以使用vim。下面vps侦探整理一下vi的使用教程：包含vi的基本介绍、使用模式、文件的打开关闭保存、插入文本或新建行、移动光标、删除、恢复字符或行、搜索等等，算是一篇比较适合新手学习vi的教程。 vi有3个模式：插入模式、命令模式、低行模式。 插入模式：在此模式下可以输入字符，按ESC将回到命令模式。 命令模式：可以移动光标、删除字符等。 低行模式：可以保存文件、退出vi、设置vi、查找等功能(低行模式也可以看作是命令模式里的)。 一、打开文件、保存、关闭文件(vi命令模式下使用) vi filename //打开filename文件 :w //保存文件 :w vpser.net //保存至vpser.net文件 :q //退出编辑器，如果文件已修改请使用下面的命令 :q! //退出编辑器，且不保存 :wq //退出编辑器，且保存文件 二、插入文本或行(vi命令模式下使用，执行下面命令后将进入插入模式，按ESC键可退出插入模式) a //在当前光标位置的右边添加文本 i //在当前光标位置的左边添加文本 A //在当前行的末尾位置添加文本 I //在当前行的开始处添加文本(非空字符的行首) O //在当前行的上面新建一行 o //在当前行的下面新建一行 R //替换(覆盖)当前光标位置及后面的若干文本 J //合并光标所在行及下一行为一行(依然在命令模式) 三、移动光标(vi命令模式下使用) 1、使用上下左右方向键 2、命令模式下：h 向左、j 向下 、k 向上、l 向右。空格键 向右、Backspace 向左、Enter 移动到下一行首、- 移动到上一行首。四、删除、恢复字符或行(vi命令模式下使用) x //删除当前字符 nx //删除从光标开始的n个字符 dd //删除当前行 ndd //向下删除当前行在内的n行 u //撤销上一步操作 U //撤销对当前行的所有操作 五、搜索(vi命令模式下使用) /vpser //向光标下搜索vpser字符串 ?vpser //向光标上搜索vpser字符串 n //向下搜索前一个搜素动作 N //向上搜索前一个搜索动作 六、跳至指定行(vi命令模式下使用) n+ //向下跳n行 n- //向上跳n行 nG //跳到行号为n的行 G //跳至文件的底部 七、设置行号(vi命令模式下使用) :set nu //显示行号 :set nonu //取消显示行号 八、复制、粘贴(vi命令模式下使用) yy //将当前行复制到缓存区，也可以用 \"ayy 复制，\"a 为缓冲区，a也可以替换为a到z的任意字母，可以完成多个复制任务。 nyy //将当前行向下n行复制到缓冲区，也可以用 \"anyy 复制，\"a 为缓冲区，a也可以替换为a到z的任意字母，可以完成多个复制任务。 yw //复制从光标开始到词尾的字符。 nyw //复制从光标开始的n个单词。 y^ //复制从光标到行首的内容。 VPS侦探 y$ //复制从光标到行尾的内容。 p //粘贴剪切板里的内容在光标后，如果使用了前面的自定义缓冲区，建议使用\"ap 进行粘贴。 P //粘贴剪切板里的内容在光标前，如果使用了前面的自定义缓冲区，建议使用\"aP 进行粘贴。 九、替换(vi命令模式下使用) :s/old/new //用new替换行中首次出现的old :s/old/new/g //用new替换行中所有的old :n,m s/old/new/g //用new替换从n到m行里所有的old :%s/old/new/g //用new替换当前文件里所有的old 十、编辑其他文件 :e otherfilename //编辑文件名为otherfilename的文件。 十一、修改文件格式 :set fileformat=unix //将文件修改为unix格式，如win下面的文本文件在linux下会出现^M。 总结：vi(vim)教程虽然有比较多的命令，但是只要勤加练习，相信你会很快的熟练掌握，同时也会给你的工作或学习带来更高的效率。当如果不知道自己处在什么模式时可以按2次Esc键即可回到命令模式，会有最后提醒一点：注意大小写！！！文章来源：Linux上vi(vim)编辑器使用教程 - VPS侦探.","tags":[]},{"title":"MySQL新建用户,授权,删除用户,修改密码 - 转载","date":"2014-11-29T13:17:26.000Z","path":"posts/aa11c9db.html","text":"首先要声明一下：一般情况下，修改MySQL密码，授权，是需要有mysql里的root权限的。 注：本操作是在WIN命令提示符下，phpMyAdmin同样适用。 用户：phplamp 用户数据库：phplampDB 1.新建用户。 //登录MYSQL @>mysql -u root -p @>密码 //创建用户 mysql> insert into mysql.user(Host,User,Password) values(\"localhost\",\"phplamp\",password(\"1234\")); //刷新系统权限表 mysql>flush privileges; 这样就创建了一个名为：phplamp 密码为：1234 的用户。 然后登录一下。 mysql>exit; @>mysql -u phplamp -p @>输入密码 mysql>登录成功 2.为用户授权。 //登录MYSQL（有ROOT权限）。我里我以ROOT身份登录. @>mysql -u root -p @>密码 //首先为用户创建一个数据库(phplampDB) mysql>create database phplampDB; //授权phplamp用户拥有phplamp数据库的所有权限。 >grant all privileges on phplampDB.* to phplamp@localhost identified by '1234'; //刷新系统权限表 mysql>flush privileges; mysql>其它操作 /* 如果想指定部分权限给一用户，可以这样来写: mysql>grant select,update on phplampDB.* to phplamp@localhost identified by '1234'; //刷新系统权限表。 mysql>flush privileges; */ 3.删除用户。 @>mysql -u root -p @>密码 mysql>DELETE FROM user WHERE User=\"phplamp\" and Host=\"localhost\"; mysql>flush privileges; //删除用户的数据库 mysql>drop database phplampDB; 4.修改指定用户密码。 @>mysql -u root -p @>密码 mysql>update mysql.user set password=password('新密码') where User=\"phplamp\" and Host=\"localhost\"; mysql>flush privileges; 转自：MySQL新建用户,授权,删除用户,修改密码 - analyzer - 博客园.","tags":[]},{"title":"linux下允许外网对mysql的访问","date":"2014-11-18T03:48:17.000Z","path":"posts/8db5876f.html","text":"从阿里云镜像市场安装的ubuntu(Apache+Mysql+VsFtp)里面Mysql默认是外网无法访问的，而在实际开发过程中需要对数据库的可视化比对操作，这样我们可以通过本地计算机来事实查改服务器的数据库。 1、修改表,登录mysql数据库,切换到mysql数据库,使用sql语句查看 \"select host,user from user ;\" \\mysql -u root -p \\mysql>use mysql; \\mysql>update user set host = '%' where user ='root'; \\mysql>select host, user from user; \\mysql>flush privileges; （使修改生效，必须执行） 2、授权用户,你想root使用密码从任何主机连接到mysql服务器 \\mysql>GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'admin1234' WITH GRANT OPTION; \\mysql>flush privileges; （使修改生效，必须执行）","tags":[]},{"title":"上传Excel表格写入数据表（上传订单功能）","date":"2014-10-22T05:08:51.000Z","path":"posts/178115be.html","text":"代码包：ExcelToMysql此项功能的实现依赖PHPExcelReader，下载压缩包可得。下面贴出PHP主要实现代码： 123456789101112131415161718192021222324252627282930313233343536&lt;form id=&quot;form1&quot; name=&quot;form1&quot; method=&quot;post&quot; action=&quot;&quot;&gt; &lt;label&gt; &lt;input name=&quot;file&quot; type=&quot;file&quot; id=&quot;file13&quot;/&gt; &lt;input type=&quot;submit&quot; name=&quot;Submit&quot; value=&quot;提交&quot; /&gt; &lt;/label&gt;&lt;/form&gt;&lt;p&gt;&lt;?phprequire_once &apos;reader.php&apos;; $Reader = new Spreadsheet_Excel_Reader(); $Reader-&gt;setOutputEncoding(&apos;gbk&apos;);$conn= mysql_connect(&apos;localhost&apos;,&apos;root&apos;,&apos;root&apos;) or die(&quot;Can not connect to database.&quot;); mysql_query(&quot;set names &apos;gbk&apos;&quot;);//设置编码输出mysql_select_db(&apos;my_db&apos;); //选择数据库if($_POST[&apos;Submit&apos;])&#123;$Reader-&gt;read($_POST[&apos;file&apos;]);for ($i = 2; $i &lt;= $Reader-&gt;sheets[0][&apos;numRows&apos;]; $i++) &#123; //将EXCEL里面从第二行开始写入数据表&apos;my_table&apos;中 $sql = &quot;INSERT INTO my_table VALUES (null,&apos;&quot;.$Reader-&gt;sheets[0][&apos;cells&apos;][$i][1].&quot;&apos;,&apos;&quot;.$Reader-&gt;sheets[0][&apos;cells&apos;][$i][2].&quot;&apos;,&apos;&quot;.$Reader-&gt;sheets[0][&apos;cells&apos;][$i][3].&quot;&apos;,&apos;&quot;.$Reader-&gt;sheets[0][&apos;cells&apos;][$i][4].&quot;&apos;,&apos;&quot;.$Reader-&gt;sheets[0][&apos;cells&apos;][$i][5].&quot;&apos;,&apos;&quot;.$Reader-&gt;sheets[0][&apos;cells&apos;][$i][6].&quot;&apos;,&apos;&quot;.$Reader-&gt;sheets[0][&apos;cells&apos;][$i][7].&quot;&apos;,&apos;&quot;.$Reader-&gt;sheets[0][&apos;cells&apos;][$i][8].&quot;&apos;,&apos;&quot;.$Reader-&gt;sheets[0][&apos;cells&apos;][$i][9].&quot;&apos;)&quot;; $query=mysql_query($sql); if($query) &#123; echo &quot;&lt;script type=\\&quot;text/javascript\\&quot;&gt;&lt;!--alert(&apos;数据已经提交成功&apos;);window.top.location=&apos;a.php&apos;// --&gt;&lt;/script&gt;&quot;; &#125;else&#123; echo &quot;&lt;script type=\\&quot;text/javascript\\&quot;&gt;&lt;!--alert(&apos;数据已经提交失败&apos;);window.top.location=&apos;a.php&apos;// --&gt;&lt;/script&gt;&quot;; &#125;&#125;&#125;?&gt;","tags":[]},{"title":"百度新闻代码（去LOGO方法）- JS实现","date":"2014-09-26T10:35:11.000Z","path":"posts/33921fa9.html","text":"获取代码请到：http://news.baidu.com/newscode.html 按自己的需要获取1234567891011//展现新闻的DIV框架&lt;div id=&quot;news&quot;&gt;&lt;!-- @百度新闻代码 start! --&gt; &lt;style type=text/css&gt; div&#123;font-size:12px;font-family:arial&#125;.baidu&#123;font-size:12px;line-height:20px;font-family:arial&#125; a,a:link&#123;color:#00bbbb;&#125; .baidu span&#123;color:#6f6f6f;font-size:12px&#125; a.more&#123;color:#008000;&#125;a.blk&#123;color:#000;font-weight:bold;&#125; &lt;/style&gt; &lt;script language=&quot;JavaScript&quot; type=&quot;text/JavaScript&quot; src=&quot;http://news.baidu.com/n?cmd=1&amp;class=socianews&amp;pn=1&amp;tn=newsbrofcu&quot;&gt; &lt;/script&gt;&lt;!-- @百度新闻代码 end! --&gt;&lt;/div&gt; 这样不做修改的代码展现出来是带有百度新闻LOGO的，有时候我们不想这个LOGO出来，所以这里来教你们怎么去掉这个LOGO！在页面中加入JS函数：12345678&lt;script type=&quot;text/javascript&quot;&gt; //函数定义（DIV框架ID，第i个子DIV框架） function removebdlogo(obj, i) &#123; a = document.getElementById(obj).getElementsByTagName(&quot;div&quot;); //获取LOGO的DIV节点 a[i].style.display = &quot;none&quot;; //将其设置为隐藏 return false; &#125;&lt;/script&gt; 然后我们在id=”news”的DIV框架外面执行这个函数：12&lt;!-- id=&apos;news&apos;框架下面的第0个DIV框架 --&gt;&lt;script type=&quot;text/javascript&quot; &gt;removebdlogo(&quot;news&quot;,0);&lt;/script&gt; 这样我们展现出来的效果就好多了！ 当然，我们也可以通过修改STYLE来改变一些元素属性，比如字体大小、颜色等等","tags":[]},{"title":"做侧边菜单之弹出二级菜单-position定位不影响其他DIV","date":"2014-09-24T11:48:19.000Z","path":"posts/276126bb.html","text":"常常使用position用于层的绝对定位，比如我们让一个层位于一个层内具体什么位置，为即可使用position:absolute和position:relative实现。 position:absolute；position:relative绝对定位使用通常是父级定义position:relative定位，子级定义position:absolute绝对定位属性，并且子级使用left或right和top或bottom进行绝对定位。 例子：首先是JS实现二级菜单的展现 12345678910111213141516171819202122232425262728&lt;script language=&quot;javascript&quot;&gt; function tab(tag, className, isDisplay) &#123; var list = document.getElementsByTagName(tag); for (var i = 0, len = list.length; i &lt; len; i++) &#123; if (list[i].className == className) &#123; if (isDisplay == 1) &#123; list[i].style.display = &quot;block&quot; &#125; else &#123; list[i].style.display = &quot;none&quot; &#125; &#125; &#125; &#125;&lt;/script&gt;&lt;/pre&gt;页面代码：&lt;pre lang=&quot;html&quot; line=&quot;1&quot; escaped=&quot;true&quot;&gt;&lt;div style=&quot;float:left; position:relative&quot;&gt;##学校&lt;span class=&quot;bianh&quot;&gt;&lt;a herf=&quot;#&quot;&gt;[切换]&lt;/a&gt;&lt;/span&gt;&lt;div style=&quot;position:absolute; left:40px;&quot; onmousemove=&quot;tab(&apos;div&apos;,&apos;selectschool&apos;,1)&quot; onclick=&quot;tab(&apos;div&apos;,&apos;selectschool&apos;,2)&quot;&gt;&lt;a herf=&quot;#&quot;&gt;中南民族大学&lt;/a&gt;&lt;a herf=&quot;#&quot;&gt;XXXX大学&lt;/a&gt; &lt;/div&gt;&lt;/div&gt;","tags":[]},{"title":"删除Mac中所有 .DS_Store 隐藏文件&不再产生.DS_Store文件","date":"2014-09-22T10:10:26.000Z","path":"posts/6c975ddb.html","text":"Mac OS X系统下，几乎绝大部分文件夹中都包含 .DS_Store 隐藏文件，这里保存着针对这个目录的特殊信息和设置配置，例如查看方式，图标大小以及这个目录的一些附属元数据。 在Mac下这些 .DS_Store 文件默认是隐藏的，看不见。不过当将文件转移共享到Windows的时候，那么就是可见的了，并且感觉像是一些垃圾文件一样的存在。 操作方法摘自Macx.cn 和 onmac.net 1.删除系统中所有的.DS_Store文件：(a)、Spotlight搜索“终端”，打开[终端]程序(b)、输入如下代码并回车：sudo find / -name “.DS_Store” -depth -exec rm {} \\;等待个1分钟左右，删除就完成了！ 2.不让系统生成.DS_Store文件：(a)、打开[终端]程序(b)、输入以下代码并回车：(提示需要输入密码就输入 电脑密码)defaults write com.apple.desktopservices DSDontWriteNetworkStores true(c)、sudo cp Library/Preferences/com.apple.desktopservices.plist /Library/Preferences/(d)、sudo chmod 777 /Library/Preferences/com.apple.desktopservices.plist(e)、重新启动计算机。 参考资料：http://forum.onmac.net/archive/index.php/t-334.htmlhttp://www.macx.cn/thread-2053938-1-1.html","tags":[]},{"title":"JS遍历Table的所有单元格内容 （转载）","date":"2014-08-19T08:48:06.000Z","path":"posts/be7cd8d7.html","text":"function GetInfoFromTable(tableid) { var tableInfo = \"\"; var tableObj = document.getElementById(tableid); for (var i = 0; i &lt; tableObj.rows.length; i++) { //遍历Table的所有Row for (var j = 0; j &lt; tableObj.rows[i].cells.length; j++) { //遍历Row中的每一列 tableInfo += tableObj.rows[i].cells[j].innerText; //获取Table中单元格的内容 tableInfo += \" \"; } tableInfo += \"\\n\"; } return tableInfo; }","tags":[]},{"title":"js 获得多个同name 的input输入框的值 （转载）","date":"2014-08-19T08:08:11.000Z","path":"posts/e38058a2.html","text":"js 获得多个同name 的input输入框的值 起初是使用document.all.id.length获得输入框的个数，但时而正常，时而显示undefined，效果不是很好，网上信息说document.all不是兼容所有浏览器的,现在似乎是只支持IE。 解决方法是如下： var els =document.getElementsByName(\"search\"); for (var i = 0, j = els.length; i &lt; j; i++){ alert(els[i].value); }","tags":[]},{"title":"mac系统如何显示和隐藏文件（转载）","date":"2014-08-15T09:40:46.000Z","path":"posts/41de9b2c.html","text":"苹果Mac OS X操作系统下，隐藏文件是否显示有很多种设置方法，最简单的要算在Mac终端输入命令。显示/隐藏Mac隐藏文件命令如下(注意其中的空格并且区分大小写)： 显示Mac隐藏文件的命令：defaults write com.apple.finder AppleShowAllFiles -bool true 隐藏Mac隐藏文件的命令：defaults write com.apple.finder AppleShowAllFiles -bool false 或者 显示Mac隐藏文件的命令：defaults write com.apple.finder AppleShowAllFiles YES 隐藏Mac隐藏文件的命令：defaults write com.apple.finder AppleShowAllFiles NO 输完单击Enter键，退出终端，重新启动Finder就可以了 重启Finder：鼠标单击窗口左上角的苹果标志–&gt;强制退出–&gt;Finder–&gt;重新启动","tags":[]},{"title":"Javascript:向表格添加或删除一行（转载）","date":"2014-08-14T03:54:00.000Z","path":"posts/a556ac97.html","text":"12345678910111213141516171819202122232425262728293031323334353637&lt;html&gt;&lt;head&gt;&lt;title&gt;title&lt;/title&gt;&lt;script type=&quot;text/javascript&quot;&gt;function delIndex(obj) &#123;var rowIndex = obj.parentNode.parentNode.rowIndex;//获得行下标alert(rowIndex);var tb = document.getElementById(&quot;tb&quot;);tb.deleteRow(rowIndex);//删除当前行add(rowIndex);//在当前行插入一行&#125;function add(rowIndex) &#123;var tb = document.getElementById(&quot;tb&quot;);if (rowIndex == &quot;-1&quot;) &#123;rowIndex = tb.rows.length;//默认在末尾插入一行&#125;var row = tb.insertRow(rowIndex);//在表格的指定插入一行var c1 = row.insertCell(0);c1.innerHTML = &quot;new&quot; + rowIndex;var c2 = row.insertCell(1);c2.innerHTML = &apos;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;delIndex(this)&quot;&gt;删除&lt;/a&gt;&apos;;&#125;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;input type=&quot;button&quot; value=&quot;添加一行&quot; onclick=&quot;add(&apos;-1&apos;)&quot; &gt;&lt;input type=&quot;button&quot; value=&quot;删除选中项&quot; onclick=&quot;del()&quot; /&gt;&lt;table id=&quot;tb&quot;&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;delIndex(this)&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;delIndex(this)&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;delIndex(this)&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;delIndex(this)&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;delIndex(this)&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;delIndex(this)&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;delIndex(this)&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;","tags":[]},{"title":"js&javascript js单击&事件修改html&body元素内容","date":"2014-08-07T07:42:49.000Z","path":"posts/82b0582a.html","text":"12345678910111213141516&lt;script&gt;function myFunction()&#123;document.getElementById(&quot;demo&quot;); // 找到元素document.getElementById(&quot;demo&quot;).innerHTML=&quot;Hello JavaScript!&quot;; // 改变内容&#125;function myFunction1()&#123;x=document.getElementById(&quot;demo&quot;); // 找到元素x.innerHTML=&quot;JavaScript 能改变 HTML 元素的内容。&quot;; // 改变内容&#125;&lt;/script&gt;&lt;button type=&quot;button&quot; onclick=&quot;myFunction()&quot;&gt;点击这里&lt;/button&gt;&lt;button type=&quot;button&quot; onclick=&quot;myFunction1()&quot;&gt;点击这里&lt;/button&gt;","tags":[]},{"title":"网页特殊符号HTML代码大全","date":"2014-07-24T11:28:33.000Z","path":"posts/67134e92.html","text":"HTML特殊字符编码大全：往网页中输入特殊字符，需在html代码中加入以&amp;开头的字母组合或以&amp;#开头的数字。下面就是以字母或数字表示的特殊符号大全。 字符 实体 字符 实体 字符 实体 字符 实体 ´ &amp;acute; © &amp;copy; &gt; &amp;gt; µ &amp;micro; &amp; &amp;amp; ° &amp;deg; ¡ &amp;iexcl; &amp;nbsp; ¦ &amp;brvbar; ÷ &amp;divide; ¿ &amp;iquest; ¬ &amp;not; § &amp;sect; • &amp;bull; ½ &amp;frac12; « &amp;laquo; ¶ &amp;para; ¨ &amp;uml; § &amp;sect; • &amp;bull; ½ &amp;frac12; « &amp;laquo; ¶ &amp;para; ¨ &amp;uml; ¸ &amp;cedil; ¼ &amp;frac14; &lt; &amp;lt; ± &amp;plusmn; × &amp;times; ¢ &amp;cent; ¾ &amp;frac34; ¯ &amp;macr; “ &amp;quot; ™ &amp;trade; € &amp;euro; £ &amp;pound; ¥ &amp;yen; „ &amp;bdquo; … &amp;hellip; · &amp;middot; › &amp;rsaquo; ª &amp;ordf; ˆ &amp;circ; “ &amp;ldquo; — &amp;mdash; ’ &amp;rsquo; º &amp;ordm; † &amp;dagger; ‹ &amp;lsaquo; – &amp;ndash; ‚ &amp;sbquo; ” &amp;rdquo; ‡ &amp;Dagger; ‘ &amp;lsquo; ‰ &amp;permil; &shy; &amp;shy; ˜ &amp;tilde; ≈ &amp;asymp; ⁄ &amp;frasl; ← &amp;larr; ∂ &amp;part; ♠ &amp;spades; ∩ &amp;cap; ≥ &amp;ge; ≤ &amp;le; ″ &amp;Prime; ∑ &amp;sum; ♣ &amp;clubs; ↔ &amp;harr; ◊ &amp;loz; ′ &amp;prime; ↑ &amp;uarr; ↓ &amp;darr; ♥ &amp;hearts; − &amp;minus; ∏ &amp;prod; ‍ &amp;zwj; ♦ &amp;diams; ∞ &amp;infin; ≠ &amp;ne; √ &amp;radic; ‌ &amp;zwnj; ≡ &amp;equiv; ∫ &amp;int; ‾ &amp;oline; → &amp;rarr; α &amp;alpha; η &amp;eta; μ &amp;mu; π &amp;pi; θ &amp;theta; β &amp;beta; γ &amp;gamma; ν &amp;nu; ψ &amp;psi; υ &amp;upsilon; χ &amp;chi; ι &amp;iota; ω &amp;omega; ρ &amp;rho; ξ &amp;xi; δ &amp;delta; κ &amp;kappa; ο &amp;omicron; σ &amp;sigma; ζ &amp;zeta; ε &amp;epsilon; λ &amp;lambda; φ &amp;phi; τ &amp;tau; Α &amp;Alpha; Η &amp;Eta; Μ &amp;Mu; Π &amp;Pi; Θ &amp;Theta; Β &amp;Beta; Γ &amp;Gamma; Ν &amp;Nu; Ψ &amp;Psi; Υ &amp;Upsilon; Χ &amp;Chi; Ι &amp;Iota; Ω &amp;Omega; Ρ &amp;Rho; Ξ &amp;Xi; Δ &amp;Delta; Κ &amp;Kappa; Ο &amp;Omicron; Σ &amp;Sigma; Ζ &amp;Zeta; Ε &amp;Epsilon; Λ &amp;Lambda; Φ &amp;Phi; Τ &amp;Tau; ς &amp;sigmaf; HTML常用特殊字符：只要你认识了 HTML 标记，你便会知道特殊字符的用处。 HTML原代码 显示结果 描述 &amp;lt; &lt; 小于号或显示标记 &amp;gt; &gt; 大于号或显示标记 &amp;amp; &amp; 可用于显示其它特殊字符 &amp;quot; “ 引号 &amp;reg; ® 已注册 &amp;copy; © 版权 &amp;trade; ™ 商标 &amp;ensp; 半个空白位 &amp;emsp; 一个空白位 &amp;nbsp; 不断行的空白","tags":[{"name":"html","slug":"html","permalink":"http://www.imsry.cn/tags/html/"},{"name":"实体","slug":"实体","permalink":"http://www.imsry.cn/tags/实体/"}]},{"title":"JS实现同时提交多个form基础方法","date":"2014-07-21T02:28:14.000Z","path":"posts/be0a1834.html","text":"12345678910111213141516171819202122232425&lt;script language=&quot;javascript&quot;&gt;//点击提交按钮触发下面的函数function submitit()&#123;//第一个表单var tform1= document.getElementById(&quot;formid1&quot;);//第二个表单var tform2= document.getElementById(&quot;formid2&quot;);//提交第一个表单tform1.submit();//提交第二个表单tform2.submit();&#125; &lt;/script&gt; 表单1 &lt;form id=&quot;formid1&quot; action=&quot;#&quot; method=&quot;post&quot; name=&quot;formed&quot;&gt; &lt;input name=&quot;tname&quot; type=&quot;text&quot; value=&quot;张三&quot; /&gt;&lt;/form&gt; 表单2 &lt;form id=&quot;formid2&quot; action=&quot;#&quot; method=&quot;post&quot; name=&quot;formed&quot;&gt; &lt;input name=&quot;tname&quot; type=&quot;text&quot; value=&quot;李四&quot; /&gt; &lt;input type=&quot;button&quot; value=&quot;提交&quot; onClick=&quot;javascript:submitit();&quot; /&gt;&lt;/form&gt;","tags":[{"name":"表单","slug":"表单","permalink":"http://www.imsry.cn/tags/表单/"}]},{"title":"弹出层－表单填写js实现","date":"2014-07-20T07:17:38.000Z","path":"posts/360bd407.html","text":"点击打开效果 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=GB2312&quot; /&gt;&lt;title&gt;弹出提示&lt;/title&gt;&lt;style&gt;* &#123;margin:0;padding:0;font-size:12px;&#125;html,body &#123;height:100%;width:100%;&#125;#content &#123;background:#f8f8f8;padding:30px;height:100%;&#125;#content a &#123;font-size:30px;color:#369;font-weight:700;&#125;#alert &#123;border:1px solid #369;width:300px;height:150px;background:#e2ecf5;z-index:1000;position:absolute;display:none;&#125;#alert h4 &#123;height:20px;background:#369;color:#fff;padding:5px 0 0 5px;&#125;#alert h4 span &#123;float:left;&#125;#alert h4 span#close &#123;margin-left:210px;font-weight:500;cursor:pointer;&#125;#alert p &#123;padding:12px 0 0 30px;&#125;#alert p input &#123;width:120px;margin-left:20px;&#125;#alert p input.myinp &#123;border:1px solid #ccc;height:16px;&#125;#alert p input.sub &#123;width:60px;margin-left:30px;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&quot;content&quot;&gt;&lt;a href=&quot;#&quot;&gt;注册&lt;/a&gt;&lt;/div&gt;&lt;div id=&quot;alert&quot;&gt;&lt;h4&gt;&lt;span&gt;现在注册&lt;/span&gt;&lt;span id=&quot;close&quot;&gt;关闭&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;label&gt;用户名&lt;/label&gt;&lt;input type=&quot;text&quot; class=&quot;myinp&quot; onmouseover=&quot;this.style.border=&apos;1px solid #f60&apos;&quot; onfoucs=&quot;this.style.border=&apos;1px solid #f60&apos;&quot; onblur=&quot;this.style.border=&apos;1px solid #ccc&apos;&quot; /&gt;&lt;/p&gt;&lt;p&gt;&lt;label&gt;密 码&lt;/label&gt;&lt;input type=&quot;password&quot; class=&quot;myinp&quot; onmouseover=&quot;this.style.border=&apos;1px solid #f60&apos;&quot; onfoucs=&quot;this.style.border=&apos;1px solid #f60&apos;&quot; onblur=&quot;this.style.border=&apos;1px solid #ccc&apos;&quot; /&gt;&lt;/p&gt;&lt;p&gt;&lt;input type=&quot;submit&quot; value=&quot;注册&quot; class=&quot;sub&quot; /&gt;&lt;input type=&quot;reset&quot; value=&quot;重置&quot; class=&quot;sub&quot; /&gt;&lt;/p&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt;var myAlert = document.getElementById(&quot;alert&quot;);var reg = document.getElementById(&quot;content&quot;).getElementsByTagName(&quot;a&quot;)[0];var mClose = document.getElementById(&quot;close&quot;);reg.onclick = function()&#123;myAlert.style.display = &quot;block&quot;;myAlert.style.position = &quot;absolute&quot;;myAlert.style.top = &quot;50%&quot;;myAlert.style.left = &quot;50%&quot;;myAlert.style.marginTop = &quot;-75px&quot;;myAlert.style.marginLeft = &quot;-150px&quot;;mybg = document.createElement(&quot;div&quot;);mybg.setAttribute(&quot;id&quot;,&quot;mybg&quot;);mybg.style.background = &quot;#000&quot;;mybg.style.width = &quot;100%&quot;;mybg.style.height = &quot;100%&quot;;mybg.style.position = &quot;absolute&quot;;mybg.style.top = &quot;0&quot;;mybg.style.left = &quot;0&quot;;mybg.style.zIndex = &quot;500&quot;;mybg.style.opacity = &quot;0.3&quot;;mybg.style.filter = &quot;Alpha(opacity=30)&quot;;document.body.appendChild(mybg);document.body.style.overflow = &quot;hidden&quot;;&#125;mClose.onclick = function()&#123;myAlert.style.display = &quot;none&quot;;mybg.style.display = &quot;none&quot;;&#125;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","tags":[]},{"title":"mac(Linux)下批改mysql服务器的默认字符集为utf8","date":"2014-07-07T06:17:25.000Z","path":"posts/d9eb5165.html","text":"在终端操作数据库：mysql&gt; show variables like ‘%char%’;+————————–+——————————————————–+| Variable_name | Value |+————————–+——————————————————–+| character_set_client | utf8 || character_set_connection | utf8 || character_set_database | latin1 || character_set_filesystem | binary || character_set_results | utf8 || character_set_server | latin1 || character_set_system | utf8 || character_sets_dir | /usr/local/mysql-5.6.19-osx10.7-x86_64/share/charsets/ |+————————–+——————————————————–+这里可以看见 character_set_database 和 character_set_server 都是默认的latin1，这就表明创建的数据库和表都是以latin1为字符集的，在这种情况下，无法正常使用中文！ 下面简单说一下怎么更改这个默认字符集：1.将本地mysql目录中的支持文件my-xxxx.cnf copy到/etc/my.cnf 命令：（ sudo cp /usr/local/mysql/support-files/my-default.cnf /etc/my.cnf ）2.编辑my.cnf 命令（sudo vi /etc/my.cnf )3.在文件中添加两段代码：“括号中没有的自己补上”在[client]部分加入：default-character-set = utf8在[mysqld]部分加入：character-set-server = utf84.重启mysql;(提示，如果重启失败，尝试将[client]下面的default-character-set=utf8改成[mysqld]中的一样) 然后就可以查看字符集是否修改成功了，登录mysql 命令查询：mysql&gt; show variables like ‘%char%’;+————————–+——————————————————–+| Variable_name | Value |+————————–+——————————————————–+| character_set_client | utf8 || character_set_connection | utf8 || character_set_database | utf8 || character_set_filesystem | binary || character_set_results | utf8 || character_set_server | utf8 || character_set_system | utf8 || character_sets_dir | /usr/local/mysql-5.6.19-osx10.7-x86_64/share/charsets/ |+————————–+——————————————————–+8 rows in set (0.00 sec)这样就成功了。","tags":[{"name":"mysql","slug":"mysql","permalink":"http://www.imsry.cn/tags/mysql/"},{"name":"MacBook","slug":"MacBook","permalink":"http://www.imsry.cn/tags/MacBook/"},{"name":"utf8","slug":"utf8","permalink":"http://www.imsry.cn/tags/utf8/"}]},{"title":"Javascript中write的注意事项","date":"2014-07-07T02:08:15.000Z","path":"posts/383e8964.html","text":"在网页的学习中，需要利用js向页面写入文字，此时需要用到document.write(); 但是，使用这个方法的时候需要注意，如果在页面都加载完成后调用这个方法，将会导致之前的内容全被它给覆盖重写。 例如： &lt;html&gt; &lt;head&gt; &lt;script type=”text/javascript”&gt; function myfunction(txt) { document.write(txt); } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;form&gt; &lt;input type=”button” onclick=”myfunction(‘哎呀！我赢了！你们都不见啦，哈哈！’)” value=”点我试试！”&gt; &lt;/form&gt; &lt;p&gt;通过点击这个按钮，可以调用一个函数。该函数会输出传递给它的参数。 此时所有内容被重写！&lt;/p&gt; &lt;/body&gt; &lt;/html&gt;","tags":[]},{"title":"如何让局域网（内网）服务器被广域网用户访问","date":"2014-07-06T04:17:47.000Z","path":"posts/7478fcfd.html","text":"随着IPv4的资源逐渐耗尽而新的IPv6还未被广泛使用，多用户公用同一广域IP成为了一个很好的解决办法，这种方法就类似于我们每个家庭使用的路由器，连接到同一个路由器的计算机或者手机都是同用一个广域网IP，路由器给连接到的每台设备都分配一个内网IP，内网用户可以通过广域网IP访问互联网中的服务器，但是互联网中的其他用户无法通过这个广域IP直接访问到内网的设备，因为内网中的服务器和互联网全部都通过同一个广域IP进行通信。要想使内网的服务器被互联网访问，那么需要做的就是端口映射！ 如何进行映射？用家用路由器来做个简单的教程吧。 首先，我们需要登录路由器管理页面，在左边选择“虚拟服务器”－“端口映射”，这时右边出来一个映射表，把你内网中服务器的ip地址和对应的端口填入表中，选择启用，然后保存，重启路由器，路由器的配置就完成了。配置如下图所示： 现在我们来测试一下能否通过广域ip来进行访问这台服务器，注意：不可以在这台服务器上测试，因为不用映射也能访问！（不多解释） 访问的时候记得带上端口号，如果是80端口的话可以省略。 上图是成功的案例，通过广域ip＋对应端口号成功访问到我们内网中ip为192.168.0.6的服务器。","tags":[]},{"title":"利用js在dedecms标签内插入图片","date":"2014-07-04T12:24:38.000Z","path":"posts/44c8ea86.html","text":"加入javascript函数代码： &lt;script&gt; function gettempletsurl(string){ document.write(“&lt;img src=\\”{dede:global.cfg_basehost/｝{dede:global.cfg_templets_skin/}/“+string+”\\” /&gt;”); } &lt;/script&gt;在需要插入图片的地方插入一下代码：&lt;script&gt; gettempletsurl(“images/right-arrow.jpg”); //引号内写默认模版下的图片路径 &lt;/script&gt;&nbsp;这种利用javascript插入图片的方法完美解决了在dedecms中标签嵌套无法插入图片的问题！","tags":[]},{"title":"MySQL常用命令","date":"2014-07-03T08:36:30.000Z","path":"posts/92cd9797.html","text":"连接MySQL数据库： mysql -h host -u user -p 1.SHOW DATABASES; 查询已有的数据库 2.USE DatabaseName; 使用某个数据库 3.SHOW TABLES; 查询已有的表单； 4.SELECT * FROM TableName; 检索表单所有数据（＊代表所有，可用字段名替代） 5.CREATE TABLE TableName (Id INT, Name VARCHAR(20)); 创建一个表 6.DESCRIBE TableName; 显示表的结构 7.INSERT INTO TableName VALUES (2014,”Jack”);向表中添加记录INSERT INTO TableName (Id,Name) VALUES (2014,”Jack”); 8.DROP TABLE TableName; 删除表 9.DELATE FROM TableName; 清空表 10.UPDATE TableName set Name=”Tom” where Id=2014;更新表中数据","tags":[]}]